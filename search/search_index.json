{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to Youngnotes","text":""},{"location":"#self-introduction","title":"Self-Introduction","text":"<ul> <li>\ud83d\udc4b Hi, I\u2019m @yangmei-zju</li> <li>\ud83d\udc40 I\u2019m interested in math, computer science and mechanics...</li> <li>\ud83d\udc9e\ufe0f I'm now in my sophomore year at @ZJU</li> <li>\ud83c\udf31 I\u2019m currently learning Oridinary Differential Equations, CS61a, Theoretical Machanics, Fluid Mechanics...</li> <li>\ud83d\udceb How to reach me: yangmei.2003@outlook.com.</li> </ul>"},{"location":"#noteslist","title":"NotesList","text":"<p>Previous Notes</p> <p> <p>Updating Notes</p> <p>"},{"location":"CS/c%E5%B0%8F%E7%A8%8B/","title":"C\u5c0f\u7a0b","text":"<p>c\u5c0f\u7a0b\u7684\u9519\u9898\u4ee5\u53ca\u4e00\u4e9b\u96f6\u788e\u7684\u77e5\u8bc6\u70b9\u603b\u7ed3\u3002\u53c2\u8003</p> <p>https://www.yuque.com/linguisty/zju_courses/correction_of_c#OJEwz</p> <p></p>"},{"location":"CS/c%E5%B0%8F%E7%A8%8B/#_1","title":"\u7406\u8bba","text":"<ul> <li>\u8fd0\u7b97\u7b26</li> <li>C \u8bed\u8a00\u4e2d<code>5/9</code>\u7b49\u4e8e 0\uff0c\u800c<code>5.0/9</code>\u7b49\u4e8e 0.555\u2026\u2026</li> <li><code>-7/2 = -3; 7/2 = 3;</code></li> <li>\u4f7f\u7528\u4e58\u6cd5\u65f6\u8981\u7528*\uff0c<code>2*i-1</code>\u3002</li> </ul> <pre><code>#include &lt;stdio.h&gt;\nint main ()\n{\n    int n;\n    double sum = 0;\n    scanf(\"%d\",&amp;n);\n    for (int i = 1; i &lt;=n;i++)\n    {\n        sum = sum + 1.0/(2*i - 1);\n    }\n    printf(\"sum = %.6f\",sum);\n    return 0;\n}\n</code></pre> <ul> <li>\u68c0\u67e5\u8be5\u8d4b\u503c\u7684\u53d8\u91cf\u662f\u5426\u90fd\u8d4b\u503c\u4e86\u6216\u8005\u521d\u59cb\u5316\u4e86\u3002</li> <li>\u521d\u59cb\u5316<code>int a , b = 0;</code>a\u672a\u88ab\u521d\u59cb\u5316\uff0cb\u521d\u59cb\u5316\u4e3a0\u3002</li> <li>\u5224\u65ad\u76f8\u7b49\u5173\u7cfb\u662f<code>==</code>\u4e0d\u662f<code>=</code>\uff0c\u5355\u4e2a\u7b49\u53f7\u662f\u8d4b\u503c\u7b26\u3002</li> </ul> <pre><code>int x, y;\nscanf(\"%d\", &amp;x);\nif (x &gt; 0){ \n    y = 1;\n}else if (x = 0){\n    y = 0;\n}else{\n   y = -1;\n}  \n//\u8f93\u5165-10\uff0cx\u7684\u503c\u4e3a0;\n//\u8f93\u516510\uff0cx\u7684\u503c\u4e3a10\u3002\n</code></pre> <ul> <li>do-while \u5faa\u73af\u7684<code>while(\u5faa\u73af\u6761\u4ef6);</code>\u6700\u540e\u9762\u662f\u6709\u5206\u53f7\u7684\u3002</li> <li><code>#define MAX 11</code> \u65e0\u5206\u53f7\u3002</li> <li><code>double fact(int n);</code>\u51fd\u6570\u58f0\u660e\u653e\u5728\u5f00\u5934\u9700\u8981<code>;</code>\u3002</li> <li><code>struct student{ };</code></li> <li>switch - case \u8bed\u53e5</li> <li>\u68c0\u67e5 switch \u8bed\u53e5\u4e2d\u5404\u4e2a case \u540e\u9762\u662f\u5426\u9700\u8981<code>break;</code>\u3002</li> <li>\u4e0d\u4f7f\u7528<code>break</code>\u65f6\uff0c\u5c06\u4ece\u76f8\u7b49\u7684\u5e38\u91cf\u8868\u8fbe\u5f0f\u5f00\u59cb\uff0c\u6267\u884c\u5176\u540e\u6240\u6709\u8bed\u53e5\u76f4\u5230<code>break;</code>\u6216\u8005\u6267\u884c\u5b8c\u6240\u6709\u60c5\u51b5\u3002</li> <li>\u5728<code>switch</code> \u8bed\u53e5\u4e2d\uff0c\u8868\u8fbe\u5f0f\u548c\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u503c\u4e00\u822c\u662f\u6574\u578b\u6216\u5b57\u7b26\u578b\uff0c\u6240\u6709\u7684\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u503c\u90fd\u4e0d\u76f8\u7b49\u3002</li> </ul> <pre><code>switch ( k ) {\n    case 1: printf(\"one\"); break;\n    case 2: printf(\"two\"); break;\n    case 1: printf(\"one\"); break;\n    default: printf(\"zero\"); break;\n}//\u5e38\u91cf\u91cd\u590d\nn = 10;\nswitch ( k ) {\n    case n%3: printf(\"one\");\n    case n%4: printf(\"two\");\n    default: printf(\"zero\");\n}//\u975e\u5e38\u91cf\nswitch ( k%2 ) {\n    default: printf(\"zero\"); break;\n    case 1: printf(\"one\");\n    case 1+1: printf(\"two\");\n}//\u8fd9\u662f\u5bf9\u7684\n</code></pre> <ul> <li>\u586b\u7a7a\u9898\u6ce8\u610f\u68c0\u67e5\u6709\u6ca1\u6709\u901a\u8fc7<code>++</code>\u3001<code>--</code>\u548c\u6307\u9488\u5bf9\u53d8\u91cf\u7684\u4fee\u6539\u3002</li> <li>\u8981\u7528 strlen( ) \u7b49\u51fd\u6570\u7684\u8bdd\u522b\u5fd8\u4e86\u5f15\u7528 string.h \u5934\u6587\u4ef6\u3002</li> </ul> <ul> <li>\u8f93\u5165scanf\uff08\uff09\uff0c<code>scanf(\"%d\",&amp;x);</code>\u3002\u68c0\u67e5\u8f93\u5165\u8f93\u51fa\u5c24\u5176\u662f\u8f93\u51fa\u7684\u683c\u5f0f\u3002</li> <li><code>gets() puts()</code>\u5728PTA\u4f7f\u7528\u65f6\u4f1a\u62a5\u9519\u3002</li> <li>\u5224\u65ad\u9898</li> <li>\u82e5\u53d8\u91cf\u5b9a\u4e49\u4e3adouble x;\uff0c\u5219x % 2\u662f\u7b26\u5408C\u8bed\u8a00\u8bed\u6cd5\u7684\u8868\u8fbe\u5f0f\u3002\u53d6\u6574\u8fd0\u7b97\u7b26\u53ea\u80fd\u662f\u5bf9\u6574\u578b\u3002\u2714\ufe0f</li> <li>\u5047\u8bbe\u67d0\u6bb5C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e86\u4e09\u4e2a\u53d8\u91cfa\u3001b\u548cc\u5e76\u4e14\u4e09\u4e2a\u53d8\u91cf\u90fd\u4e0d\u4e3a0\uff0c\u5219\u8868\u8fbe\u5f0fa / b * c\u548ca * c / b\u662f\u7b49\u4ef7\u7684\uff0c\u5176\u503c\u76f8\u540c\u3002\u274c</li> <li>for\u5faa\u73af\u4e0d\u662f\u4ece<code>i = 0</code>\u5f00\u59cb\u65f6\uff0c\u8981\u68c0\u67e5\u672a\u8fdb\u5165\u5faa\u73af\u7684\u7279\u6b8a\u60c5\u51b5\uff1bdouble n \uff1d\u00bd\uff0c\u6b64\u65f6n\u4e3a0.\uff0c\u56e0\u4e3a\u5148\u8ba1\u7b97\u00bd\u4e3a0\uff0c\u518d\u5c060\u8f6c\u5316\u4e3adouble\u7c7b\u578b0.\uff0c\u6240\u4ee5\u4e0d\u80fd\u56e0\u4e3a\u53d8\u91cf\u7c7b\u578b\u4e3adouble\uff0c\u5c31\u8ba4\u4e3a\u7ed3\u679c\u4e3a\u6d6e\u70b9\u6570\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e0d\u7528\u6d6e\u70b9\u6570\uff0c\u5fc5\u987b\u75281.0/2\u8fdb\u884c\u8ba1\u7b97\u3002 <ul> <li>\u5199\u51fa\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684C\u8868\u8fbe\u5f0f\uff1a\u201cyear \u662f\u95f0\u5e74\uff0c\u5373 year \u80fd\u88ab 4 \u6574\u9664\u4f46\u4e0d\u80fd\u88ab 100 \u6574\u9664\uff0c\u6216 year \u80fd\u88ab 400 \u6574\u9664\u3002\u201d\u4e00\u79cd\u6b63\u786e\u89e3\u7b54\uff1ayear%4==0 &amp;&amp; year%100!=0 || year%400==0\u53ef\u4ee5\u8fd9\u4e48\u8bb0\uff1a||\u957f\u5f97\u66f4\u9ad8\uff0c\u4f18\u5148\u7ea7\u5374\u53cd\u800c\u6bd4&amp;&amp;\u4f4e\u3002\u5f53\u7136\uff0c\u8bb0\u4e0d\u4f4f\u8fd9\u4e2a\u4f18\u5148\u7ea7\u662f\u5f88\u6b63\u5e38\u7684\uff0c\u5199\u4ee3\u7801\u7684\u4eba\u6700\u597d\u8003\u8651\u5230\u8bfb\u4ee3\u7801\u7684\u4eba\u7684\u611f\u53d7\u3002\u6240\u4ee5\u66f4\u597d\u7684\u89e3\u7b54\u662f\uff1a((year%4==0) &amp;&amp; (year%100!=0)) || (year%400==0</li> </ul> </li> </ul> <ul> <li>\u5728C\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5176\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\u7684\u91cf\u79f0\u4e3a\u5e38\u91cf\uff0c\u5176\u503c\u53ef\u4ee5\u6539\u53d8\u7684\u91cf\u79f0\u4e3a\u53d8\u91cf\u3002\uff08\u2714\ufe0f\uff09\u6709\u4e9b\u540c\u5b66\u5b66\u5230\u540e\u6765\u4f1a\u628a\u201c\u6807\u8bc6\u7b26\u201d\u548c\u201c\u53d8\u91cf\u201d\u641e\u6df7\uff0c\u4ee5\u4e3a\u6807\u8bc6\u7b26\u5c31\u662f\u53d8\u91cf\u540d\u3002\u6807\u8bc6\u7b26\u662f\u7528\u6237\u7f16\u7a0b\u65f6\u4f7f\u7528\u7684\u540d\u5b57\uff0c\u7528\u4e8e\u7ed9\u53d8\u91cf\u3001\u5e38\u91cf\u3001\u51fd\u6570\u7b49\u547d\u540d\uff0c\u4ee5\u5efa\u7acb\u8d77\u540d\u79f0\u4e0e\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> </ul> <ul> <li>\u8868\u8fbe\u5f0f<code>(z=0, (x=2)||(z=1),z)</code>\u7684\u503c\u662f\uff08 0 \uff09</li> </ul> <p>\u7528printf( )\u6253\u5370\u8fd9\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u8f93\u51fa0\u3002\u6574\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u6700\u540e\u4e00\u4e2a\u5206\u53e5\u7684\u503c\u3002\u5728||\u5904\uff0cx=2\u7684\u8fd4\u56de\u503c\u662f2\uff0c\u8868\u793atrue\uff0c\u6240\u4ee5\u6574\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u4e00\u5b9a\u662ftrue\uff0c\u6240\u4ee5\u540e\u9762\u7684z=1\u5c31\u4e0d\u6267\u884c\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\u6574\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a1\u3002\u5982\u679c||\u5de6\u8fb9\u662fx=0\uff0c\u8fd4\u56de0\uff0c\u5c31\u5f97\u7ee7\u7eed\u6267\u884cz=1\u624d\u80fd\u5224\u65ad\u6574\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u662ftrue\u8fd8\u662ffalse\uff0c\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a1\u3002\u8fd9\u79cd\u53ea\u8ba1\u7b97\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\u5c31\u5df2\u7ecf\u80fd\u786e\u5b9a\u6574\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u7684\u73b0\u8c61\u79f0\u4e3a\u201c\u903b\u8f91\u77ed\u8def\u201d\u3002exp1 &amp;&amp; exp2,\u82e5\u4e3aexp1\u4e3afalse,\u5219\u4e0d\u5bf9exp2\u64cd\u4f5c\uff0c\u903b\u8f91\u8868\u8fbe\u5f0f\u503c\u4e3a0\uff1b exp1|| exp2,\u82e5exp1\u4e3atrue,\u5219\u4e0d\u8ba1\u7b97exp2\uff0c\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a1.</p> <ul> <li>\u4e3a\u4e86\u68c0\u67e5\u4ee5\u4e0b if-else \u8bed\u53e5\u7684\u4e24\u4e2a\u5206\u652f\u662f\u5426\u6b63\u786e\uff0c\u81f3\u5c11\u9700\u8981\u8bbe\u8ba1 3 \u7ec4\u6d4b\u8bd5\u7528\u4f8b\u3002\uff08\u2714\ufe0f\uff09</li> </ul> <p>\u6d4b\u8bd5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5355\u72ec\u6d4b\u8bd5\u4e34\u754c\u70b9\u3002\u5c3d\u7ba1\u8fd9\u91cc x \u7b49\u4e8e 15 \u7684\u60c5\u51b5\u4e5f\u662f\u8fdb\u5165<code>if(x &lt;= 15)</code>\u7684\u5206\u652f\uff0c\u4f46\u5fc5\u987b\u5355\u72ec\u6d4b\u8bd5\uff0c\u4e5f\u5c31\u662f\u9700\u8981 x \u5c0f\u4e8e / \u7b49\u4e8e / \u5927\u4e8e 15\uff0c\u4e09\u79cd\u6d4b\u8bd5\u7528\u4f8b\u3002 <pre><code>if (x &lt;= 15)\n{ \n   y = 4 * x / 3;\n} \nelse\n{\n   y = 2.5 * x - 10.5;\n}\n</code></pre></p> <ul> <li>\u5728C\u8bed\u8a00\u7684\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u5982\u679c\u7701\u7565\u4e86return\u8bed\u53e5\uff0c\u51fd\u6570\u5c31\u65e0\u6cd5\u8fd4\u56de\u4e3b\u8c03\u51fd\u6570\u3002\u274c</li> <li> <p>\u82e5\u8868\u8fbe\u5f0fsizeof(int)\u7684\u503c\u4e3a4\uff0c\u5219int\u7c7b\u578b\u6570\u636e\u53ef\u4ee5\u8868\u793a\u7684\u6700\u5927\u6574\u6570\u4e3a2^31\u22121\u3002\u2714\ufe0f <pre><code>char str[]= \"abc\\0def\\0ghi\", *p = str;\n\n  printf(\"%s\", p+5) ;//\u7b54\u6848\u4e3a ef,printf()\u9047\u5230'\\0'\u5219\u7ed3\u675f\u8f93\u51fa\n</code></pre></p> </li> <li> <p>\u6784\u9020\u7c7b\u578b-\u6570\u7ec4\uff0c\u7ed3\u6784\uff0c\u6307\u9488</p> </li> <li><code>int *s,a[] = {1,3,5}``s[0] = a[0]</code>\u662f\u9519\u8bef\u7684\u8d4b\u503c\u65b9\u6cd5\uff0cs\u4e3a\u8d4b\u503c\uff0c\u4e0d\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e0d\u80fd\u7528s[0];<code>s = &amp;a[1]</code>s\u4e3aa[1]\u7684\u5730\u5740</li> <li><code>char s1[] = \"hello,world\";s1[0] = 'H';puts(s1);</code>s1\u662f\u7701\u7565\u6570\u7ec4\u957f\u5ea6\u7684\u5b57\u7b26\u6570\u7ec4\u540d\uff0c\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32\u5b58\u653e\u5728\u5806\u6808\u3002<code>char *s2 = \"hello,world\";s2[0] = 'H';puts(s2);</code>s2\u6307\u5411\u5b57\u7b26\u4e32\u5e38\u91cf\"hello,world\"\u7684\u5b57\u7b26\u6307\u9488\uff0c\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32\u5b58\u653e\u5728\u6587\u5b57\u5e38\u91cf\u533a\u3002\u6587\u5b57\u5e38\u91cf\u533a\u5b58\u653e\u7684\u5b57\u7b26\u4e32\u5e38\u91cf\u4e0d\u5141\u8bb8\u4fee\u6539\uff0c\u56e0\u6b64\u9519\u8bef\u3002</li> <li><code>char str[] = \"hello\\t\\0world\\n\";printf(\"%d %d %c\",sizeof(str),strlen(str),``*(str+10));</code>\u6ce8\u610f\u8f6c\u4e49\u5b57\u7b26\\t\\0\\n\uff0c\\x\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u4e0d\u662f\u4e09\u4e2a\u5b57\u7b26\uff0csizeof\u5168\u90e8\u5b57\u7b26\uff0cstrlen()\uff0c'\\0'\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26\u4e14\u4e0d\u8bb0'\\0'\u3002</li> <li>\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4ee5\u53ca\u5168\u5c40\u53d8\u91cf</li> <li>\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4e0e\u7ed3\u5408\u6027</li> <li>\u8fd0\u7b97\u53ca\u6d41\u7a0b\u63a7\u5236</li> <li>\u8868\u8fbe\u5f0f\u8bed\u53e5\u3001\u7a7a\u8bed\u53e5\u3001\u590d\u5408\u8bed\u53e5</li> <li>\u63a7\u5236\u8bed\u53e5<code>break,continue,return</code></li> <li>\u9009\u62e9\u63a7\u5236 <code>if(),if else(),else\\switch(),case,break</code></li> <li>\u5faa\u73af\u8bed\u53e5<code>for (statement0;statement1;statement2)</code><ul> <li>for(c = getchar(\uff09\uff1bgetchar() != '#';c = getchar()) putchar\u00a9;\u8f93\u516512345#\u8f93\u51fa13 </li> </ul> </li> </ul>"},{"location":"CS/c%E5%B0%8F%E7%A8%8B/#_2","title":"\u4e66\u672c\u77e5\u8bc6\u70b9\uff1a","text":"<p>\u53ef\u80fd\u8003\u7684\u5b9a\u4e49\u6027\u548c\u6982\u5ff5\u6027\u7684\u77e5\u8bc6\u70b9\uff0c\u4ee5\u53ca\u4e66\u4e0a\u9700\u8981\u6ce8\u610f\u7684\u6613\u9519\u70b9\u3002</p> <ul> <li>C\u7a0b\u5e8f\u7531\u51fd\u6570\u6784\u6210\u3002</li> <li>\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u5fc5\u987b\u5177\u5907\u6570\u636e\u8868\u8fbe\u548c\u6d41\u7a0b\u63a7\u5236\u7684\u529f\u80fd\u3002</li> <li>C\u8bed\u8a00\u4e2d\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u6784\u6210\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u53ef\u4ee5\u662f\u6570\u5b57\uff1bC\u8bed\u8a00\u4e2d\uff0c\u6807\u8bc6\u7b26\u4e2d\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u662f\u6709\u533a\u522b\u7684\u3002</li> <li>C\u8bed\u8a00\u751f\u6210\u7684\u76ee\u6807\u4ee3\u7801\u8d28\u91cf\u9ad8\uff0c\u8fd0\u884c\u6548\u7387\u9ad8\u3002</li> <li>C\u8bed\u8a00\u662f\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u79fb\u690d\u6027\u6bd4\u8f83\u4e0d\u597d\u3002</li> <li>else \u548c if \u5339\u914d\u539f\u5219\uff1aelse \u4e0e\u6700\u9760\u8fd1\u5b83\u7684\uff0c\u6ca1\u6709\u522b\u7684else\u5339\u914d\u7684if \u76f8\u5339\u914d\u3002(\u4e0e\u7f29\u8fdb\u65e0\u5173\uff0c\u4f46\u662f\u6613\u9519\uff09</li> <li>\u6539\u53d8\u914d\u5bf9\uff1a<ul> <li>\u4f7f\u7528\u5927\u62ec\u53f7\uff0c\u6784\u9020\u590d\u5408\u8bed\u53e5\uff1b</li> <li>\u589e\u52a0\u7a7a\u7684else\u3002</li> </ul> </li> <li>C\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4ee3\u8868\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u3002</li> <li>\u7f16\u8bd1\u7a0b\u5e8f \u9996\u5148\u8981\u5bf9 \u6e90\u7a0b\u5e8f \u8fdb\u884c \u8bcd\u6cd5\u5206\u6790\uff0c\u7136\u540e\u8fdb\u884c \u8bed\u6cd5\u5206\u6790 \u548c \u8bed\u4e49\u5206\u6790</li> <li>\u7f16\u5199\u7a0b\u5e8f  -&gt;  \u7f16\u8bd1\u751f\u6210\u4e8c\u8fdb\u5236obj\u76ee\u6807\u7a0b\u5e8f\u6587\u4ef6  -&gt; \u4e0e\u5e93\u51fd\u6570\u8fdb\u884c\u8fde\u63a5\uff0c\u5f62\u6210exe\u53ef\u6267\u884c\u6587\u4ef6\u3002</li> <li>\u51fd\u6570</li> <li>\u51fd\u6570\u7684\u5b9e\u53c2\u53ef\u4ee5\u662f\u5e38\u91cf\uff0c\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\uff0c\u5176\u4f5c\u7528\u662f\u628a\u5e38\u91cf\uff0c\u53d8\u91cf\u6216\u8005\u8868\u8fbe\u5f0f\u7684\u503c\u4f20\u9012\u7ed9\u5f62\u53c2\uff1b\u5f62\u53c2\u5fc5\u987b\u662f\u53d8\u91cf\uff0c\u7528\u4e8e\u63a5\u53d7\u5b9e\u53c2\u4f20\u8fc7\u6765\u7684\u503c\u3002\u5b9e\u53c2\u4e0e\u5f62\u53c2\u4e00\u4e00\u5bf9\u5e94\uff0c\u6570\u91cf\u5e94\u76f8\u540c\uff0c\u987a\u5e8f\u5e94\u4e00\u81f4\uff0c\u7c7b\u578b\u5c3d\u91cf\u4fdd\u6301\u4e00\u81f4</li> <li>return \u8bed\u53e5\u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\u3002</li> <li>\u5728\u4e0d\u8fd4\u56de\u7ed3\u679c\u7684\u51fd\u6570<code>void</code>\u4e0d\u80fd\u7701\u7565\uff1b\u5426\u5219\uff0c\u51fd\u6570\u7c7b\u578b\u88ab\u9ed8\u8ba4\u5b9a\u4e49\u4e3a<code>int</code></li> </ul> <p></p>"},{"location":"CS/c%E5%B0%8F%E7%A8%8B/#_3","title":"\u4e66\u672c\u7b14\u8bb0","text":"<p>\u81ea\u5df1\u4e0d\u719f\u6089\u4e86\u89e3\u5fc5\u987b\u8bb0\u5fc6\u7684\u77e5\u8bc6\u70b9</p> <ul> <li>\u968f\u673a\u6570\uff1a</li> </ul> <p><code>#include &lt;time.h&gt;</code> <code>srand(time(0));//\u8bbe\u5b9a\u968f\u673a\u6570\u7684\u4ea7\u751f\u4e0e\u7cfb\u7edf\u59cb\u7ec8\u76f8\u5173\u8054</code> <code>randnumber = rand()%100 + 1;//\u8ba1\u7b97\u673a\u968f\u673a\u4ea7\u751f\u4e00\u4e2a1~100\u7684\u968f\u673a\u6570</code></p> <ul> <li>\u5c40\u90e8\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf</li> <li>C\u8bed\u8a00\u4e2d\u628a\u5b9a\u4e49\u5728\u51fd\u6570\u5185\u90e8\uff08\u5305\u62ecmain\u51fd\u6570\uff09\u4ee5\u53ca\u590d\u5408\u8bed\u53e5{}\u7684\u53d8\u91cf\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\u6709\u6548\u4f5c\u7528\u8303\u56f4\u5c40\u9650\u4e8e\u51fd\u6570\u5185\u90e8\u6216\u8005\u590d\u5408\u8bed\u53e5\u5185\uff1b\u5c40\u90e8\u53d8\u91cf\u4e00\u822c\u5b9a\u4e49\u5728\u51fd\u6570\u6216\u8005\u590d\u5408\u8bed\u53e5\u7684\u5f00\u59cb\u5904\uff0c\u6807\u51c6C\u89c4\u5b9a\u5176\u4e0d\u80fd\u5b9a\u4e49\u5728\u4e2d\u95f4\u4f4d\u7f6e\u3002</li> <li>\u5b9a\u4e49\u5728\u51fd\u6570\u5916\u800c\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u51fd\u6570\u7684\u53d8\u91cf\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf\u3002\u4f5c\u7528\u8303\u56f4\u4ece\u5b9a\u4e49\u5f00\u59cb\u5230\u7a0b\u5e8f\u6240\u5728\u6587\u4ef6\u7684\u7ed3\u675f\uff0c\u5bf9\u4f5c\u7528\u8303\u56f4\u5185\u7684\u6240\u6709\u51fd\u6570\u90fd\u8d77\u4f5c\u7528\u3002\u4e00\u822c\uff08\u4e5f\u53ef\u5b9a\u4e49\u5728\u5176\u4ed6\u51fd\u6570\u5916\u90e8\u5730\u65b9\uff09\u5b9a\u4e49\u5728\u7a0b\u5e8f\u7684\u6700\u524d\u9762\uff0c\u5373\u7b2c\u4e00\u4e2a\u51fd\u6570\u7684\u524d\u9762\u3002</li> <li>\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u5728\u8be5\u51fd\u6570\u4e2d\u5168\u5c40\u53d8\u91cf\u4e0d\u8d77\u4f5c\u7528\uff0c\u800c\u7531\u5c40\u90e8\u53d8\u91cf\u8d77\u4f5c\u7528\u3002</li> <li>\u53d8\u91cf\u751f\u5b58\u5468\u671f\u4e0e\u9759\u6001\u5c40\u90e8\u53d8\u91cf</li> <li>\u81ea\u52a8\u53d8\u91cf\uff1a\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u4e3a\u5176\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff1b\u4e00\u65e6\u51fd\u6570\u8c03\u7528\u7ed3\u675f\uff08\u4e0d\u4e00\u5b9a\u662f\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\uff09\uff0c\u6240\u6709\u5206\u914d\u7ed9\u5c40\u90e8\u53d8\u91cf\u7684\u5355\u5143\u7531\u7cfb\u7edf\u81ea\u52a8\u56de\u6536\u3002</li> <li>\u9759\u6001\u5c40\u90e8\u53d8\u91cf: \u751f\u5b58\u5468\u671f\u4f1a\u6301\u7eed\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u4e00\u65e6\u542b\u6709\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u88ab\u518d\u6b21\u8c03\u7528\uff0c\u5219\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4f1a\u88ab\u91cd\u65b0\u6fc0\u6d3b\uff0c\u4e0a\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u540e\u7684\u503c\u4ecd\u65e7\u4fdd\u5b58\uff0c\u53ef\u4f9b\u672c\u6b21\u8c03\u7528\u7ee7\u7eed\u4f7f\u7528\u3002\uff08\u8d4b\u521d\u503c\u53ea\u5728\u51fd\u6570\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u8d77\u4f5c\u7528\uff0c\u82e5\u672a\u8d4b\u521d\u503c\uff0c\u7cfb\u7edf\u81ea\u52a8\u8d4b\u4e3a0\uff09</li> <li>\u903b\u8f91\u8868\u8fbe\u5f0f</li> <li>\u903b\u8f91\u8fd0\u7b97\u7b26</li> <li>\u903b\u8f91\u8868\u8fbe\u5f0f\uff1a\u7528\u903b\u8f91\u7b26\u5c06\u5173\u7cfb\u8868\u8fbe\u5f0f\u6216\u903b\u8f91\u91cf\u8fde\u63a5\u8d77\u6765\u7684\u5f0f\u5b50\u3002<code>!(x == 2)</code>\u662f\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c<code>!x == 2</code>\u662f\u5173\u7cfb\u8868\u8fbe\u5f0f\uff0c\u7b49\u4ef7\u4e8e<code>(!x) == 2</code>\u6b64\u65f6\u8be5\u5f0f\u7684\u903b\u8f91\u503c\u6052\u4e3a0. <ul> <li>\u6570\u7ec4</li> <li>\u5b9a\u4e49\u7c7b\u578b\u540d\u6307\u5b9a\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\uff1b\u6570\u7ec4\u540d\u662f\u6570\u7ec4\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff1b\u6570\u7ec4\u957f\u5ea6\u662f\u4e00\u4e2a\u6574\u578b\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u8bbe\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u6570\u7ec4\u957f\u5ea6\u662f\u4e00\u4e2a\u5e38\u91cf\u3002\u5b9a\u4e49\u6570\u7ec4\u4e4b\u540e\uff0c\u7cfb\u7edf\u6839\u636e\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u53ca\u4e2a\u6570\u5728\u5185\u5b58\u4e2d\u5206\u914d\u4e86\u4e00\u6bb5\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\u7528\u4e8e\u5b58\u653e\u6570\u7ec4\u7684\u5404\u4e2a\u5143\u7d20\u3002</li> <li>\u6570\u7ec4\u540d\u662f\u4e00\u4e2a\u5730\u5740\u5e38\u91cf\uff0c\u5b58\u653e\u6570\u7ec4\u5185\u5b58\u7a7a\u95f4\u7684\u9996\u5730\u5740\u3002</li> <li>\u5b9a\u4e49\u6570\u7ec4\u65f6\uff0c\u65b9\u62ec\u53f7\u5185\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u4ee3\u8868\u6570\u7ec4\u957f\u5ea6\uff0c\u5b83\u53ef\u4ee5\u5305\u62ec\u5e38\u91cf\u548c\u7b26\u53f7\u5e38\u91cf\uff0c\u4f46\u4e0d\u80fd\u5305\u62ec\u53d8\u91cf\u3002\u800c\u5f15\u7528\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u65b9\u62ec\u53f7\u5185\u662f\u8868\u8fbe\u5f0f\uff0c\u4ee3\u8868\u4e0b\u6807\uff0c\u53ef\u4ee5\u662f\u53d8\u91cf\uff0c\u4e0b\u6807\u7684\u5408\u7406\u53d6\u503c\u8303\u56f4\u662f[0\uff0c\u6570\u7ec4\u957f\u5ea6-1]\u3002</li> <li>\u5b9a\u4e49\u4e8c\u7ef4\u6570\u7ec4\u65f6\uff0c\u4e0d\u80fd\u7701\u7565\u5217\u957f\u5ea6\u3002</li> </ul> </li> </ul> <ul> <li>\u6307\u9488</li> </ul> <ul> <li>\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u4f8b\u5982p++\u3001p+i\u3001p-=i\u3002\u6307\u9488\u53d8\u91cf\u7684\u52a0\u51cf\u8fd0\u7b97\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u52a0\u4e0a\u6216\u51cf\u53bb\u4e00\u4e2a\u6574\u6570\uff0c\u800c\u662f\u8ddf\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\u6709\u5173\u3002</li> <li>\u7ed9\u6307\u9488\u53d8\u91cf\u8d4b\u503c\u65f6\uff0c\u8981\u5c06\u4e00\u4efd\u6570\u636e\u7684\u5730\u5740\u8d4b\u7ed9\u5b83\uff0c\u4e0d\u80fd\u76f4\u63a5\u8d4b\u7ed9\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982int *p = 1000;\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e00\u822c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002\u4f46\u662f<code>int *p = 0</code>\u662f\u5c06\u6307\u9488\u521d\u59cb\u5316\u4e3a\u7a7a\u6307\u9488\uff0c0\u662fASCII\u5b57\u7b26NULL\u7684\u503c\u3002</li> <li>\u4f7f\u7528\u6307\u9488\u53d8\u91cf\u4e4b\u524d\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff0c\u5426\u5219\u5c31\u4e0d\u80fd\u786e\u5b9a\u6307\u9488\u6307\u5411\u54ea\u91cc\uff0c\u5982\u679c\u5b83\u6307\u5411\u7684\u5185\u5b58\u6ca1\u6709\u4f7f\u7528\u6743\u9650\uff0c\u7a0b\u5e8f\u5c31\u5d29\u6e83\u4e86\u3002\u5bf9\u4e8e\u6682\u65f6\u6ca1\u6709\u6307\u5411\u7684\u6307\u9488\uff0c\u5efa\u8bae\u8d4b\u503cNULL\u3002</li> <li>\u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u76f8\u51cf\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u76f8\u51cf\u7684\u7ed3\u679c\u5c31\u662f\u4e24\u4e2a\u6307\u9488\u4e4b\u95f4\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li>\u6570\u7ec4\u4e5f\u662f\u6709\u7c7b\u578b\u7684\uff0c\u6570\u7ec4\u540d\u7684\u672c\u610f\u662f\u8868\u793a\u4e00\u7ec4\u7c7b\u578b\u76f8\u540c\u7684\u6570\u636e\u3002\u5728\u5b9a\u4e49\u6570\u7ec4\u65f6\uff0c\u6216\u8005\u548c sizeof\u3001&amp; \u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\u65f6\u6570\u7ec4\u540d\u624d\u8868\u793a\u6574\u4e2a\u6570\u7ec4\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u6570\u7ec4\u540d\u4f1a\u88ab\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u9996\u5730\u5740\u7684\u6307\u9488\u3002</li> <li> </li> </ul>"},{"location":"CS/c%E5%B0%8F%E7%A8%8B/#_4","title":"\u5b9e\u9a8c","text":""},{"location":"CS/c%E5%B0%8F%E7%A8%8B/#_5","title":"\u6280\u5de7\u6027\u7684\u7f16\u7a0b\u7247\u6bb5","text":"<ul> <li> <p>\u7edf\u8ba1\u5b57\u7b26\u65f6\u8bfb\u5165\u5e76\u820d\u5f03\u6362\u884c\u7b26 <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n   int n;\n    scanf(\"%d\",&amp;n);\n    getchar();//\u8bfb\u5165\u5e76\u820d\u5f03\u6362\u884c\u7b26\uff1b\u82e5\u65e0\u6b64\u6b65\u64cd\u4f5c\uff0c\u5219'\\n'\u4f1a\u88ab\u5f53\u505a\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684ch\n    for (int i = 0; i &lt; n ; i++)\n    {\n        ch = getchar();\n        if (ch &gt;= 'a' &amp;&amp; ch &lt;= 'z') || (ch &gt;= 'A' &amp;&amp; ch &lt;= 'Z'))\n        {\n            letter ++;\n        }\n        else if(ch &gt;='0' &amp;&amp; ch &lt;= '9')\n        {\n            digit ++;\n        }\n        else \n        {\n            other ++;\n        }\n    }\n\n    printf(\"letter = %d,\",letter);\n    printf(\" digit = %d,\",digit);\n    printf(\" other = %d\",other);\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u8f93\u516530\uff0c\u8f93\u51fa30.00 \u3002\u274c\u5b9e\u9645\u8f93\u51fa\u4e860.00\uff0c\u539f\u56e0\u5728\u4e8e<code>scanf(\"%lf\",x)</code>\u3002 <pre><code>double x;   \nscanf(\"x=%lf\", &amp;x);  \nprintf(\"%.2f\", x);   \n</code></pre></p> </li> <li> <p>\u5faa\u73af</p> </li> <li> <p>\u5faa\u73af\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u521d\u59cb\u5316 <pre><code>int i, sum;\nfor (i = 1; i &lt;= 10; i++){\n    sum = 0;//sum = 0\u521d\u59cb\u5316\u5728for\u5faa\u73af\u5185\u90e8\uff0c\u5219\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u7684sum\u503c\u5747\u4e3a0\u3002\n    sum = sum + i;\n}\n</code></pre></p> </li> <li> <p>\u5bf9\u4e8e\u5faa\u73af\u4e2d\u7684\u5224\u65ad\u6761\u4ef6\u548c\u6539\u53d8\u5bf9\u8c61\uff0c\u8981\u6ce8\u610f\u5728\u5faa\u73af\u4f53\u5185\u662f\u5426\u88ab\u6539\u53d8\u3002</p> </li> <li> <p>\u4e0d\u8981\u968f\u610f\u6539\u53d8\u5224\u65ad\u5faa\u73af\u6761\u4ef6\u7684\u503c <pre><code>for(num = 1; num &lt;= 100; num++){ \n    s = 0;\n    do{\n       s = s + num % 10;\n       num = num / 10;\n    }while(num != 0);//\u5faa\u73af\u5b8c\u6bd5\u540enum\u4e3a0\n    printf(\"%d\\n\", s); \n}\n</code></pre></p> </li> <li> <p>\u672a\u8fdb\u5165\u5faa\u73af\u7684\u5176\u4ed6\u7279\u6b8a\u60c5\u51b5 <pre><code>int isprime(int n)\n{\n    if(n &lt;= 1)\n    {\n        return 0;\n    }\n    else if(n == 2)\n    {\n        return 1;\n    }\n    else //i\u662f\u4ecei= 2 \u5f00\u59cb\u7684\uff0c\u5f53 n &lt; 2\u8fd8\u8981\u53e6\u5916\u5224\u65ad\n    {\n        for(int i = 2; i &lt;= sqrt(n) + 1; i++)\n        {\n            if(n % i == 0)\n            {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n</code></pre></p> </li> <li> <p>if-else\u7ed3\u6784 <pre><code>mynumber = 38;\nscanf (\"%d\", &amp;yournumber); \nif(yournumber == mynumber){ \n    printf(\"Right\");\n}\nif(yournumber &gt; mynumber ){   //\u4e0d\u662felse if\u4e0e\u524d\u9762\u7684if\u4e0d\u6784\u6210\u5206\u652f\u7ed3\u6784\n    printf(\"Big\");\n}else{ \n    printf(\"Small\");//\u8f93\u516538\uff0c\u8f93\u51faRightSmall\n}\n</code></pre></p> </li> <li> <p>\u4f7f\u7528\u4e00\u4e9b\u6807\u8bb0\u53d8\u91cfflag\u8868\u793a\u771f\u5047\u6709\u65e0\u72b6\u6001 <pre><code>#include &lt;stdio.h&gt;//\u8f93\u51fa21\u4e16\u7eaa\u622a\u6b62\u67d0\u4e2a\u5e74\u4efd\u7684\u95f0\u5e74\nint main()\n{\n    int n;\n    int flag = 1;\n    scanf(\"%d\",&amp;n);\n    if(n &gt; 2000 &amp;&amp; n &lt;= 2100)\n    {\n        for (int i = 2001; i &lt;= n; i++)\n        {\n            if ( (i % 4 == 0 &amp;&amp; i % 100 != 0)||i % 400 == 0)\n            {\n                printf(\"%d\\n\",i);\n                flag = 0;\n            }\n        }\n        if (flag)\n            printf(\"None\");\n        /*for (int j = 2001; j&lt;= n; j++)\n        {\n            if( (j % 4 == 0 &amp;&amp; j % 100 != 0)||j % 400 == 0)\n            {\n                break;\n            }\n            if(j == n)\n                printf(\"None\\n\");\n        }*/ //\u82e5\u6ca1\u6709\u95f0\u5e74\u5219\u8f93\u51faNone,\u8fd9\u79cd\u5199\u6cd5\u6709\u70b9\u9ebb\u70e6\n    }\n    else\n    {\n        printf(\"Invalid year!\\n\");\n    }\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\uff1a\u672c\u9898\u76ee\u8981\u6c42\u7f16\u5199\u7a0b\u5e8f\u7edf\u8ba1\u4e00\u884c\u5b57\u7b26\u4e2d\u5355\u8bcd\u7684\u4e2a\u6570\u3002\u6240\u8c13\u201c\u5355\u8bcd\u201d\u662f\u6307\u8fde\u7eed\u4e0d\u542b\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u5404\u5355\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u9694\uff0c\u7a7a\u683c\u6570\u53ef\u4ee5\u662f\u591a\u4e2a\u3002</p> </li> <li> <p>\u6d4b\u8bd5\u70b9\u6709\u591a\u4e2a\uff1a\u5f00\u59cb\u8f93\u5165\u7a7a\u683c\uff0c\u7a7a\u683c\u8fde\u7eed\u591a\u4e2a\uff0c\u7ed3\u5c3e . \u540e\u9762\u6dfb\u52a0\u7a7a\u683c <pre><code>//\u539f\u59cb\u529e\u6cd5\uff0c\u53ea\u662f\u6839\u636e\u7279\u6b8a\u60c5\u51b5\u5206\u5f00\u8ba8\u8bba\n#include &lt;stdio.h&gt;\nint main()\n{\n    char ch;\n    int count = 0;\n    while((ch = getchar()) == ' ');//\u5f00\u59cb\u65f6\u5982\u679c\u591a\u4e2a\u7a7a\u683c\n    if(ch == '\\n')\n        printf(\"0 \");//\u5f00\u59cb\u65f6\u8f93\u5165\\n\n    while(ch != '\\n')\n    {\n        while(ch != ' '&amp;&amp; ch != '\\n')//\u6700\u540e\u7ed3\u675f\u7684\u90a3\u6bb5\u5355\u8bcd\n        {\n            count ++;\n            ch = getchar();\n        }\n        printf(\"%d \",count);\n        count = 0;\n        if(ch != '\\n')\n        {\n            while(( ch = getchar()) == ' ');//\u5f53\u6709\u591a\u4e2a\u7a7a\u683c\u65f6\u4f7f\u7528while\u5faa\u73af\u628a\u7a7a\u683c\u53ea\u8bfb\u5165\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n//\u6211\u7684\u6539\u8fdb\u8fd8\u662f\u6709\u70b9\u5947\u602a \u601d\u8def\u4ecd\u65e7\u5173\u6ce8\u7684\u662f' '\u7684\u4e2a\u6570\ns#include&lt;stdio.h&gt;\nint main()\n{\n    char ch;\n    int word = 0;\n    int count = 0;\n    while((ch = getchar()) != '\\n')\n    {\n        if(word == 1) //' '\u4e4b\u524d\u4e3a\u5355\u8bcd\n        {\n            if(ch == ' ')\n            {\n                count ++;//\u524d\u9762\u4e3a\u5355\u8bcd\u7684\u7a7a\u683c\u6570\u91cf\u589e\u52a0\n                word = 0;//Word\u4e3a0\uff0c\u8868\u793a\u65e0\u65b0\u5355\u8bcd\n            }\n        }\n        if(ch != ' ')\n        {\n            word = 1;   //\u8868\u793a\u4e3a\u5355\u8bcd\n        }\n    }\n    printf(\"%d\",count + word);//\u8ba1\u7b97\u5355\u8bcd\u6570\u91cf\u5982\u679c\u7ed3\u5c3e\u4e3a' ' \u5219\u4e0d\u52a01\uff0c\u82e5\u7ed3\u5c3e\u4e3a\u666e\u901a\u5b57\u7b26\u5219\u52a01\n    return 0;\n}\n//\u6559\u6750\u89e3\u7b54 \u601d\u8def\u5173\u6ce8\u7684\u662f\u9047\u5230\u65b0\u5355\u8bcd\u4e2a\u6570\n#include &lt;stdio.h&gt;\nint main()\n{\n    int cnt = 0, word = 0;//cnt\u5355\u8bcd\u4e2a\u6570\uff0cWord\u662f\u65b0\u5355\u8bcd\u6807\u8bc6\uff0c\u521d\u503c\u4e3a0\uff0c\u8868\u793a\u8fd8\u672a\u9047\u5230\u65b0\u5355\u8bcd\n    char ch;\n    while((ch = getchar()) != '\\n')\n    {\n        if (ch == ' ')\n        {\n            word = 0;     //word\u8d4b0\uff0c\u8868\u793a\u8fd8\u672a\u9047\u5230\u65b0\u5355\u8bcd\n        }\n        else if (word == 0)//\u8bfb\u5165\u975e\u7a7a\u683c\u4e14word\u4e3a0 \uff0c\u4e3a\u5355\u8bcd\u7684\u9996\u5b57\u7b26\n        {\n            word = 1;      //word\u8d4b1\uff0c\u8868\u793a\u9047\u5230\u65b0\u5355\u8bcd\n            cnt ++;\n        }\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u6c42\u4e00\u4e2a\u6574\u6570\u7684\u9006\u5e8f\u6570 <pre><code>int reverse( int number)\n{\n    int rev = 0;\n    int sign = 1;\n    if(number &lt; 0)\n    {\n        sign = -1;\n        number = - number;\n    }\n    else if(number == 0)\n    {\n        return 0;\n    }\n    else \n\n    //\u539f\u672c\u7684\u601d\u8def \u8fd8\u6709\u4e00\u79cd\u5947\u602a\u7684\u601d\u8def\u628a\u6570\u5b57\u7684\u5404\u4f4d\u6570\u5b57\u5206\u522b\u4f9d\u6b21\u8f93\u51fa\uff0c\u4f46\u662f\u4e2a\u4f4d\u4e3a0\u4e0d\u6613\u5904\u7406\n\n   /* {\n     int p = 1;\n    int sum = 0;\n    int  t = number;\n    while(t &gt; 10)\n    {\n        t = t / 10;\n        p = p * 10;//\u901a\u8fc7p\u53ef\u4ee5\u6c42\u51fanumber\u7684\u4f4d\u6570\n    }\n    int m = 1;\n    while(number != 0)\n    {\n        t = number / p;//\u6b64\u65f6\u7684t\u4e3anumber\u4ece\u9ad8\u5230\u4f4e\u7684\u5404\u4f4d\u6570\u5b57\n        sum = sum + m * t;//\u6700\u9ad8\u4f4d\u6570\u5b57\u53d8\u4e3a\u4e2a\u4f4d\uff0c\u4ece\u9ad8\u5230\u4f4e\u4f4d\u6570\u589e\u52a0\u7684\u8868\u8fbe\u5f0f\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u6c42\u6570\u7684\u5404\u4f4d\u6570\u6b63\u5e8f\u8f93\u51fa\n        m = m * 10; \n        number = number % p; \n        p = p / 10;\n    }\n    return sign * sum;\n}*/\n        while( number != 0)\n        {\n            rev = rev * 10 + number % 10;//\u8fd9\u6b65\u8868\u8fbe\u5f88\u5173\u952e\u6700\u4f4e\u4f4d\u6570\u5b57\u4e00\u76f4\u968f\u7740rev\u4e5810\u6240\u5360\u4f4d\u589e\u9ad8\n            number = number / 10;\n        }\n    }\n    return sign * rev;\n}\n</code></pre></p> </li> <li> <p>\u987a\u5e8f\u8f93\u51fa\u6574\u6570\u7684\u5404\u4f4d\u6570\u5b57 <pre><code>int digit, number, pow, t_number; \nscanf (\"%d\", &amp;number);\nt_number = number;\npow = 1;\nwhile (t_number&gt;10)\n{\n    pow = pow*10;\n    t_number = t_number / 10;       \n}  \nwhile ( pow &gt;= 1 ) \n{\n    digit = number/pow;\n    number = number%pow;\n    pow = pow/10;\n    printf (\"%d \", digit);\n}\nprintf (\"\\n\");\n</code></pre></p> </li> <li> <p>\u7edf\u8ba1\u5355\u8bcd\u7684\u957f\u5ea6 <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char ch;\n    int count = 0;\n    while((ch = getchar()) == ' ');//\u5f00\u59cb\u65f6\u5982\u679c\u591a\u4e2a\u7a7a\u683c\n    if(ch == '\\n')\n        printf(\"0 \");//\u5f00\u59cb\u65f6\u8f93\u5165\\n\n    while(ch != '\\n')\n    {\n        while(ch != ' '&amp;&amp; ch != '\\n')//\u6700\u540e\u7ed3\u675f\u7684\u90a3\u6bb5\u5355\u8bcd\n        {\n            count ++;\n            ch = getchar();\n        }\n        printf(\"%d \",count);\n        count = 0;\n        if(ch != '\\n')\n        {\n            while(( ch = getchar()) == ' ');//\u5f53\u6709\u591a\u4e2a\u7a7a\u683c\u65f6\u4f7f\u7528while\u5faa\u73af\u628a\u7a7a\u683c\u53ea\u8bfb\u5165\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\u8fd9\u9053\u9898\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5f88\u591a\n</code></pre></p> </li> <li> <p>\u5b57\u7b26\u4e32\uff1a</p> </li> <li>\u7ed3\u675f\u5904\u6dfb\u4e0a<code>'\\0'</code>;  <code>c  while((a[i] = getchar())!= '\\0')        {i ++;}</code></li> <li>\u6570\u7ec4</li> <li>\u6ce8\u610f\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\uff0c\u5f53\u7ed3\u679c\u4e0e\u6570\u7ec4\u7684\u5e8f\u6570\u6709\u5173\u5982\u6708\u4efd\u65f6\uff0c\u6ce8\u610f\u8f6c\u6362\u3002\u53ef\u4ee5\u5c06\u7b2c0\u4e2a\u5143\u7d20\u8bbe\u4e3a0\uff0c\u540e\u9762\u4f7f\u7528\u6570\u7ec4\u4e0d\u5f15\u7528\u3002 </li> </ul>"},{"location":"CS/c%E5%B0%8F%E7%A8%8B/#_6","title":"\u7f16\u7a0b\u9519\u9898","text":"<p><pre><code>/*\u51fd\u6570search\u5728\u5b57\u7b26\u4e32s\u4e2d\u67e5\u627e\u5b50\u4e32t\uff0c\u8fd4\u56de\u5b50\u4e32t\u5728s\u4e2d\u7684\u9996\u5730\u5740\u3002\u82e5\u672a\u627e\u5230\uff0c\u5219\u8fd4\u56deNULL\u3002*/\nchar *search( char *s, char *t)\n{\n    while (*s != '\\0' )\n    {\n        char *p = m;//\u9700\u8981t\u5728s\u4e2d\u7684\u9996\u5730\u5740\n        char *temp = t;//\u5982\u679c\u6ca1\u6709\u6b64\u6b65\uff0c\u5728\u7b2c\u4e00\u6b21\u8fdb\u5165if\u8bed\u53e5\u4e2d\uff0c\u6307\u9488t\u7684\u503c\u6539\u53d8\uff0c\u53ea\u5173\u6ce8\u4e86s\u4e2d\u6307\u9488\u7684\u79fb\u52a8\n        if(*temp == *p )\n        {\n            char *q = p;\n            while(*temp != '\\0' &amp;&amp; *p != '\\0' )\n            {\n                if(*p != *temp)\n                {\n                    break;\n                }\n                p ++;\n                temp ++;\n            }\n            if(*temp == '\\0')\n            {\n                return q;\n            }\n        }\n        s ++;\n    }\n    return NULL;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#define MAX 80\nint main()\n{\n    int n = 5, index;\n    /*char s[n][MAX];*/\u5b57\u7b26\u6570\u7ec4\u4e0e\u6307\u9488\n    char *s[n];\n    for(int i = 0; i &lt; n; i++)\n    {\n        s[i] = malloc(MAX*sizeof(char));\n        scanf(\"%s\",s[i]);\n    }\n    for(int i = 0; i &lt; n; i ++)\n    {\n        for(int j = i; j &lt; n; j ++)\n        {\n            index = i;\n            if(strcmp(s[index], s[j]) &lt; 0)\n            {\n                index = j;\n            }\n            /*char t[MAX];\n            strcpy(t,s[index]);//\u8fd9\u91cc\u4e0d\u80fd\u7528t = s[index];\u4f46\u662f\u628a t \u548cs[index]\u90fd\u770b\u6210\u662f\u6307\u9488\n            strcpy(s[index], s[j]);\n            strcpy(s[j], t);*/\n            char *t = s[index];\n            s[index] = s[j];\n            s[j] = t;\n        }\n    }\n    printf(\"After sorted:\\n\");\n    for(int i = 0; i &lt; n; i++)\n    {\n        printf(\"%s\\n\",s[i]);\n    }\n    return 0;\n}\n</code></pre></p>"},{"location":"CS/FDS/1Algorithm_analysis/","title":"Chapter 2:Algorithm Complexity","text":""},{"location":"CS/FDS/1Algorithm_analysis/#21","title":"2.1\u8fed\u4ee3\u4e0e\u9012\u5f52","text":""},{"location":"CS/FDS/1Algorithm_analysis/#211-ieration","title":"2.1.1 \u8fed\u4ee3 Ieration","text":"<ul> <li><code>for</code> \u5faa\u73af</li> <li><code>while</code>\u5faa\u73af</li> <li>\u5d4c\u5957\u5faa\u73af</li> </ul>"},{"location":"CS/FDS/1Algorithm_analysis/#212-recursion","title":"2.1.2 \u9012\u5f52 Recursion","text":""},{"location":"CS/FDS/1Algorithm_analysis/#_1","title":"\u8c03\u7528\u6808\uff1a","text":"<p>\u9012\u5f52\u51fd\u6570\u6bcf\u6b21\u8c03\u7528\u81ea\u8eab\u65f6\u5019\uff0c\u7cfb\u7edf\u90fd\u4f1a\u4e3a\u65b0\u5f00\u542f\u7684\u51fd\u6570\u5206\u914d\u5185\u5b58\uff0c\u4ee5\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u3001\u8c03\u7528\u5730\u5740\u548c\u5176\u4ed6\u4fe1\u606f\u7b49\u3002</p>"},{"location":"CS/FDS/1Algorithm_analysis/#_2","title":"\u5c3e\u9012\u5f52","text":"<ul> <li>\u666e\u901a\u9012\u5f52\uff1a\u5f53\u51fd\u6570\u8fd4\u56de\u5230\u4e0a\u4e00\u5c42\u7ea7\u7684\u51fd\u6570\u540e\uff0c\u9700\u8981\u7ee7\u7eed\u6267\u884c\u4ee3\u7801\uff0c\u56e0\u6b64\u7cfb\u7edf\u9700\u8981\u4fdd\u5b58\u4e0a\u4e00\u5c42\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\u3002</li> <li>\u5c3e\u9012\u5f52\uff1a\u9012\u5f52\u8c03\u7528\u662f\u51fd\u6570\u8fd4\u56de\u524d\u7684\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u51fd\u6570\u8fd4\u56de\u5230\u4e0a\u4e00\u5c42\u7ea7\u540e\uff0c\u65e0\u9700\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u56e0\u6b64\u7cfb\u7edf\u65e0\u9700\u4fdd\u5b58\u4e0a\u4e00\u5c42\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u3002 <pre><code>  /* \u5c3e\u9012\u5f52 */\nint tailRecur(int n, int res) {\n    // \u7ec8\u6b62\u6761\u4ef6\n    if (n == 0)\n        return res;\n    // \u5c3e\u9012\u5f52\u8c03\u7528\n    return tailRecur(n - 1, res + n);\n}\n</code></pre></li> </ul>"},{"location":"CS/FDS/1Algorithm_analysis/#_3","title":"\u9012\u5f52\u6811","text":"<p>\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a </p>"},{"location":"CS/FDS/1Algorithm_analysis/#22","title":"2.2\u65f6\u95f4\u590d\u6742\u5ea6","text":""},{"location":"CS/FDS/1Algorithm_analysis/#221-notation","title":"2.2.1 Notation \u5b9a\u4e49","text":"<ul> <li>\\(\\exists  c,n_0,s.t.\\forall n &gt;n _0 ,T\uff08N\uff09\\le cf(N),   T(N) = O(f(N))\\) \\(f(N)\u662fT(N)\u7684\u4e0a\u754c\\)</li> <li>\\(\\exists  c,n_0,s.t.\\forall n &gt;n _0 ,T\uff08N\uff09\\ge cg(N),   T(N) = \\Omega(g(N))\\) \\(g(N)\u662fT(N)\u7684\u4e0b\u754c\\)</li> <li>\u7b49\u4e14\u4ec5\u5f53\\(T(N) = O(h(N))\u4e14T(N\uff09 = \\Omega(h(N))\\)\u65f6, \\(T(N) = \\Theta(h(N))\\)</li> <li>\u5982\u679c\\(T(N) = O(p(N))\u4e14T(N)\\ne\\Theta(p(N))\\),\u5219\\(T(N) = o(p(N))\\) \u6cd5\u5219</li> <li><code>for</code> \u5faa\u73af\uff1a\u6700\u5927\u4e3a\u5faa\u73af\u5185\u8bed\u53e5\u5305\u62ec\u6d4b\u8bd5\u7684\u8fd0\u884c\u65f6\u95f4\u4e58\u4ee5\u8fed\u4ee3\u6b21\u6570 <code>for (int i = 0; i &lt;= N; i++)</code>\u521d\u59cb\u5316\u53601\u4e2a\u65f6\u95f4\u5355\u5143\uff0c\u6d4b\u8bd5\u5360N + 1\u4e2a\u65f6\u95f4\u5355\u5143\uff0c\u8d4b\u503c\u5360N\u4e2a\u65f6\u95f4\u5355\u5143\uff0c\u56e0\u6b64\u603b\u51712N + 2 \u4e2a\u65f6\u95f4\u5355\u5143</li> <li>\u5d4c\u5957<code>for</code>\u5faa\u73af\uff1a\u8be5\u8bed\u53e5\u7684\u8fd0\u884c\u65f6\u95f4\u4e58\u4ee5\u8be5\u7ec4\u6240\u6709<code>for</code> \u5faa\u73af\u7684\u5927\u5c0f\u7684\u4e58\u79ef</li> <li>\u987a\u5e8f\u8bed\u53e5\uff1a\u5404\u4e2a\u8bed\u53e5\u7684\u8fd0\u884c\u65f6\u95f4\u6c42\u548c\uff08\u5176\u4e2d\u8bed\u53e5\u7684\u6700\u5927\u503c\u5c31\u662f\u6240\u5f97\u65f6\u95f4\uff09</li> <li><code>if/else</code>\u8bed\u53e5\uff1a\u6700\u5927\u4e3a\u5224\u65ad\u65f6\u95f4+\u5206\u652f\u4e2d\u8fd0\u884c\u65f6\u95f4\u8f83\u957f\u8005</li> </ul>"},{"location":"CS/FDS/1Algorithm_analysis/#223","title":"2.2.3 \u51fd\u6570\u6e10\u8fd1\u4e0a\u754c","text":"<ul> <li>\u63a8\u7b97\u65b9\u6cd5\uff1a\u5ffd\u7565\u5e38\u6570\u6570\uff0c\u7701\u7565\u6240\u6709\u7cfb\u6570\uff0c\u5faa\u73af\u5d4c\u5957\u65f6\u4f7f\u7528\u4e58\u6cd5\uff0c\u5224\u65ad\u6e10\u4ec5\u4e0a\u754c</li> <li>\u5e38\u89c1\u7c7b\u578b\uff1a</li> <li>\u5e42\u6b21\u9636\\(O(N^a)\\)\u591a\u51fa\u73b0\u5728\u5d4c\u5957\u5faa\u73af\u4e2d</li> <li>\u6307\u6570\u9636\\(O(a^N)\\)\u591a\u51fa\u73b0\u5728\u9012\u5f52\u51fd\u6570\u4e2d</li> <li>\u5bf9\u6570\u9636\\(O(logN)\\) </li> </ul> <pre><code>#include&lt;stdio.h&gt;\nint main()\n{\n    int n = 0;\n    int h = 0;\n    int max = 0;\n    int flag = 0;\n    scanf(\"%d %d\", &amp;n, &amp;h);\n    int N = 100000;\n    int bal[N];\n    for(int i = 0; i &lt; n; i++)\n    {\n        scanf(\"%d\", &amp;bal[i]);\n    }\n    for(int i = bal[0] - h; i &lt;= bal[n-1]; i++)\n    {\n        int con = 0;\n        for(int j = 0; j &lt; n; j++)\n        {\n            if(bal[j] &lt;= i + h &amp;&amp; bal[j] &gt;= i)\n            {\n                con ++;\n            }\n            if(con &gt; max)\n            {\n                max = con;\n                flag = i;\n            }\n        }\n    }\n    printf(\"%d %d\", flag, max);\n    return 0;\n}\n</code></pre>"},{"location":"CS/FDS/1Algorithm_analysis/#23","title":"2.3 \u7a7a\u95f4\u590d\u6742\u5ea6","text":""},{"location":"CS/FDS/1Algorithm_analysis/#231","title":"2.3.1 \u76f8\u5173\u7a7a\u95f4","text":"<ul> <li>\u8f93\u5165\u7a7a\u95f4\uff1a\u7528\u4e8e\u5b58\u50a8\u7b97\u6cd5\u7684\u8f93\u5165\u6570\u636e\u3002</li> <li>\u6682\u5b58\u7a7a\u95f4\uff1a\u7528\u4e8e\u5b58\u50a8\u7b97\u6cd5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u53d8\u91cf\u3001\u5bf9\u8c61\u3001\u51fd\u6570\u4e0a\u4e0b\u6587\u7b49\u6570\u636e\u3002 </li> <li>\u6682\u5b58\u6570\u636e\uff1a\u7528\u4e8e\u4fdd\u5b58\u7b97\u6cd5\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u5404\u79cd\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u5bf9\u8c61\u7b49\u3002</li> <li>\u6808\u5e27\u7a7a\u95f4\uff1a\u7528\u4e8e\u4fdd\u5b58\u8c03\u7528\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u3002\u7cfb\u7edf\u5728\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\u90fd\u4f1a\u5728\u6808\u9876\u90e8\u521b\u5efa\u4e00\u4e2a\u6808\u5e27\uff0c\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u6808\u5e27\u7a7a\u95f4\u4f1a\u88ab\u91ca\u653e\u3002</li> <li>\u6307\u4ee4\u7a7a\u95f4\uff1a\u7528\u4e8e\u4fdd\u5b58\u7f16\u8bd1\u540e\u7684\u7a0b\u5e8f\u6307\u4ee4\uff0c\u5728\u5b9e\u9645\u7edf\u8ba1\u4e2d\u901a\u5e38\u5ffd\u7565\u4e0d\u8ba1\u3002 </li> <li>\u8f93\u51fa\u7a7a\u95f4\uff1a\u7528\u4e8e\u5b58\u50a8\u7b97\u6cd5\u7684\u8f93\u51fa\u6570\u636e\u3002 </li> </ul>"},{"location":"CS/FDS/1Algorithm_analysis/#232","title":"2.3.2 \u63a8\u7b97\u65b9\u6cd5","text":"<p>Notice\uff1a\u9012\u5f52\u51fd\u6570\u9700\u8981\u6ce8\u610f\u7edf\u8ba1\u6808\u5e27\u7a7a\u95f4\uff1a - \u5728\u4e00\u4e2a<code>for</code> loop\u4e2d\u8c03\u7528\u4e86N\u6b21 <code>function()</code> \uff0c\u6bcf\u8f6e\u4e2d\u7684 <code>function()</code> \u90fd**\u8fd4\u56de\u5e76\u91ca\u653e**\u4e86\u6808\u5e27\u7a7a\u95f4\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4ecd\u4e3a\\(O(1)\\)\u3002 - \u9012\u5f52\u51fd\u6570 recur() \u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u540c\u65f6\u5b58\u5728\\(n\\)\u4e2a**\u672a\u8fd4\u56de**\u7684 <code>recur()</code> \uff0c\u4ece\u800c\u5360\u7528 \\(O(N)\\)\u7684\u6808\u5e27\u7a7a\u95f4\u3002</p>"},{"location":"CS/FDS/1Algorithm_analysis/#233","title":"2.3.3 \u5e38\u89c1\u7c7b\u578b","text":"<ul> <li>\u5e38\u6570\u9636\\(O(1)\\)\uff1a\u6570\u91cf\u4e0e\u8f93\u5165\u6570\u636e\u5927\u5c0f\\(N\\)\u65e0\u5173\u7684\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u5bf9\u8c61\u3002   \u5728\u5faa\u73af\u4e2d\u521d\u59cb\u5316\u53d8\u91cf\u6216\u8c03\u7528\u51fd\u6570\u800c\u5360\u7528\u7684\u5185\u5b58\uff0c\u5728\u8fdb\u5165\u4e0b\u4e00\u5faa\u73af\u540e\u5c31\u4f1a\u88ab\u91ca\u653e\uff0c\u56e0\u6b64\u4e0d\u4f1a\u7d2f\u79ef\u5360\u7528\u7a7a\u95f4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4ecd\u4e3a\\(O(1)\\)</li> <li>\u7ebf\u6027\u9636\\(O(N)\\):<ul> <li>\u5143\u7d20\u6570\u91cf\u4e0e\\(N\\)\u6210\u6b63\u6bd4\u7684\u6570\u7ec4\u3001\u94fe\u8868\u3001\u6808\u3001\u961f\u5217\u7b49\u3002</li> <li>\u9012\u5f52\u6df1\u5ea6\u4e3a\\(N\\)\u7684\u9012\u5f52\u51fd\u6570\u3002</li> </ul> </li> </ul>"},{"location":"CS/FDS/1Algorithm_analysis/#solution-for-the-maximum-subsequence-sum","title":"Solution for the Maximum Subsequence Sum","text":"<pre><code>int max_subsequence_sum(int a[], unsigned int n)\n{\n    int thisssum = 0;\n    int maxsum = 0;\n    int best_i = -1, best_j = -1;\n    for(int j = 0; j &lt; n; j++)\n    {\n        thissum += a[j];\n        if(thissum &gt; maxsum)\n        {\n            maxsum = thissum;\n            best_i = i;\n            best_j = j;\n        }\n        if(thissum &lt; 0)\n        {\n            i = j + 1;\n            thissum = 0\n        }\n    }\n    return maxsum;\n}\n</code></pre>"},{"location":"CS/FDS/2list_stack/","title":"\u8868\uff0c\u6808","text":""},{"location":"CS/FDS/2list_stack/#chapter-3","title":"Chapter 3 \u6570\u7ec4\u548c\u94fe\u8868","text":""},{"location":"CS/FDS/2list_stack/#31","title":"3.1 \u6570\u7ec4","text":""},{"location":"CS/FDS/2list_stack/#32","title":"3.2 \u94fe\u8868","text":"<ul> <li>\u5b9a\u4e49\uff1a \u94fe\u8868\uff08linked list): \u94fe\u8868\u7531\u4e00\u7cfb\u5217\u4e0d\u5fc5\u5728\u5185\u5b58\u4e2d\u76f8\u8fde\u7684\u7ed3\u6784\u7ec4\u6210\u3002\u6bcf\u4e2a\u7ed3\u6784\u5747\u542b\u6709\u8868\u5143\u7d20\u548c\u6307\u5411\u5305\u542b\u8be5\u5143\u7d20\u540e\u7ee7\u5143\u7684\u7ed3\u6784\u6307\u9488\uff0c\u79f0\u4e4b\u4e3anext \u6307\u9488\u3002\u6700\u540e\u4e00\u4e2a\u5355\u5143\u7684next\u6307\u9488\u6307\u5411NULL ;\u8be5\u503c\u7531C\u5b9a\u4e49\u5e76\u4e14\u4e0d\u80fd\u4e0e\u5176\u4ed6\u6307\u9488\u6df7\u6dc6\u3002ANSIC\u4e2d\u89c4\u5b9aNULL\u4e3a\u96f6\u3002</li> <li> <p>\u7ec4\u6210\u7ed3\u6784 \u94fe\u8868\u7684\u7ec4\u6210\u5355\u4f4d\u662f\u300c\u8282\u70b9 node\u300d\u5bf9\u8c61\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u4e24\u9879\u6570\u636e\uff1a\u8282\u70b9\u7684\u201c\u503c\u201d\u548c\u6307\u5411\u4e0b\u4e00\u8282\u70b9\u7684\u201c\u5f15\u7528\u201d\u3002</p> </li> <li> <p>\u94fe\u8868\u7684\u9996\u4e2a\u8282\u70b9\u88ab\u79f0\u4e3a\u201c\u5934\u8282\u70b9\u201d\uff08header\uff09\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u88ab\u79f0\u4e3a\u201c\u5c3e\u8282\u70b9\u201d\u3002</p> </li> <li>\u5c3e\u8282\u70b9\u6307\u5411\u7684\u662f\u201c\u7a7a\u201d\uff0c</li> <li>\u5728 C\u3001C++\u3001Go \u548c Rust \u7b49\u652f\u6301\u6307\u9488\u7684\u8bed\u8a00\u4e2d\uff0c\u4e0a\u8ff0\u7684\u201c\u5f15\u7528\u201d\u5e94\u88ab\u66ff\u6362\u4e3a\u201c\u6307\u9488\u201d\u3002 <pre><code>/* \u94fe\u8868\u8282\u70b9\u7ed3\u6784\u4f53 */\ntypedef struct ListNode {\n    int val;               // \u8282\u70b9\u503c\n    struct ListNode *next; // \u6307\u5411\u4e0b\u4e00\u8282\u70b9\u7684\u6307\u9488\n} ListNode;\n\n/* \u6784\u9020\u51fd\u6570 */\nListNode *newListNode(int val) {\n    ListNode *node, *next;\n    node = (ListNode *) malloc(sizeof(ListNode));\n    node-&gt;val = val;\n    node-&gt;next = NULL;\n    return node;\n}\n</code></pre></li> </ul>"},{"location":"CS/FDS/2list_stack/#_1","title":"\u5e38\u7528\u64cd\u4f5c","text":"<p>\u7531\u4e8e\u94fe\u8868\u7684\u4e0d\u8fde\u7eed\u6027\uff0c\u9632\u6b62\u94fe\u8868\u4e22\u5931\u201c\u5934\u201d\u8282\u70b9\u3002</p>"},{"location":"CS/FDS/2list_stack/#_2","title":"\u94fe\u8868\u7c7b\u578b","text":"<pre><code>List Reverse( List L)\n{\n    List head, p, s;\n    if (L-&gt;Next == NULL)\n    {\n        return L;\n    }\n    head = L;\n    s = L-&gt;Next;\n    L = s-&gt;Next;\n    while(L!= NULL)\n    {\n        p = L-&gt;Next;\n        L-&gt;Next = s;\n        s = L;\n        L = p;\n    }\n    head-&gt;Next-&gt;Next = NULL;\n    head-&gt;Next = s;\n    return head;\n}\n</code></pre>"},{"location":"CS/FDS/2list_stack/#chapter-4","title":"Chapter 4 \u6808\u4e0e\u5bf9\u5217","text":""},{"location":"CS/FDS/2list_stack/#41","title":"4.1\u6808","text":""},{"location":"CS/FDS/2list_stack/#411","title":"4.1.1\u5e38\u89c1\u64cd\u4f5c","text":"\u65b9\u6cd5 \u63cf\u8ff0 \u65f6\u95f4\u590d\u6742\u5ea6 <code>push()</code> \u5143\u7d20\u5165\u6808\uff08\u6dfb\u52a0\u81f3\u6808\u5e95\uff09 \\(O(1)\\) <code>pop()</code> \u6808\u9876\u5143\u7d20\u51fa\u6808 \\(O(1)\\) <code>peek()</code> \u8bbf\u95ee\u6808\u9876\u5143\u7d20 \\(O(1)\\) ### 4.1.2\u6808\u7684\u5b9e\u73b0 #### 1. \u57fa\u4e8e\u94fe\u8868 <pre><code>/* \u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\u7684\u6808 */\ntypedef struct \n{\n    ListNode *top; // \u5c06\u5934\u8282\u70b9\u4f5c\u4e3a\u6808\u9876\n    int size;      // \u6808\u7684\u957f\u5ea6\n} LinkedListStack;\n\n/* \u6784\u9020\u51fd\u6570 */\nLinkedListStack *newLinkedListStack() \n{\n    LinkedListStack *s = malloc(sizeof(LinkedListStack)); //\u7528malloc()\u5206\u914d\u5185\u5b58\u7a7a\u95f4\n    s-&gt;top = NULL;\n    s-&gt;size = 0;\n    return s;\n}\n\n/* \u6790\u6784\u51fd\u6570 */\nvoid delLinkedListStack(LinkedListStack *s) \n{\n    while (s-&gt;top) \n    {\n        ListNode *n = s-&gt;top-&gt;next;\n        free(s-&gt;top);\n        s-&gt;top = n;\n    }\n    free(s);\n}\n\n/* \u83b7\u53d6\u6808\u7684\u957f\u5ea6 */\nint size(LinkedListStack *s)\n{\n    assert(s);\n    return s-&gt;size;\n}\n\n/* \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a */\nbool isEmpty(LinkedListStack *s) \n{\n    assert(s);\n    return size(s) == 0;\n}\n\n/* \u8bbf\u95ee\u6808\u9876\u5143\u7d20 */\nint peek(LinkedListStack *s) \n{\n    assert(s);\n    assert(size(s) != 0);\n    return s-&gt;top-&gt;val;\n}\n\n/* \u5165\u6808 */\nvoid push(LinkedListStack *s, int num) \n{\n    assert(s);\n    ListNode *node = (ListNode *)malloc(sizeof(ListNode));\n    node-&gt;next = s-&gt;top; // \u66f4\u65b0\u65b0\u52a0\u8282\u70b9\u6307\u9488\u57df\n    node-&gt;val = num;     // \u66f4\u65b0\u65b0\u52a0\u8282\u70b9\u6570\u636e\u57df\n    s-&gt;top = node;       // \u66f4\u65b0\u6808\u9876\n    s-&gt;size++;           // \u66f4\u65b0\u6808\u5927\u5c0f\n}\n\n/* \u51fa\u6808 */\nint pop(LinkedListStack *s) \n{\n    if (s-&gt;size == 0) \n    {\n        printf(\"stack is empty.\\n\");\n        return INT_MAX;\n    }\n    assert(s);\n    int val = peek(s);\n    ListNode *tmp = s-&gt;top;\n    s-&gt;top = s-&gt;top-&gt;next;\n    // \u91ca\u653e\u5185\u5b58\n    free(tmp);\n    s-&gt;size--;\n    return val;\n}\n</code></pre>"},{"location":"CS/FDS/2list_stack/#2","title":"2. \u57fa\u4e8e\u6570\u7ec4","text":"<pre><code>/* \u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u6808 */\ntypedef struct {\n    int *data;\n    int size;\n} ArrayStack;\n\n/* \u6784\u9020\u51fd\u6570 */\nArrayStack *newArrayStack() {\n    ArrayStack *s = malloc(sizeof(ArrayStack));\n    // \u521d\u59cb\u5316\u4e00\u4e2a\u5927\u5bb9\u91cf\uff0c\u907f\u514d\u6269\u5bb9\n    s-&gt;data = malloc(sizeof(int) * MAX_SIZE);\n    s-&gt;size = 0;\n    return s;\n}\n\n/* \u83b7\u53d6\u6808\u7684\u957f\u5ea6 */\nint size(ArrayStack *s) {\n    return s-&gt;size;\n}\n\n/* \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a */\nbool isEmpty(ArrayStack *s) {\n    return s-&gt;size == 0;\n}\n\n/* \u5165\u6808 */\nvoid push(ArrayStack *s, int num) {\n    if (s-&gt;size == MAX_SIZE) {\n        printf(\"stack is full.\\n\");\n        return;\n    }\n    s-&gt;data[s-&gt;size] = num;\n    s-&gt;size++;\n}\n\n/* \u8bbf\u95ee\u6808\u9876\u5143\u7d20 */\nint peek(ArrayStack *s) {\n    if (s-&gt;size == 0) {\n        printf(\"stack is empty.\\n\");\n        return INT_MAX;\n    }\n    return s-&gt;data[s-&gt;size - 1];\n}\n\n/* \u51fa\u6808 */\nint pop(ArrayStack *s) {\n    if (s-&gt;size == 0) {\n        printf(\"stack is empty.\\n\");\n        return INT_MAX;\n    }\n    int val = peek(s);\n    s-&gt;size--;\n    return val;\n}\n</code></pre>"},{"location":"CS/FDS/2list_stack/#42","title":"4.2 \u961f\u5217","text":""},{"location":"CS/FDS/2list_stack/#421","title":"4.2.1 \u5e38\u89c1\u64cd\u4f5c","text":"\u65b9\u6cd5 \u63cf\u8ff0 \u65f6\u95f4\u590d\u6742\u5ea6 <code>push()</code> \u5143\u7d20\u5165\u961f\uff08\u6dfb\u52a0\u81f3\u961f\u5c3e\uff09 \\(O(1)\\) <code>pop()</code> \u961f\u9996\u5143\u7d20\u51fa\u961f \\(O(1)\\) <code>peek()</code> \u8bbf\u95ee\u961f\u9996\u5143\u7d20 \\(O(1)\\) ### 4.2.2 \u961f\u5217\u7684\u5b9e\u73b0"},{"location":"CS/FDS/2list_stack/#1","title":"1.\u57fa\u4e8e\u94fe\u8868\u7684\u5b9e\u73b0","text":""},{"location":"CS/FDS/2list_stack/#2_1","title":"2. \u57fa\u4e8e\u6570\u7ec4\u7684\u5b9e\u73b0","text":""},{"location":"CS/FDS/2list_stack/#chapter-6","title":"Chapter 6 \u54c8\u5e0c\u8868","text":""},{"location":"CS/FDS/2list_stack/#61","title":"6.1 \u54c8\u5e0c\u8868","text":"<p>\u300c\u54c8\u5e0c\u8868 hash table\u300d\uff0c\u53c8\u79f0\u300c\u6563\u5217\u8868\u300d\uff0c\u5176\u901a\u8fc7\u5efa\u7acb\u952e key \u4e0e\u503c value \u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u5143\u7d20\u67e5\u8be2\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u5411\u54c8\u5e0c\u8868\u8f93\u5165\u4e00\u4e2a\u952e key \uff0c\u5219\u53ef\u4ee5\u5728 \\(O(1)\\) \u65f6\u95f4\u5185\u83b7\u53d6\u5bf9\u5e94\u7684\u503c value \u3002</p>"},{"location":"CS/FDS/2list_stack/#611","title":"6.1.1 \u5e38\u89c1\u64cd\u4f5c","text":"<p>\u521d\u59cb\u5316\u3001\u67e5\u8be2\u64cd\u4f5c\u3001\u6dfb\u52a0\u952e\u503c\u5bf9\u548c\u5220\u9664\u952e\u503c\u5bf9\u3002</p>"},{"location":"CS/FDS/2list_stack/#612","title":"6.1.2 \u6570\u7ec4\u5b9e\u73b0","text":"<p>\u54c8\u5e0c\u51fd\u6570\uff1a 1. \u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5 hash() \u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002 2. \u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09<code>capacity</code> \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 <code>key</code> \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 <code>index</code> \u3002 <code>index = hash(key) % capacity</code> </p>"},{"location":"CS/FDS/2list_stack/#supplement-from-textbook","title":"Supplement from Textbook","text":"<p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff08ADT\uff09\uff1a\u5e76\uff08union\uff09\uff0c\u4ea4\uff08intersction\uff09,\u6c42\u5927\u5c0f\uff08size\uff09,\u53d6\u4f59\u6570\uff08complement\uff09</p>"},{"location":"CS/FDS/2list_stack/#adtlist","title":"\u8868ADT(List)","text":""},{"location":"CS/FDS/2list_stack/#definition","title":"Definition","text":"<p>\u94fe\u8868\uff08linked list): \u94fe\u8868\u7531\u4e00\u7cfb\u5217\u4e0d\u5fc5\u5728\u5185\u5b58\u4e2d\u76f8\u8fde\u7684\u7ed3\u6784\u7ec4\u6210\u3002\u6bcf\u4e2a\u7ed3\u6784\u5747\u542b\u6709\u8868\u5143\u7d20\u548c\u6307\u5411\u5305\u542b\u8be5\u5143\u7d20\u540e\u7ee7\u5143\u7684\u7ed3\u6784\u6307\u9488\uff0c\u79f0\u4e4b\u4e3anext \u6307\u9488\u3002\u6700\u540e\u4e00\u4e2a\u5355\u5143\u7684next\u6307\u9488\u6307\u5411NULL ;\u8be5\u503c\u7531C\u5b9a\u4e49\u5e76\u4e14\u4e0d\u80fd\u4e0e\u5176\u4ed6\u6307\u9488\u6df7\u6dc6\u3002ANSIC\u4e2d\u89c4\u5b9aNULL\u4e3a\u96f6\u3002</p>"},{"location":"CS/FDS/2list_stack/#adtstack","title":"\u6808ADT(Stack)","text":""},{"location":"CS/FDS/2list_stack/#definition_1","title":"Definition","text":"<ol> <li>Stack: A stack is a list with the restriction that inserts and deletes can be performed in only one position.</li> <li>Top: the end of the list called the top.</li> <li>Push: The fundamental operations on a stack are push, which is equivalent to an insert,</li> <li> <p>pop: pop deletes the most recently inserted element.</p> </li> <li> <p>The most recently inserted element can be examined prior to performing a pop by use of the top routine. </p> </li> <li> <p>Error: A pop or top on an empty stack is generally considered an error in the stack ADT. On the other hand, running out of space when performing a push is an implementation error but not an ADT error.</p> </li> </ol>"},{"location":"CS/FDS/3tree/","title":"Chapter 7 \u6811","text":""},{"location":"CS/FDS/3tree/#71","title":"7.1 \u4e8c\u53c9\u6811","text":"<pre><code>/* \u4e8c\u53c9\u6811\u8282\u70b9\u7ed3\u6784\u4f53 */\ntypedef struct TreeNode {\n    int val;                // \u8282\u70b9\u503c\n    int height;             // \u8282\u70b9\u9ad8\u5ea6\n    struct TreeNode *left;  // \u5de6\u5b50\u8282\u70b9\u6307\u9488\n    struct TreeNode *right; // \u53f3\u5b50\u8282\u70b9\u6307\u9488\n} TreeNode;\n\n/* \u6784\u9020\u51fd\u6570 */\nTreeNode *newTreeNode(int val) {\n    TreeNode *node;\n\n    node = (TreeNode *)malloc(sizeof(TreeNode));\n    node-&gt;val = val;\n    node-&gt;height = 0;\n    node-&gt;left = NULL;\n    node-&gt;right = NULL;\n    return node;\n}\n</code></pre>"},{"location":"CS/FDS/3tree/#711","title":"7.1.1 \u5e38\u89c1\u672f\u8bed","text":"<ul> <li>\u300c\u6839\u8282\u70b9 root node\u300d\uff1a\u4f4d\u4e8e\u4e8c\u53c9\u6811\u9876\u5c42\u7684\u8282\u70b9\uff0c\u6ca1\u6709\u7236\u8282\u70b9\u3002</li> <li>\u53f6\u8282\u70b9 leaf node\u300d\uff1a\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u5176\u4e24\u4e2a\u6307\u9488\u5747\u6307\u5411 \\(\\text{None}\\) \u3002</li> <li>\u8fb9 edge\u300d\uff1a\u8fde\u63a5\u4e24\u4e2a\u8282\u70b9\u7684\u7ebf\u6bb5\uff0c\u5373\u8282\u70b9\u5f15\u7528\uff08\u6307\u9488\uff09\u3002</li> <li>\u8282\u70b9\u6240\u5728\u7684\u300c\u5c42 level\u300d\uff1a\u4ece\u9876\u81f3\u5e95\u9012\u589e\uff0c\u6839\u8282\u70b9\u6240\u5728\u5c42\u4e3a 1 \u3002</li> <li>\u8282\u70b9\u7684\u300c\u5ea6 degree\u300d\uff1a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\u5728\u4e8c\u53c9\u6811\u4e2d\uff0c\u5ea6\u7684\u53d6\u503c\u8303\u56f4\u662f 0\u30011\u30012 \u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u300c\u9ad8\u5ea6 height\u300d\uff1a\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf\u3002</li> <li>\u8282\u70b9\u7684\u300c\u6df1\u5ea6 depth\u300d\uff1a\u4ece\u6839\u8282\u70b9\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf\u3002</li> <li>\u8282\u70b9\u7684\u300c\u9ad8\u5ea6 height\u300d\uff1a\u4ece\u8ddd\u79bb\u8be5\u8282\u70b9\u6700\u8fdc\u7684\u53f6\u8282\u70b9\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf\u3002</li> </ul>"},{"location":"CS/FDS/3tree/#712","title":"7.1.2 \u57fa\u672c\u64cd\u4f5c","text":""},{"location":"CS/FDS/3tree/#1","title":"1.\u521d\u59cb\u5316\u4e8c\u53c9\u6811","text":""},{"location":"CS/FDS/3tree/#2","title":"2. \u63d2\u5165\u4e0e\u5220\u9664\u8282\u70b9","text":"<pre><code>/* \u63d2\u5165\u4e0e\u5220\u9664\u8282\u70b9 */\nTreeNode *P = newTreeNode(0);\n// \u5728 n1 -&gt; n2 \u4e2d\u95f4\u63d2\u5165\u8282\u70b9 P\nn1-&gt;left = P;\nP-&gt;left = n2;\n// \u5220\u9664\u8282\u70b9 P\nn1-&gt;left = n2;\n</code></pre>"},{"location":"CS/FDS/3tree/#713","title":"7.1.3 \u5e38\u89c1\u4e8c\u53c9\u6811\u7c7b\u578b","text":"<ul> <li>\u5b8c\u7f8e\u4e8c\u53c9\u6811 perfect binary tree</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811 complete binary tree</li> <li>\u5b8c\u6ee1\u4e8c\u53c9\u6811 full binary tree</li> <li>\u5e73\u8861\u4e8c\u53c9\u6811 balanced binary tree</li> </ul>"},{"location":"CS/FDS/3tree/#72","title":"7.2 \u4e8c\u53c9\u6811\u904d\u5386","text":""},{"location":"CS/FDS/3tree/#721","title":"7.2.1\u5c42\u5e8f\u904d\u5386","text":"<p>\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u9010\u5c42\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u5e76\u5728\u6bcf\u4e00\u5c42\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8bbf\u95ee\u8282\u70b9\u3002 \u5c42\u5e8f\u904d\u5386\u672c\u8d28\u4e0a\u5c5e\u4e8e\u300c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386 breadth-first traversal\u300d\uff0c\u5b83\u4f53\u73b0\u4e86\u4e00\u79cd\u201c\u4e00\u5708\u4e00\u5708\u5411\u5916\u6269\u5c55\u201d\u7684\u9010\u5c42\u904d\u5386\u65b9\u5f0f\u3002 \u4ee3\u7801\u5b9e\u73b0 <pre><code>int *levelorder(TreeNode *root, int *size){\n    //\u8f85\u52a9\u961f\u5217\n    TreeNode **queue =(TreeNode **)malloc(Maxsize*sizeof(TreeNode *));//\u6811\u6307\u9488\u6570\u7ec4\n    int front = 0, rear = 0;\n\n    //\u8f85\u52a9\u6570\u5217\n    int index = 0; \n    int *arr = (int *)malloc(Maxsize * sizeof(int));\n    TreeNode *node;\n\n    //\u52a0\u5165\u6839\u8282\u70b9\n    queue[rear++] = root;\n\n    while(front &lt; rear){\n        //\u961f\u5217\u51fa\u961f\n        node = queue[front++];\n        //\u4fdd\u5b58\u8282\u70b9\u503c\u8fdb\u5165\u8f85\u52a9\u6570\u7ec4\n        arr[index++] = node-&gt;val;\n        //\u5b50\u8282\u70b9\u5165\u961f \u6ce8\u610f\u5de6\u53f3\u8282\u70b9\u5165\u961f\u7684\u987a\u5e8f  \u5de6\u8fb9\u5148\u5165\uff0c\u5219\u5de6\u5148\u51fa\n        if(node-&gt;left != NULL){\n            queue[rear++] = node-&gt;left;\n        }\n        if(node-&gt;right != NULL){\n            queue[rear++] = node-&gt;right;\n        }\n    }\n    //\u66f4\u65b0\u6570\u7ec4\u957f\u5ea6 \u8d85\u8fc7Maxsize\u540e\u4f1a\u4e3aarr\u81ea\u52a8\u5206\u914d\u7a7a\u95f4\n    *size = index;\n    arr = realloc(arr, sizeof(int) *(*size));\n    //\u91ca\u653e\u8f85\u52a9\u961f\u5217\u6570\u7ec4\n    free(queue);\n\n    return arr;\n}\n</code></pre></p> <p>\u5bf9\u4e8e\u961f\u5217\u7684\u4f7f\u7528\u548c\u6808\u7684\u4f7f\u7528\uff0c\u5982\u679c\u904d\u5386\u987a\u5e8f\u6ee1\u8db3\u5de6\u53f3\u5b50\u8282\u70b9\u5148\u5165\u540e\u51fa\u5219\u5e94\u8be5\u9009\u62e9stack, \u800c\u5148\u5165\u5148\u51fa\u5e94\u8be5\u9009\u62e9 queue.\u4e24\u8005\u57fa\u672c\u7b49\u4ef7\u4e5f\u5c31\u662f\u8bf4\u5c42\u5e8f\u904d\u5386\u4e5f\u53ef\u91c7\u7528stack\uff0cnod-&gt;right\u5148\u5165\u6808\u540e\u51fa\u6808\u3002 \u53e6\u5916\uff0c\u5982\u679c\u904d\u5386\u6ee1\u8db3\u4e4b\u5b57\u5f62\u72b6\uff08zigorder\uff09, \u53ef\u4ee5\u5efa\u7acb\u4e24\u4e2astack\uff0c \u4e00\u4e2a\u5de6\u5b50\u8282\u70b9\u5148\u5165\uff0c\u53e6\u4e00\u4e2a\u53f3\u5b50\u8282\u70b9\u5148\u5165\u3002</p>"},{"location":"CS/FDS/3tree/#722","title":"7.2.2   \u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386","text":"<p>\u76f8\u5e94\u5730\uff0c\u524d\u5e8f\u3001\u4e2d\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u90fd\u5c5e\u4e8e\u300c\u6df1\u5ea6\u4f18\u5148\u904d\u5386 depth-first traversal\u300d\uff0c\u5b83\u4f53\u73b0\u4e86\u4e00\u79cd\u201c\u5148\u8d70\u5230\u5c3d\u5934\uff0c\u518d\u56de\u6eaf\u7ee7\u7eed\u201d\u7684\u904d\u5386\u65b9\u5f0f\uff0c \u901a\u5e38\u57fa\u4e8e\u9012\u5f52\u5b9e\u73b0\u3002</p>"},{"location":"CS/FDS/3tree/#73","title":"7.3 \u4e8c\u53c9\u6811\u6570\u7ec4\u8868\u793a","text":"<ol> <li>\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff0c\u6839\u636e\u5c42\u5e8f\u904d\u5386\u7684\u987a\u5e8f\u5c06\u5404\u4e2a\u8282\u70b9\u5bf9\u5e94\u6570\u7ec4\u7d22\u5f15\u3002</li> <li>\u82e5\u6570\u7ec4arr[0]\u50a8\u5b58\u6839\u8282\u70b9\uff0c \u82e5\u8282\u70b9\u7684\u7d22\u5f15\u4e3a \\(i\\) \uff0c\u5219\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u7d22\u5f15\u4e3a\\(2i+1\\)  \uff0c\u53f3\u5b50\u8282\u70b9\u7d22\u5f15\u4e3a\\(2i+2\\);</li> <li>\u82e5\u6570\u7ec4\u7684arr[1]\u50a8\u5b58\u6839\u8282\u70b9\uff0c\u82e5\u8282\u70b9\u7684\u7d22\u5f15\u4e3a \\(i\\) \uff0c\u5219\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u7d22\u5f15\u4e3a\\(2i\\)  \uff0c\u53f3\u5b50\u8282\u70b9\u7d22\u5f15\u4e3a\\(2i+1\\);</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a<code>NULL</code>\u5b50\u8282\u70b9\u53ea\u51fa\u73b0\u5728\u6700\u5e95\u5c42\u4e14\u9760\u53f3</li> <li> <p>\u786e\u5b9a\u8282\u70b9\u7684\u4e2a\u6570<code>size</code>\uff0c \u5224\u65ad\u7d22\u5f15\u4e3a \\(i\\) \u7684\u8282\u70b9\u5176\u53f3\u5b50\u6811\u7d22\u5f15\\(2i+1\\)\u662f\u5426\u5927\u4e8e<code>size</code>\uff0c \u4ee5\u6b64\u786e\u5b9a\u53f3\u8282\u70b9\u662f\u5426\u4e3a\u7a7a\u3002</p> </li> <li> <p>\u8868\u793a\u4efb\u610f\u4e8c\u53c9\u6811\uff0c\u5e94\u8be5\u5728\u5c42\u5e8f\u904d\u5386\u4e2d\u663e\u793a\u7684\u5199\u51fa\u6240\u6709\u7684<code>NULL</code>\u8282\u70b9\u3002</p> </li> <li> <p>\u6807\u8bb0\u7a7a\u4f4d\uff1a\u4f7f\u7528<code>int</code>\u7684\u6700\u5927\u503c<code>INT_MAX</code>\uff0c\u56e0\u6b64\u8981\u6c42\u8282\u70b9\u503c\u4e0d\u80fd\u4e3a INT_MAX</p> </li> <li> <p>\u57fa\u4e8e\u6570\u7ec4\u8868\u793a\u7684\u4e8c\u53c9\u6811\u7684\u64cd\u4f5c <pre><code>\n</code></pre></p> </li> </ol>"},{"location":"CS/cs61a/chapter_1/","title":"Chapter 1","text":"<p>website https://inst.eecs.berkeley.edu/~cs61a/su20/ textbook http://composingprograms.com/pages/11-getting-started.html</p> <p>And, as imagination bodies forth The forms of things to unknown, and the poet's pen Turns them to shapes, and gives to airy nothing A local habitation and a name. \u2014William Shakespeare, A Midsummer-Night's Dream</p>"},{"location":"CS/cs61a/chapter_1/#11-getting-started","title":"1.1 Getting started","text":"<ul> <li>Statements &amp; Expressions. Python code consists of expressions and statements. Broadly, computer programs consist of instructions to either</li> <li>Compute some value</li> <li>Carry out some action</li> <li>Functions. Functions encapsulate logic that manipulates data. </li> <li>Objects. A set is a type of object, one that supports set operations like computing intersections and membership. An object seamlessly bundles together data and the logic that manipulates that data, in a way that manages the complexity of both. </li> <li> <p>Interpreters. Evaluating compound expressions requires a precise procedure that interprets code in a predictable way. A program that implements such a procedure, evaluating compound expressions, is called an interpreter.  <pre><code>from urllib.request import urlopen)\nshakesphere = urlopen('http://composingprograms.com/shakespeare.txt')\nwords = set(shakespeare.read().decode().split())\n{w for w in words if len(w) == 6 and w[::-1] in words}\n{'redder', 'drawer', 'reward', 'diaper', 'repaid'}\n</code></pre></p> </li> <li> <p>Errors Messages</p> </li> <li>Error Types<ol> <li>SyntaxError        Contained improper syntax (e.g. missing a colon after an if statement or forgetting to close parentheses/quotes)</li> <li>IndentationError Contained improper indentation (e.g. inconsistent indentation of a function body)</li> <li>TypeError            Attempted operation on incompatible types (e.g. trying to add a function and a number) or called function with the wrong number of arguments</li> <li>ZeroDivisionError Attempted division by zero</li> </ol> </li> <li>Command line</li> <li>ls: **l**i**s**ts all files in the current directory</li> <li>cd : **c**hange into the specified **d**irectory <li>mkdir : **m**a**k**e a new **dir**ectory with the given name <li>mv  : **m**o**v**e the file at the given source to the given destination"},{"location":"CS/cs61a/chapter_1/#12-elements-of-programming","title":"1.2 Elements of Programming","text":"<ul> <li> <p>Importing Library Functions <pre><code>from math import sqrt\nsqrt(256)\n\nfrom operator import add, sub, mul\nadd(14, 28)\nsub(100, mul(7, add(8, 4)))\n\nfrom math import pi\n</code></pre></p> </li> <li> <p>Names and the Environment</p> </li> </ul> <p>After assigning max to 5, the name max is no longer bound to a function, and so attempting to call max(2, 3, 4) will cause an error. So in python program,we should use  variable names like max_length. When executing an assignment statement, Python evaluates the expression to the right of = before changing the binding to the name on the left. Therefore, one can refer to a name in right-side expression, even if it is the name to be bound by the assignment statement.</p> <ul> <li>Functions</li> <li>Pure functions. Functions have some input (their arguments) and return some output (the result of applying them).</li> <li>Unpure functions.</li> </ul>"},{"location":"CS/cs61a/chapter_1/#13-function","title":"1.3 Function","text":"<ul> <li>When it comes to division, Python provides two infix operators: / and //. The former is normal division, so that it results in a floating point, or decimal value, even if the divisor evenly divides the dividend. The // operator, on the other hand, rounds the result down to an integer.</li> <li>Documentation</li> <li>A function definition will often include documentation describing the function, called a docstring, which must be indented along with the function body. Docstrings are conventionally triple quoted. The first line describes the job of the function in one line. The following lines can describe arguments and clarify the behavior of the function.</li> <li>Comments.</li> <li>Comments in Python can be attached to the end of a line following the # symbol.</li> <li> <p>Default Argument Values <pre><code>def pressure(v, t, n=6.022e23):# the = is not a asignment\n        \"\"\"Compute the pressure in pascals of an ideal gas.\n\n        v -- volume of gas, in cubic meters\n        t -- absolute temperature in degrees kelvin\n        n -- particles of gas (default: one mole)\n        \"\"\"\n        k = 1.38e-23  # Boltzmann's constant\n        return n * k * t / v\n\n&gt;&gt;&gt; pressure(1, 273.15)\n2269.974834\n&gt;&gt;&gt; pressure(1, 273.15, 3 * 6.022e23)\n6809.924502\n</code></pre></p> </li> <li> <p>When Python executes a return statement, the function terminates immediately. If Python reaches the end of the function body without executing a return statement, it will automatically return None.</p> </li> </ul>"},{"location":"CS/cs61a/chapter_1/#15-control","title":"1.5 Control","text":"<ul> <li>Boolean Operators</li> <li>an order of operation:not &gt; and &gt; or</li> <li>Python values such as 0, None, '' (the empty string), and [] (the empty list) are considered false values. All other values are considered true values.</li> <li>Short Citrcuiting</li> </ul> oprator checks if: evaluates from left to right up to example and all value are true the first value false <code>False and 1/0</code>evaluates <code>False</code> or at least one value is true the first value true <code>True or 1/0</code>evaluates <code>True</code> <p>!!! note \"\"       - If and and or do not short-circuit, they just return the last value; another way to remember this is that and and or always return the last thing they evaluate, whether they short circuit or not. Keep in mind that and and or don't always return booleans when using values other than True and False. <pre><code>&gt;&gt;&gt; 1 and 1 &gt; 0\nTrue\n\n&gt;&gt;&gt; True and 13\n13\n\n&gt;&gt;&gt; False and 10\nFalse\n\n&gt;&gt;&gt; 1 or 1/0\n1\n\n&gt;&gt;&gt; 1 and 1/0\nZeroDivisonError\n</code></pre></p>"},{"location":"CS/cs61a/chapter_1/#h1-debugging","title":"H1 Debugging","text":"<pre><code>File \"&lt;file name&gt;\", line &lt;number&gt;, in &lt;function&gt; \n\n&lt;error type&gt;: &lt;error message&gt;  \n\nTraceback (most recent call last):\n  File \"&lt;pyshell#29&gt;\", line 3 in &lt;module&gt;   #Traceback Messages\n    result = buggy(5)   # the secondline displays the actual line of code that makes the next function cal\n  File &lt;pyshell#29&gt;\", line 5 in buggy\n    return f + x\nTypeError: unsupported operand type(s) for +: 'function' and 'int' #Error Messages\n</code></pre>"},{"location":"CS/cs61a/chapter_1/#debugging-techniques","title":"Debugging techniques","text":""},{"location":"CS/cs61a/chapter_1/#running-doctests","title":"Running doctests","text":"<p>Python has a great way to quickly write tests for your code. These are called doctests, and look like this: <pre><code>def foo(x):\n    \"\"\"A random function.\n\n    &gt;&gt;&gt; foo(4)\n    4\n    &gt;&gt;&gt; foo(5)\n    5\n    \"\"\"\n</code></pre> <code>python -m doctests file.py</code>type this in the terminal , it loads your file into the Python interpreter, and checks to see if each doctest input (e.g. foo(4)) is the same as the specified output (e.g. 4). If it isn't, a message will tell you which doctests you failed. <code>python -m doctests file.py -v</code>v stands for _verbose. _In addition to telling you which doctests you failed, it will also tell you which doctests passed.</p>"},{"location":"CS/cs61a/chapter_1/#writing-you-own-tests","title":"Writing you own tests","text":""},{"location":"CS/cs61a/chapter_1/#usingprintstatement","title":"Using<code>print</code>statement","text":"<pre><code>def foo(x):\n    result = some_function(x)\n    print('DEBUG: result is', result)\n    tmp = other_function(result)\n    print('DEBUG: other_function returns', tmp)\n    '''\n    Note:prefixing debug statements with the specific string \"DEBUG: \" \n    allows them to be ignored by the ok autograder used by cs61a.\n    '''\n    return tmp\n</code></pre>"},{"location":"CS/cs61a/chapter_1/#long-term-debugging","title":"Long-term debugging","text":"<pre><code>debug = True # a global variable\n\ndef foo(n):\ni = 0\nwhile i &lt; n:\n    i += func(i)\n    if debug:\n        print('DEBUG: i is', i)\n</code></pre>"},{"location":"CS/cs61a/chapter_1/#interactive-debugging","title":"Interactive Debugging","text":"<p><code>python -i file.py</code> run this statement in the terminal, and then has a session of python where all the difinitions of <code>file.py</code> have already been executed. <code>python ok -q &lt;question name&gt; -i</code>  If you are using the ok autograder, it has a specific tool that enables you to jump into the middle of a failing test case.</p>"},{"location":"CS/cs61a/chapter_1/#usingassertstatements","title":"Using<code>assert</code>statements","text":"<pre><code>def double(x):\n    assert isinstance(x, int), \"The input to double(x) must be an integer\"\n    return 2 * x\n</code></pre>"},{"location":"CS/cs61a/chapter_1/#error-types","title":"Error Types","text":""},{"location":"CS/cs61a/chapter_1/#syntaxerror","title":"SyntaxError","text":"<ul> <li>Cause: code syntax mistake</li> <li> <p>Example: <pre><code>File \"file name\", line number \ndef incorrect(f)\n                ^\nSyntaxError: invalid syntax\n</code></pre></p> </li> <li> <p>Solution: the ^ symbol points to the code that contains invalid syntax. The error message doesn't tell you what is wrong, but it does tell you where.</p> </li> <li>Notes: Python will check for SyntaxErrors before executing any code. This is different from other errors, which are only raised during runtime.</li> </ul>"},{"location":"CS/cs61a/chapter_1/#indentationerror","title":"IndentationError","text":"<ul> <li>Cause: improper indentation</li> <li> <p>Example: <pre><code>File \"file name\", line number   \nprint('improper indentation') \nIndentationError: unindent does not match any outer indentation level\n</code></pre></p> </li> <li> <p>Solution: The line that is improperly indented is displayed. Simply re-indent it.</p> </li> <li>Notes: If you are inconsistent with tabs and spaces, Python will raise one of these. Make sure you use spaces! (It's just less of a headache in general in Python to use spaces and all cs61a content uses spaces).</li> </ul>"},{"location":"CS/cs61a/chapter_1/#typeerror","title":"TypeError","text":"<ul> <li>Cause 1:</li> <li>Invalid operand types for primitive operators. You are probably trying to add/subract/multiply/divide incompatible types.</li> <li> <p>Example: <pre><code>TypeError: unsupported operand type(s) for +: 'function' and 'int'\n</code></pre></p> </li> <li> <p>Cause 2:</p> </li> <li>Using non-function objects in function calls.</li> <li> <p>Example: <pre><code>&gt;&gt;&gt; square = 3 \n&gt;&gt;&gt; square(3)\nTraceback (most recent call last):   ... \nTypeError: 'int' object is not callable\n</code></pre></p> </li> <li> <p>Cause 3:</p> </li> <li>Passing an incorrect number of arguments to a function.</li> <li>Example: <pre><code>&gt;&gt;&gt; add(3) \nTraceback (most recent call last):   ... \nTypeError: add expected 2 arguments, got 1\n</code></pre></li> </ul>"},{"location":"CS/cs61a/chapter_1/#nameerror","title":"NameError","text":"<ul> <li>Cause: variable not assigned to anything OR it doesn't exist. This includes function names.</li> <li> <p>Example: <pre><code>:File \"file name\", line number   \ny = x + 3 \nNameError: global name 'x' is not defined\n</code></pre></p> </li> <li> <p>Solution: Make sure you are initializing the variable (i.e. assigning the variable to a value) before you use it.</p> </li> <li>Notes: The reason the error message says \"global name\" is because Python will start searching for the variable from a function's local frame. If the variable is not found there, Python will keep searching the parent frames until it reaches the global frame. If it still can't find the variable, Python raises the error.</li> </ul>"},{"location":"CS/cs61a/chapter_1/#indexerror","title":"IndexError","text":"<ul> <li>Cause: trying to index a sequence (e.g. a tuple, list, string) with a number that exceeds the size of the sequence.</li> <li> <p>Example: <pre><code>File \"file name\", line number   \nx[100]\nIndexError: tuple index out of range\n</code></pre></p> </li> <li> <p>Solution: Make sure the index is within the bounds of the sequence. If you're using a variable as an index (e.g. seq[x], make sure the variable is assigned to a proper index.</p> </li> </ul>"},{"location":"CS/cs61a/chapter_1/#common-bugs","title":"Common Bugs","text":"<ul> <li>Spelling</li> <li>Missing parentheses</li> <li>Missing closed quotes</li> <li><code>=</code> VS <code>==</code></li> <li>Infinite Loops</li> <li>Off-by-one errors</li> </ul>"},{"location":"CS/cs61a/chapter_1/#lec-6-design","title":"Lec 6 Design","text":"<p>WAV Files encodes a simple sound wave <pre><code>from wave import open \nfrom struct import Struct\nfrom math import floor\ndef tri(frequency,  amplitude = 0.3):\n    \"\"\"A continuous triangle wave.\"\"\"\n    period = frame_rate // frequency\n    def sampler(t):\n        saw_wave = t / period - floor(t / period + 0.5)\n        tri_wave = 2 * abs(2 * saw_wave) - 1\n        return amplitude * tri_wave\n    return sampler\n</code></pre></p>"},{"location":"CS/cs61a/chapter_1/#16-higher-order-function","title":"1.6 Higher-Order Function","text":""},{"location":"CS/cs61a/chapter_1/#function-as-arguments","title":"Function as Arguments","text":""},{"location":"CS/cs61a/chapter_1/#function-as-general-methods","title":"Function as General Methods","text":"<p>some functions express general methods of computation, independent of the particular functions they call. <pre><code>def improve(update, close, guess=1): # default parameter2       \n    while not close(guess):\n        guess = update(guess)\n    return guess\n\ndef golden_update(guess):\n    return 1/guess + 1 #the main iratioo\n\ndef square_close_to_successor(guess):\n    return approx_eq(guess * guess, guess + 1)\n\ndef approx_eq(x, y, tolerance=1e-3):\n    return abs(x - y) &lt; tolerance #the return value is True/False\n\nphi = improve(golden_update,square_close_to_successor) \n</code></pre></p>"},{"location":"CS/cs61a/chapter_1/#defining-functions-iii-nested-definitions","title":"Defining Functions III: Nested Definitions","text":"<p>Lexical scope. Locally defined functions also have access to the name bindings in the scope in which they are defined. </p> <ul> <li>The names of a local function do not interfere with names external to the function in which it is defined, because the local function name will be bound in the current local environment in which it was defined, rather than the global environment.</li> <li>A local function can access the environment of the enclosing function, because the body of the local function is evaluated in an environment that extends the evaluation environment in which it was defined.</li> </ul>"},{"location":"CS/cs61a/chapter_1/#function-as-returned-values","title":"Function as Returned Values","text":""},{"location":"CS/cs61a/chapter_1/#newtons","title":"Newton'S","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/","title":"\u6570\u5b66\u5206\u6790","text":"<p>\u53c2\u8003\u4e66\u7c4d</p> <p>\u6570\u5b66\u5206\u6790\uff08\u9648\u7eaa\u4fee\uff09\uff1b   \u6570\u5b66\u5206\u6790\u4e60\u9898\u8bb2\u4e49\uff08\u8c22\u60e0\u6c11\uff09\u3002</p>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_2","title":"\u6570\u5217\u6781\u9650","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_3","title":"\u5b9e\u6570\u7cfb\u7684\u8fde\u7eed\u6027","text":"<ul> <li>\u4e0a\u786e\u754c\u4e0e\u4e0b\u786e\u754c </li> <li>\u6709\u754c </li> <li>\u786e\u754c\u7684\u5b9a\u4e49\u63cf\u8ff0 </li> <li>\u786e\u754c\u5b58\u5728\u5b9a\u7406\uff08\u5b9e\u6570\u7cfb\u7684\u8fde\u7eed\u6027\u516c\u7406\uff09 <ul> <li>\u5b9e\u6570\u7684\u5c0f\u6570\u8868\u8fbe</li> <li>Dedekind\u516c\u7406</li> </ul> </li> <li>\u5b9e\u6570\u7684\u6027\u8d28 </li> <li>\u56db\u5219\u8fd0\u7b97\u5c01\u95ed</li> <li>\u6709\u5e8f\u6027</li> <li>\u963f\u57fa\u7c73\u5fb7\u6027</li> <li>\u7a20\u5bc6\u6027</li> <li>Dedekind\u5206\u5272 </li> <li>\u5b9a\u4e49</li> <li>Dedekind\u516c\u7406\uff08\u5b9e\u6570\u90e8\u5206\u300a\u5fae\u79ef\u5206\u5165\u95e8\u300b\uff09</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_4","title":"\u6570\u5217\u6781\u9650","text":"<ul> <li>\u5b9a\u4e49\uff08\u51e0\u4f55\u63cf\u8ff0\uff09 </li> <li>\u6027\u8d28 </li> <li>\u552f\u4e00\u6027</li> <li>\u6709\u754c\u6027</li> <li>\u4fdd\u5e8f\u6027\uff08\u4fdd\u53f7\u6027\uff09\u53ca\u5176\u5426\u547d\u9898</li> <li>\u5939\u903c\u6027</li> <li>\u56db\u5219\u8fd0\u7b97</li> <li>\u6536\u655b\u6570\u5217\u7684\u6bcf\u4e00\u5b50\u5217\u6536\u655b\u4e8e\u540c\u4e00\u6781\u9650</li> <li>Cauchy\u547d\u9898\uff08\u5e73\u5747\u6536\u655b\u5b9a\u7406\uff09 </li> <li>Stolz\u5b9a\u7406 </li> <li>\u81ea\u7136\u5bf9\u6570\\(e\\)\u548cEuler\u5e38\u6570\\(\\gamma\\)</li> <li>\u6536\u655b\u51c6\u5219 </li> <li>\u5b9a\u4e49</li> <li>\u5355\u8c03\u6709\u754c\u6536\u655b</li> <li>Cauchy\u6536\u655b\u539f\u7406\uff08\u538b\u7f29\u6620\u50cf\uff09</li> <li>\u5224\u65ad\u53d1\u6563\uff08\u6536\u655b\u7684\u5bf9\u5076\u6cd5\u5219\u5b9a\u4e49\uff0c\u6027\u8d28\uff0c\u6536\u655b\u51c6\u5219\uff09 </li> <li>\u5bf9\u5076\u6cd5\u5219</li> <li>\u65e0\u754c\u6570\u5217\u53d1\u6563</li> <li>\u5b50\u5217\uff08\u53d1\u6563\u5b50\u5217\uff1b\u4e24\u5b50\u5217\u6536\u655b\u4e8e\u4e0d\u540c\u6781\u9650\uff09</li> <li>Cauchy\u6536\u655b</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_5","title":"\u5b9e\u6570\u7cfb\u516d\u5927\u57fa\u672c\u5b9a\u7406","text":"<ul> <li>\u786e\u754c\u539f\u7406 </li> <li>\u5355\u8c03\u6709\u754c\u6536\u655b </li> <li>\u95ed\u533a\u95f4\u5957\u5b9a\u7406  </li> <li>\\(B-W\\)\u51dd\u805a\u5b9a\u7406\uff08\u6709\u754c\u6570\u5217\u5fc5\u6709\u6536\u655b\u5b50\u5217\uff09 \\(\\forall\\varepsilon&gt;0\\)\uff0c\u5728\u9886\u57df\\(U(\\xi,\\varepsilon)\\)\u4e2d\u603b\u6709\\(\\{x_n\\}\\)\u7684\u65e0\u7a77\u9879</li> <li>\\(Cauchy\\)\u6536\u655b\u539f\u7406  \u4e0d\u7528\u77e5\u9053\u5177\u4f53\u7684\u6781\u9650\u503c\uff1b\u6784\u9020\\(U(x_n,\\frac{1}{n})\\)\u6765\u903c\u8fd1\uff1b</li> <li>\u6709\u9650\u8986\u76d6\u5b9a\u7406 </li> <li>\u4e00\u4e2a\u95ed\u533a\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u5f00\u8986\u76d6\u4e2d\u4e00\u5b9a\u6709\u8fd9\u4e2a\u95ed\u533a\u95f4\u7684\u6709\u9650\u5b50\u8986\u76d6\u3002</li> <li>\u52a0\u5f3a\u5f62\u5f0f\u7684\u8986\u76d6\u5b9a\u7406\uff08Lebesgue\u6570\uff09</li> <li>\u805a\u70b9\u5b9a\u7406  \u6709\u754c\u65e0\u9650\u70b9\u96c6\u5fc5\u5b58\u5728\u805a\u70b9\u3002</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_6","title":"\u5b9e\u6570\u7cfb\u516d\u5927\u5b9a\u7406\u6781\u5176\u4e92\u8bc1","text":"<p>\u5b9e\u6570\u5b8c\u5907\u6027\u57fa\u672c\u5b9a\u7406\u7684\u76f8\u4e92\u8bc1\u660e(30\u4e2a).pdf \u6570\u5217\u6781\u9650\u4e0e\u5b9e\u6570\u5b8c\u5907\u6027.pdf</p>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_7","title":"\u4e00\u4e9b\u9898\u76ee\uff1a","text":"<ol> <li>\u5df2\u77e5\\(S_n = 1 + \\frac{1}{2^p} + \\frac{1}{3^p} + \\cdots + \\frac{1}{n^p}\\).</li> </ol> <p>\u5f53\\(p\\)\\(&lt; 1\\)\u65f6\uff0c\u8bc1\u660e\\(\\left\\{S_n\\right\\}\\)\u6536\u655b\uff1b\u5f53\\(p\\ge1\\)\u65f6\uff0c\u8bc1\u660e\\(\\{S_n\\}\\)\u53d1\u6563\u3002 \\(proof\\)\uff1a \\(S_{2^n} - S_{2^{n-1}}=\\frac{1}{2^{n-1}+1}+\\frac{1}{2^{n-1}+2}+\\dots+\\frac{1}{2^n}&gt;\\frac{1}{2^n}+\\frac{1}{2^n}+\\cdots+\\frac{1}{2^n}=\\frac{2^{n-1}}{2^n}=\\frac{1}{2}\\) \u82e5\\(2^k&lt;n&lt;2^{k+1}\\),\\(k\\in\\mathbb{Z}^+\\) \u5f53\\(p&lt;1\\)\u65f6\uff0c\\(S_n &gt;1+\\frac{1}{2} + \\frac{1}{3}+\\frac{1}{4}+ \\dots + \\frac{1}{n}&gt;1+\\frac{1}{2}+\\frac{1}{4}+\\frac{1}{4}+\\)\\(\\frac{1}{8} + \\frac{1}{8} + \\frac{1}{8}+\\frac{1}{8}+\\cdots&gt;1+\\frac{k}{2}\\)\u5219\\(S_n\\)\u4e3a\u6b63\u65e0\u7a77\u5927\u91cf\uff0c\\(S_n\\)\u53d1\u6563\u3002 \u5f53\\(p\\ge 1\\)\u65f6\uff0c\\(S_n\\)\u5355\u8c03\uff0c\u4e0b\u8bc1\\(S_n\\)\u6709\u754c\uff1a \\(S_n &lt;1+\\frac{1}{2^p}+\\frac{1}{2^p}+\\frac{1}{4^p}+\\frac{1}{4^p}+\\frac{1}{4^p}+\\frac{1}{4^p}+\\dots+\\frac{1}{2^{k(1-p)}}=1+\\frac{1}{2^{1-p}}+\\frac{1}{2^{2(1-p)}}+\\dots+\\frac{1}{2^{k(1-p)}}\\)\\(&lt;\\frac{2^{1-p}}{2^{1-p}-1}\\) \\(\\Box\\)</p> <ol> <li>\u8bc1\u660e\\(a_n=1-\\frac{1}{2}+\\frac{1}{3}+\\dots+(-1)^{n-1}\\frac{1}{n}\\)\u6536\u655b.</li> </ol> <p>\\(proof\\):</p> <ul> <li>\u5229\u7528\\(Cauchy\\)\u6536\u655b\u5b9a\u7406\uff1a\u5206\u522b\u8bc1\u660e\u5947\u6570\u5b50\u5217\u548c\u5076\u6570\u5b50\u5217\u6536\u655b\u3002\u53ef\u8bc1\u5f97\\(a_n &lt;\\frac{1}{n+1}\\)</li> <li>\u5229\u7528\u95ed\u533a\u95f4\u5957\u5b9a\u7406\uff1a\u6784\u9020\u95ed\u533a\u95f4\u5957\\([a_2,a_1]\\supset[a_4,a_3]\\supset\\dots\\supset[a_{2k},a_{2k-1}]\\)\uff0c\u6ee1\u8db3\\(|I_k|=a_{2k-1}-a_{2k}=\\frac{1}{2k}\\)\u4e14\\(\\lim_{k\\to\\infty}|I_k|=0\\).\u7531\u95ed\u533a\u95f4\u5957\u5b9a\u7406\u5f97\uff0c\\(\\exists\\xi\\in\\cap_{k = 1}^{\\infty}[a_{2k},a_{2k-1}]\\)\u4e14\\(\\xi=\\lim_{k\\to\\infty}a_{2k}=\\lim_{k\\to\\infty}a_{2k-1}\\)\uff0c\u56e0\u6b64\\(\\lim_{n\\to\\infty}a_n=\\xi\\).</li> <li>\u83b1\u5e03\u5c3c\u5179\u5224\u522b\u6cd5\uff1a</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_8","title":"\u51fd\u6570\u6781\u9650","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_9","title":"\u5b9a\u4e49 \u5355\u4fa7\u6781\u9650 \u5b9a\u4e49\u7684\u6269\u5145","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_10","title":"\u57fa\u672c\u6027\u8d28","text":"<ul> <li>\u552f\u4e00\u6027</li> <li>\u5c40\u90e8\u6709\u754c\u6027</li> <li>\u5c40\u90e8\u4fdd\u53f7\u6027</li> <li>\u4fdd\u5e8f\u6027</li> <li>\u5939\u903c\u6027</li> <li>\u51fd\u6570\u6781\u9650\u7684\u56db\u5219\u8fd0\u7b97\u6cd5\u5219</li> <li>\u590d\u5408\u51fd\u6570\u6781\u9650</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_11","title":"\u57fa\u672c\u547d\u9898","text":"<ul> <li>\u5355\u8c03\u51fd\u6570\u7684\u5355\u4fa7\u6781\u9650\u5b58\u5728\u5b9a\u7406\uff08\u786e\u754c\u5b58\u5728\u5b9a\u7406\uff09 </li> <li>\\(Heine\\)\u5f52\u7ed3\u539f\u7406\uff08\u53cd\u8bc1\u6cd5\uff09 </li> <li>\u63a8\u8bba\\(f(x_0)\\)\u6781\u9650\u5b58\u5728\\(\\leftrightarrow\\)\\(\\forall\\{x_n\\}\\lim_{n\\to\\infty}x_n=x_0,f(x_n)\\)\u4e00\u5b9a\u6536\u655b\uff08\u8bc1\u660e\u6536\u655b\u4e8e\u540c\u4e00\u6781\u9650\uff09</li> <li>\u51fd\u6570\u6781\u9650\u7684\\(Cauchy\\)\u6536\u655b\u6cd5\u5219 </li> <li>\u4e24\u4e2a\u91cd\u8981\u6781\u9650 </li> <li>\\(\\lim_{x\\to0}\\frac{sinx}{x}=1\\)</li> <li>\\(\\lim_{x\\to0}(1+x)^{\\frac{1}{x}}=e\\)</li> <li>\u65e0\u7a77\u5c0f\u91cf\uff0c\u6709\u754c\u91cf\uff0c\u65e0\u7a77\u5927\u91cf\u548c\u9636\u7684\u6bd4\u8f83 </li> <li>o(),O()\uff0c\u540c\u9636\u65e0\u7a77\u5c0f\uff08\u5927\uff09\u91cf\uff0c\u7b49\u4ef7\u65e0\u7a77\u91cf \u7684\u5b9a\u4e49</li> <li>\u6280\u5de7\uff1a  </li> <li>\u628a\u6307\u6570\u5316\u4e3a\u4ee5\\(e\\)\u4e3a\u5e95\u7684\u51fd\u6570\uff0c\u4ee5\u53ca\u53d6\u5bf9\u6570</li> <li>\u4e09\u89d2\u516c\u5f0f\u500d\u89d2\u516c\u5f0f\uff0c\u548c\u5dee\u5316\u79ef\uff0c\u79ef\u5316\u548c\u5dee</li> <li>\u6362\u5143\u6cd5</li> <li>\u5f53\\(x\\to0\\)\u65f6</li> <li>\\(sinx = x+o(x)\\)</li> <li>\\(cosx = 1-\\frac{1}{2x^2}+o(x^2)\\)</li> <li>\\(e^x=1+x+o(x)\\)</li> <li>\\(ln(1+x) = x+o(x)\\)</li> <li>\\((1+x)^\\alpha=1+\\alpha x+o(x)\\)</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_12","title":"\u8fde\u7eed\u51fd\u6570","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_13","title":"\u5b9a\u4e49\uff08\u5355\u4fa7\u8fde\u7eed\uff09","text":"<ul> <li>\u51fd\u6570\u6781\u9650\u8bed\u8a00\u6ce8\u610f\u9886\u57df\u4e0d\u5728\u4e3a\u53bb\u5fc3\u9886\u57df\uff0c\u4e14\u8981\u6709\u5b9a\u4e49</li> <li>\\(Heine\\)\u5f52\u7ed3</li> <li>\u5de6\u53f3\u6781\u9650\u5b58\u5728\u4e14\u4e0e\u8be5\u70b9\u51fd\u6570\u503c\u76f8\u7b49</li> <li>\u632f\u5e45</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_14","title":"\u95f4\u65ad\u70b9","text":"<ul> <li>\u7b2c\u4e00\u7c7b\uff08\u8df3\u8dc3\uff09\u5de6\u53f3\u6781\u9650\u5b58\u5728\u4f46\u4e0d\u76f8\u7b49</li> <li>\u7b2c\u4e8c\u7c7b\u5de6\u53f3\u6781\u9650\u81f3\u5c11\u4e00\u4e2a\u4e0d\u5b58\u5728</li> <li>\u7b2c\u4e09\u7c7b\uff08\u53ef\u53bb\uff09\u5de6\u53f3\u6781\u9650\u5b58\u5728\u4e14\u76f8\u7b49\uff0c\u4f46\u662f\u4e0e\u8be5\u70b9\u51fd\u6570\u503c\u4e0d\u76f8\u7b49\uff0c\u6216\u8005\u51fd\u6570\u5728\u8be5\u70b9\u65e0\u5b9a\u4e49</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_15","title":"\u7279\u6b8a\u51fd\u6570\u7684\u8fde\u7eed\u6027","text":"<ul> <li>\u9ece\u66fc\u51fd\u6570\u7684\u8fde\u7eed\u6027\uff08\u65e0\u7406\u6570\u70b9\u8fde\u7eed\uff0c\u6709\u7406\u6570\u70b9\u4e0d\u8fde\u7eed\uff0c\u53ef\u53bb\u95f4\u65ad\u70b9\uff09</li> <li>\u72c4\u5229\u514b\u96f7\u51fd\u6570\u7684\u8fde\u7eed\u6027\uff08\u5904\u5904\u4e0d\u8fde\u7eed\uff09</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_16","title":"\u53cd\u51fd\u6570\u8fde\u7eed\u6027","text":"<ul> <li>\u53cd\u51fd\u6570\u5b58\u5728\u6027\u5b9a\u7406</li> <li>\u82e5\u51fd\u6570\\(y=f(x),x\\in D_f\\)\u662f\u4e25\u683c\u5355\u8c03\u589e\u52a0\u7684\uff0c\u5219\u5b58\u5728\u5b83\u7684\u53cd\u51fd\u6570\\(x = f^{-1}(y),y\\in R_f\\)\u5e76\u4e14\\(f^{-1}(y)\\)\u4e5f\u662f\u5355\u8c03\u589e\u52a0\u7684\u3002</li> <li>\u53cd\u51fd\u6570\u8fde\u7eed\u6027\u5b9a\u7406</li> <li>\u51fd\u6570\\(y=f(x)\\)\u5728\u95ed\u533a\u95f4\\([a,b]\\)\u4e0a\u8fde\u7eed\u4e14\u4e25\u683c\u5355\u8c03\u589e\u52a0\uff0c\\(f(a) = \\alpha,f( b )=\\beta\\)\uff0c\u5219\u5b83\u7684\u53cd\u51fd\u6570\\(x=f^{-1}(y)\\)\u5728   \\([\\alpha,\\beta]\\)\u8fde\u7eed\u4e14\u4e25\u683c\u5355\u8c03\u589e\u52a0\u3002<ul> <li>\\(f([a,b])=[\\alpha,\\beta],\\forall\\gamma\\in[\\alpha,\\beta],\\exists f(x_0)=\\gamma\\)\uff0c\uff08\u6ce8\u610f\u5bf9\u4e8e\u533a\u95f4\u7684\u5b9a\u4e49\uff09</li> <li>\\(x = f^{-1}(y)\\)\u7684\u8fde\u7eed\u6027</li> </ul> </li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_17","title":"\u590d\u5408\u51fd\u6570\u8fde\u7eed\u6027","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_18","title":"\u95ed\u533a\u95f4\u4e0a\u7684\u8fde\u7eed\u51fd\u6570","text":"<ul> <li>\u6709\u754c\u6027\u5b9a\u7406\uff08\u53cd\u8bc1\uff0c\u95ed\u533a\u95f4\u5957\u5b9a\u7406\uff1b\u53cd\u8bc1BW\u5b9a\u7406\uff09 </li> <li>\u6700\u503c\u5b9a\u7406\uff08\u786e\u754c\uff0c\u5b50\u5217\uff09 </li> <li>\u96f6\u70b9\u5b58\u5728\u5b9a\u7406 </li> <li>\u786e\u754c\u5b9a\u7406</li> <li>\u95ed\u533a\u95f4\u5957\u5b9a\u7406\uff08\u6574\u4f53\u5230\u5c40\u90e8\uff09</li> <li>\u8986\u76d6\u539f\u7406\uff08\u53cd\u8bc1\uff0c\u5c40\u90e8\u5230\u6574\u4f53\uff09</li> <li>\u4ecb\u503c\u5b9a\u7406</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_19","title":"\u4e00\u81f4\u8fde\u7eed\u6027","text":"<ul> <li>\u5b9a\u4e49\uff08\u533a\u95f4\\(I\\)\uff09 </li> <li>\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u7b49\u4ef7\u523b\u753b\uff08\u70b9\u5217\uff09 </li> <li>Cantor\u5b9a\u7406 \u6709\u754c\u95ed\u533a\u95f4\u4e0a\u7684\u8fde\u7eed\u51fd\u6570\u5fc5\u5728\u8fd9\u4e2a\u533a\u95f4\u4e0a\u4e00\u81f4\u8fde\u7eed </li> <li>\u8986\u76d6\u539f\u7406</li> <li>\u51dd\u805a\u539f\u7406\uff08\u53cd\u8bc1\uff09</li> <li>\u6709\u754c\u5f00\u533a\u95f4\u7684\u8fde\u7eed\u51fd\u6570\u5728\uff08a\uff0cb\uff09\u4e0a\u4e00\u81f4\u8fde\u7eed\u7684\u5145\u8981\u6761\u4ef6\u662f\u5b58\u5728\u4e24\u4e2a\u6709\u9650\u7684\u5355\u4fa7\u6781\u9650 </li> <li>\u51fd\u6570\u5728R\u4e0a\u8fde\u7eed\uff0c\u82e5\u8d8b\u4e8e\u6b63\u8d1f\u65e0\u7a77\u7684\u6781\u9650\u5b58\u5728\uff0c\u5219\u8be5\u51fd\u6570\u5728R\u4e0a\u4e00\u81f4\u8fde\u7eed</li> <li>\u4e00\u81f4\u8fde\u7eed\u7684\u590d\u5408\u51fd\u6570\u4e5f\u4e00\u81f4\u8fde\u7eed</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_20","title":"\u5355\u8c03\u51fd\u6570","text":"<ul> <li>\u5355\u8c03\u51fd\u6570\u7684\u95f4\u65ad\u70b9\u4e3a\u8df3\u8dc3\u70b9\uff0c\u5373\u5728\u8be5\u5904\u5355\u4fa7\u6781\u9650\u5b58\u5728\u4f46\u4e0d\u76f8\u7b49</li> <li>\u5355\u8c03\u51fd\u6570\u7684\u95f4\u65ad\u70b9\u81f3\u591a\u4e3a\u53ef\u5217\u4e2a\uff08\u8bc1\u660e\u4efb\u4f55\u4e24\u4e2a\u4e0d\u540c\u7684\u95f4\u65ad\u70b9\u6240\u5bf9\u5e94\u7684\u8df3\u8dc3\u533a\u95f4\u5fc5\u4e0d\u76f8\u4ea4\uff09</li> <li>\\(f\\)\u4e3a\u533a\u95f4\\(I\\)\u7684\u5355\u8c03\u51fd\u6570\uff0c\u503c\u57df\u4e3a\u533a\u95f4\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662ff\u5728\u533a\u95f4\\(I\\)\u8fde\u7eed</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_21","title":"\u5fae\u5206\u4e2d\u503c\u5b9a\u7406","text":"<ul> <li>Fermat\u5b9a\u7406\uff1a\u6781\u503c\u70b9\u7684\u5bfc\u6570\u503c\u4e3a0</li> <li>Rolle\u5b9a\u7406\uff1a\u95ed\u533a\u95f4\u8fde\u7eed\uff0c\u5f00\u533a\u95f4\u53ef\u5bfc</li> <li>Lagrange\u4e2d\u503c\u5b9a\u7406\uff1a\u95ed\u533a\u95f4\u8fde\u7eed\uff0c\u5f00\u533a\u95f4\u53ef\u5bfc\uff08\uff09\u6784\u9020\u51fd\u6570\u5229\u7528Rolle\u5b9a\u7406\u8bc1\u660e</li> <li>Cauchy\u4e2d\u503c\u5b9a\u7406\uff1a\u6570k\u503c\u6cd5</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_22","title":"\u4e0d\u5b9a\u79ef\u5206","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_23","title":"\u5b9a\u79ef\u5206","text":""},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_24","title":"\u5b9a\u79ef\u5206\u7684\u6982\u5ff5\u4e0e\u53ef\u79ef\u6761\u4ef6","text":"<ul> <li>Riemman\u53ef\u79ef</li> <li>\\(\\forall \\varepsilon &gt; 0,\\exists \\delta &gt; 0,\\forall\\)\u5206\u5272\\(P\\)\u6ee1\u8db3\\(\\left \\|P\\right\\|&lt; \\delta\uff0c\\forall\\)\u4ecb\u70b9\u96c6\\(\\{\\xi_i\\}\\)\uff0c\u6709\\(|\\sum_{i = 1}^nf(\\xi_i)\\Delta x_i - I| &lt; \\varepsilon\\)</li> <li>\\(Dirichlet\\)\u51fd\u6570\u5728\u4efb\u610f\u6709\u754c\u533a\u95f4\u4e0a\u90fd\u4e0d\u53ef\u79ef</li> <li>\u8fbe\u5e03\u4e0a\u4e0b\u548c\u4ee5\u53ca\\(Darbux\\)\u4e0a\u4e0b\u79ef\u5206<ul> <li>\u5206\u5272\u52a0\u7ec6\uff0c\u4e0a\u548c\u9012\u51cf\uff0c\u4e0b\u548c\u9012\u52a0</li> </ul> </li> <li>\u53ef\u79ef\u6761\u4ef6</li> <li>\u8bbe\\(f \\in R[a,b]\\),\u5219\\(f\\)\u5728\\([a,b]\\)\u6709\u754c</li> <li>\u53ef\u79ef\u7684\u7b2c\u4e00\u5145\u5206\u5fc5\u8981\u6761\u4ef6:\u6709\u754c\u51fd\u6570\\(f\\in R[a,b] \\Longleftrightarrow \\lim_{\\left \\| p\\right\\| \\rightarrow 0} \\sum_{i = 1}^n \\omega_i \\Delta x_i = 0\\)</li> <li>\u53ef\u79ef\u7684\u7b2c\u4e8c\u5145\u5206\u5fc5\u8981\u6761\u4ef6\uff1a\u6709\u754c\u51fd\u6570\\(f\\in [a,b] \\Longleftrightarrow\\)\\(\\forall \\varepsilon &gt; 0,\\exists P,s.t.\\sum_P\\omega_i \\Delta x_i &lt;\\varepsilon.\\)</li> <li>\u53ef\u79ef\u7684\u7b2c\u4e09\u5145\u5206\u5fc5\u8981\u6761\u4ef6\uff1a\u6709\u754c\u51fd\u6570 \\(f \\in R[a,b] \\Longleftrightarrow \\forall \\varepsilon,\\eta &gt; 0,\\exists P\uff0cs.t.\\sum\\Delta x_{\\omega \\ge\\eta} &lt; \\varepsilon\\)</li> <li>\u547d\u9898\uff1a\u8bbe\u51fd\u6570f\u5728[a,b]\u4e0a\u6709\u754c\uff0c\u5982\u679cf\u7684\u6240\u6709\u4e0d\u8fde\u7eed\u70b9\u53ef\u4ee5\u7528\u603b\u957f\u5ea6\u4efb\u610f\u5c0f\u7684\u81f3\u591a\u53ef\u5217\u4e2a\u5f00\u533a\u95f4\u8986\u76d6\uff0c\u5219\\(f \\in R[a,b]\\)</li> <li>\u53ef\u79ef\u51fd\u6570\u7c7b</li> <li>\\(\u82e5f \\in C[a,b],\u5219f \\in R[a,b]\\)</li> <li>\u8bbe\\(f\u662f[a,b]\\)\u4e0a\u7684\u6709\u754c\u51fd\u6570\uff0c\u4e14\u6709\u6709\u9650\u4e2a\u95f4\u65ad\u70b9\uff0c\u5219\\(f \\in R[a,b]\\)</li> <li>\u8bbe\\(f\u5728[a,b]\\)\u5355\u8c03\uff0c\u8fd9\\(f \\in R[a,b]\\)</li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_25","title":"\u5b9a\u79ef\u5206\u7684\u6027\u8d28","text":"<ul> <li>\u57fa\u672c\u6027\u8d28\uff1a</li> <li>\u7ebf\u6027</li> <li>\u4e58\u79ef\u53ef\u79ef\u6027</li> <li>\u4fdd\u5e8f\u6027</li> <li>\u7edd\u5bf9\u53ef\u79ef\u6027</li> <li>\u533a\u95f4\u53ef\u52a0\u6027</li> <li>\u79ef\u5206\u7b2c\u4e00\u4e2d\u503c\u5b9a\u7406\uff1a\\(f(x) ,g(x)\\in C[a,b],\u4e14g(x)\u5728\u4e0d\u53d8\u53f7\uff0c\u5219\\exists\\eta,m_f \\le \\eta \\le M_f,s.t.\\int _a^bf(x)dx = \\eta\\int _a^bg(x)dx\\) </li> <li>\u82e5\\(f \\in C[a,b]\\),\u5219 \\(\\exists \\xi \\in [a,b],s.t.\\int_a^bf(x)g(x)dx = f(\\xi)\\int _a^bg(x)dx\\)</li> <li>\u79ef\u5206\u7b2c\u4e8c\u4e2d\u503c\u5b9a\u7406\uff1a</li> <li>Bonnet \u578b\uff1a\u8bbe\\(g(x) \\in R[a,b],\\)<ul> <li>\u82e5\\(f(x)\\)\u5728\\([a,b]\\)\u975e\u8d1f\u9012\u51cf\uff0c\u5219 \\(\\exists \\xi \\in [a,b]\\),\\(s.t.\\int _a^bf(x)g(x)dx = f(a)\\int _a^{\\xi}g(x)dx\\) </li> <li>\u82e5\\(f(x)\\)\u5728\\([a,b]\\)\u975e\u8d1f\u9012\u589e\uff0c\u5219 \\(\\exists \\xi \\in [a,b]\\),\\(s.t. \\int _a^bf(x)g(x)dx = f(b)\\int _{\\xi}^bg(x)dx\\)</li> </ul> </li> <li>Weierstrass\u578b\uff1a<ul> <li>\u8bbe\\(f(x)\\)\u5728\\([a,b]\\)\u5355\u8c03\uff0c\\(g(x)\\in R[a,b]\\),\u5219\\(\\exists \\xi \\in [a,b],s.t.\\int_a^bf(x)g(x)dx = f(a)\\int _a^{\\xi}g(x)dx + f(b)\\int_{\\xi}^bg(x)dx\\)</li> </ul> </li> </ul>"},{"location":"Math/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/#_26","title":"\u5fae\u79ef\u5206\u57fa\u672c\u5b9a\u7406","text":"<ul> <li>Newton-Leibniz\u516c\u5f0f: \\(f(x) \\in R[a,b] \uff0cF(x)= \\int_a^xf(t)dt,x\\in [a,b]\\)\uff0c</li> <li>\\(F(x) \\in C[a,b], \u82e5f(x) \\in C[a,b],\u5219F(x)\\in D[a,b],\u4e14{F}'(x) = f(x)\\)</li> <li>\u5fae\u79ef\u5206\u57fa\u672c\u5b9a\u7406\uff1a</li> <li>\\(\u8bbef(x) \\in c[a,b],F(x)\u4e3af(x)\u7684\u4e00\u4e2a\u539f\u51fd\u6570\uff0c\u5219\u6210\u7acb \\int _a^bf(x)dx = F(b) - F(a)\\)</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/","title":"\u9ad8\u7b49\u4ee3\u6570","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_2","title":"\u884c\u5217\u5f0f","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_3","title":"\u4e8c\u9636\u884c\u5217\u5f0f\u548c\u4e09\u9636\u884c\u5217\u5f0f","text":"<ul> <li>\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff08\u5f85\u5b9a\u7cfb\u6570\u6d88\u5143\u6cd5\uff09\u81ea\u7136\u51fa\u73b0\u7684\u8868\u8fbe\u5f0f </li> <li>\u9012\u5f52\u5b9a\u4e49 </li> <li>\u4f59\u5b50\u5f0f\\(M_{ij}\\)</li> <li>\u4ee3\u6570\u4f59\u5b50\u5f0f\\(A_{ij}=(-1)^{i+j}M_{ij}\\)</li> <li>\u7ec4\u5408\u5b9a\u4e49 </li> <li>\u4e3b\u5bf9\u89d2\u7ebf\uff08\u5de6\u4e0a\u5230\u53f3\u4e0b\u2198\uff09</li> <li>\u4e0a\uff08\u4e0b\uff09\u4e09\u89d2\u884c\u5217\u5f0f\uff08\u5b9a\u4e49\u7528\u6570\u5b66\u63cf\u8ff0\uff09 </li> <li>\u5bf9\u89d2\u77e9\u9635</li> <li>\u8f6c\u7f6e\uff08\u884c\u5217\u4e92\u6362\uff0c\u4e3b\u5bf9\u89d2\u7ebf\u5bf9\u79f0\uff09 </li> <li>\u51e0\u4f55\u610f\u4e49\uff08\\(S_{\\triangle OAB} = \\frac{1}{2} |A_{2 \\times 2} |\\)\uff0c\\(V_{OABC} = \\frac{1}{6}|A_{3 \\times 3}|\\)\u56db\u9762\u4f53\u7684\u4f53\u79ef\uff09 </li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#ndeta-a","title":"n\u9636\u884c\u5217\u5f0f\\(det(A)    |A|\\)\uff08\u9012\u5f52\u5b9a\u4e49  \u6027\u8d28  \u7ec4\u5408\u5b9a\u4e49\uff09","text":"<ul> <li>\u5b9a\u4e49\uff08\u6570\u5f52\u7684\u4f59\u5b50\u9879\u5b9a\u4e49\uff09 </li> <li>\u6027\u8d28 </li> <li>\u4e0a\uff08\u4e0b\uff09\u4e09\u89d2\u884c\u5217\u5f0f\u503c\u7b49\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u5143\u7d20\u4e4b\u79ef </li> <li>\uff08\u500d\u4e58\u53d8\u6362\uff09\u5c06\u884c\u5217\u5f0f\u7684\u67d0\u4e00\u884c\u6216\u8005\u67d0\u4e00\u5217\u4e58\u4ee5\u4e00\u4e2a\u5e38\u6570c\uff0c\u5219\u5f97\u5230\u7684\u884c\u5217\u5f0f\\(|B| = c |A|\\)<ul> <li>\u5982\u679c\u67d0\u4e00\u884c\u6216\u8005\u67d0\u4e00\u5217\u7684\u5143\u7d20\u5168\u4e3a0\u5219\u884c\u5217\u5f0f\u7684\u503c\u4e3a0 </li> </ul> </li> <li>\uff08\u5bf9\u6362\u53d8\u6362\uff09\u5bf9\u6362\u884c\u5217\u5f0f\u7684\u4efb\u610f\u4e0d\u540c\u4e24\u884c\uff08\u5217\uff09\uff0c\u884c\u5217\u5f0f\u7684\u503c\u6539\u53d8\u7b26\u53f7 <ul> <li>\u82e5\u884c\u5217\u5f0f\u7684\u4e24\u884c\uff08\u5217\uff09\u6210\u6bd4\u5217\uff0c\u5219\u884c\u5217\u5f0f\u7684\u503c\u4e3a0</li> </ul> </li> <li>\uff08\u500d\u52a0\u53d8\u6362\uff09\u884c\u5217\u5f0f\u7684\u4e00\u884c\uff08\u5217\uff09\u52a0\u5230\u53e6\u4e00\u884c\uff08\u5217\uff09\u4e0a\uff0c\u884c\u5217\u5f0f\u7684\u503c\u4e0d\u53d8</li> <li>\u884c\u5217\u5f0f\u6309\u7167\u67d0\u4e00\u884c\uff08\u5217\uff09\u76f8\u52a0 \uff08\\(|C| = |A| + |B|,c_{ir}=a_{ir}+b_{ir}\\)\\((i = 1,2,\\cdots,n\\)\uff09\u800c\u5176\u4ed6\u5143\u7d20\u76f8\u540c</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_4","title":"\u884c\u5217\u5f0f\u7684\u5c55\u5f00\u548c\u8f6c\u7f6e","text":"<ul> <li>\u5bf9\u4efb\u610f\u7684\u4e00\u5217\uff08\u884c\uff09\u5c55\u5f00\uff08\u901a\u5e38\u6309\u7167\u7b2c\u4e00\u5217\u5c55\u5f00\uff09<ul> <li>\\(|A| = a_{1r}A_{1r}+a_{2r}A_{2r}+\\cdots+a_{nr}A{nr}\\)\uff08\u5bf9\u4efb\u610f\u7684r\u5217\u5c55\u5f00\uff09</li> <li>\\(\\forall s\\ne t,a_{1r}A_{1s}+a_{2r}A_{2s}+\\cdots+a_{nr}A_{ns} = 0\\)</li> </ul> </li> <li>\u884c\u5217\u5f0f\u8f6c\u7f6e\u540e\u503c\u4e0d\u53d8</li> <li>\\(Cramar\\)\u6cd5\u5219\\(x_i=\\frac{|A_i|}{|A|}\\)\\(A_i\\)\u4e3a\u7b2ci\u5217\u88abb\u66ff\u6362</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_5","title":"\u884c\u5217\u5f0f\u7684\u7b49\u4ef7\u5b9a\u4e49","text":"<ul> <li>\u5b9a\u4e49\uff1a\u5168\u6392\u5217\uff0c\u5168\u6392\u5217\u7684\u96c6\u5408\\(S_n\\), \u9006\u5e8f\u5bf9\uff0c\u9006\u5e8f\u6570\\(N\\)\uff08\u9006\u5e8f\u5bf9\u7684\u603b\u4e2a\u6570\uff09\uff0c\u5076\uff08\u5947\uff09\u6392\u5217</li> </ul> <ul> <li>\u5f15\u7406\uff1a\u5bf9\u6362\u5168\u6392\u5217\u4e2d\u4efb\u610f\u4e24\u4e2a\u6570\uff0c\u5219\u5168\u6392\u5217\u7684\u5947\u5076\u6027\u6539\u53d8\uff08\u5148\u8bc1\u660e\u5bf9\u6362\u76f8\u90bb\u5143\u7d20\u5947\u5076\u6027\u6539\u53d8\uff0c\u518d\u8bf4\u660e\u5bf9\u6362\u4e0d\u76f8\u90bb\u5143\u7d20\u76f8\u5f53\u4e8e\u505a\u4e862\uff08j-i\uff09- 1  \u6b21\u76f8\u90bb\u5bf9\u6362\uff09</li> </ul> <ul> <li>\u5f15\u7406\uff1a\u8bbe\\(n \\ge 2,\\)\\(S_n\\)\u4e2dj\u5947\u5076\u6392\u5217\u5404\u5360\u4e00\u534a</li> <li>\u547d\u9898\uff1a\u8bbe\\((k_1,k_2,\\cdots,k_n)\\in S_n\\),\u5219\\(k_1,k-2,\\cdots,k_n)\\)\u7ecf\u8fc7\\(N(k_1,k_2,\\cdots,k_n)\\)\u6b21\u76f8\u90bb\u5bf9\u6362\u53ef\u4ee5\u53d8\u4e3a\u5e38\u6392\u5217\\((1,2,\\cdots,n)\\)</li> </ul> <p>\u5b9a\u7406</p> <ul> <li>\u5b9a\u7406\uff1a\\(|A| = \\sum_{(k_1,k_2\\cdots,k_n)\\in S_n} (-1)^{N(k_1,k_2,\\cdots,k_n)} a_{k_11}a_{k_22}\\cdots a_{k_nn}\\)\uff08\u884c\u5217\u5f0f\u7684\u7ec4\u5408\u5b9a\u4e49\uff09</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_6","title":"\u77e9\u9635","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_7","title":"\u5b9a\u4e49","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_8","title":"\u8fd0\u7b97","text":"<ul> <li>\u52a0\u51cf\u6cd5 </li> <li>\\((A + B)_{ij} = a_{ij} + b_{ij}\\)\u7c7b\u6bd4\u5411\u91cf\u52a0\u6cd5 </li> <li>\u8fd0\u7b97\u89c4\u5219\uff084\uff09 <ul> <li>\u4ea4\u6362\u5f8b\\(A+B= B+A\\)</li> <li>\u7ed3\u5408\u5f8b\\((A+B)+C=A+(B+C)\\)</li> <li>\u96f6\u5143\\(0+A=A\\)</li> <li>\u8d1f\u5143\\(A+(-A)=0\\)</li> </ul> </li> <li>\u6570\u4e58 </li> <li>\\((cA)_{ij} = ca_{ij}\\)\u6bcf\u4e2a\u5143\u7d20\u52a0\u500d </li> <li>\u8fd0\u7b97\u89c4\u5219\uff085\uff09 <ul> <li>\u5206\u914d\u5f8b\\(c(A+B) = cA+cB\\);\\((c+d)A=cA+dA\\)\uff08\u5de6\u53f3\u5206\u914d\u5f8b\uff09</li> <li>\u7ed3\u5408\u5f8b\\((cd)A=c(dA)\\)</li> <li>\u5355\u4f4d\u5143\\(1 \\cdot A=A\\)</li> <li>\u96f6\u5143\\(0\\cdot A=0\\)</li> </ul> </li> <li>\u77e9\u9635\u7684\u4e58\u6cd5 </li> <li>\\(AB = rowA\\times columeB\\) </li> <li>\u8fd0\u7b97\u89c4\u5219\uff084\uff09 <ul> <li>\u7ed3\u5408\u5f8b\\((AB)C=A(BC)\\)</li> <li>\u5206\u914d\u5f8b\\(A(B+C)=AB+AC\\);\\((A+B)C =AC+BC\\)\uff08\u5de6\u53f3\u5206\u914d\u5f8b\uff09</li> <li>\u4e0e\u6570\u4e58\u7684\u4ea4\u6362 \\(c(AB)=(cA)B=A(cB)\\) </li> <li>\u5355\u4f4d\u77e9\u9635\\(m\\times n ,I_mA=A=AI_n\\)</li> </ul> </li> <li>\u65b9\u9635\u5e42\u7684\u8fd0\u7b97\u89c4\u5219\uff08\u540c\u4e00\u822c\u8fd0\u7b97\uff09\\(A^rA^S=A^{r+s}\\);\\((A^r)^s =A^{rs}\\)</li> <li>\u77e9\u9635\u7684\u8f6c\u7f6e </li> <li>\u5b9a\u4e49 </li> <li>\u8fd0\u7b97\u89c4\u5219\uff084\uff09 <ul> <li>\u4e24\u6b21\u8f6c\u7f6e\u590d\u539f \\((A^\\prime)^\\prime =A\\)</li> <li>\u5206\u914d\u5f8b\\((A+B)^{\\prime}=A^{\\prime}+B^{\\prime}\\)</li> <li>\u6807\u91cf\u4e58\u6cd5\u8f6c\u7f6e \\((cA)^{\\prime}=cA^{\\prime}\\)</li> <li>\u77e9\u9635\u4e58\u6cd5\u8f6c\u7f6e \\((AB)^\\prime = B^\\prime  A^\\prime\\)</li> </ul> </li> <li>\u77e9\u9635\u7684\u5171\u8f6d </li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_9","title":"\u65b9\u9635\u7684\u9006\u9635","text":"<ul> <li>\u9006\u9635\uff0c\u53ef\u9006\u9635\uff08\u975e\u5f02\u9635\uff09\u5947\u5f02\u9635 </li> <li>\u9006\u9635\u552f\u4e00 </li> <li>\u77e9\u9635\u4e58\u6cd5\u7684\u7ed3\u5408\u5f8b </li> <li>\u8fd0\u7b97\u89c4\u5219\uff084\uff09 \\(A\\)\u662f\u975e\u5f02\u9635</li> <li>\u4e24\u6b21\u6c42\u9006\u590d\u539f \\((A^{-1})^{-1} = A\\)<ul> <li>\u77e9\u9635\u4e58\u6cd5\u6c42\u9006 \\((AB)^{-1} = B^{-1}A^{-1}\\)</li> <li>\u6807\u91cf\u4e58\u6cd5\u6c42\u9006\\((cA)^{-1}=c^{-1}A^{-1}\\)</li> <li>\u8f6c\u7f6e\u6c42\u9006 \u00a0\u8f6c\u7f6e\u7684\u9006\u662f\u9006\u7684\u8f6c\u7f6e \\((A^\\prime)^{-1} = (A^{-1})^\\prime\\)</li> </ul> </li> <li>\u4f34\u968f\u77e9\u9635\\((A^*)_{i,j}=A_{ij}\\)(\u4ee3\u6570\u4f59\u5b50\u5f0f) </li> <li>\\(AA^* = A^*A = \\left|A\\right|I_n\\)(\u5bf9\u89d2\u7ebf\u4e0a\u5747\u4e3a\\(|A|\\)\u7684\u5355\u4f4d\u9635)</li> <li>\\(A^{-1} = \\frac{A^*}{\\left|A\\right|}\\)(\\(A\\ne 0\\))(\\(|A|\\ne 0\\)\u5219\\(A\\)\u4e3a\u975e\u5f02\u9635\uff09</li> <li>\\(Cramar\\)\u6cd5\u5219</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_10","title":"\u77e9\u9635\u7684\u521d\u7b49\u53d8\u6362\u4e0e\u521d\u7b49\u77e9\u9635","text":"<ul> <li>\\(Gauss\\)\u6d88\u5143\u6cd5 \uff08\u521d\u7b49\u884c\u53d8\u6362\uff09</li> <li>\u5199\u51fa\u7cfb\u6570\u77e9\u9635\u7684\u589e\u5e7f\u77e9\u9635\\(A^\\sim\\)</li> <li>\u5bf9\u6362\uff0c\u4f7f\u7b2c\u4e00\u884c\uff0c\u7b2c\u4e00\u5217\u5143\u7d20\u4e0d\u4e3a\u96f6</li> <li>\u7b2c\u4e00\u884c\u4e58\u4ee5\u67d0\u4e2a\u6570\u52a0\u5230\u7b2c\u4e8c\u884c\uff0c\u91cd\u590d\u76f4\u5230\u6d88\u53bb\u7b2c\u4e00\u5217\u9664\u7b2c\u4e00\u5217\u7684\u6240\u6709\u5143\u7d20</li> <li>\u91cd\u590d\u64cd\u4f5c</li> <li>\u521d\u7b49\u53d8\u6362 </li> <li>\u5bf9\u6362</li> <li>\u500d\u4e58</li> <li>\u500d\u52a0</li> <li>\u76f8\u62b5 </li> <li>\\(A\\)\u7ecf\u8fc7\u6709\u9650\u6b21\u521d\u7b49\u53d8\u6362\uff08\u884c\u53ca\u5217\uff09\u540e\u53d8\u6210\\(B\\)\uff0c\\(A\\)\u4e0e\\(B\\)\u7b49\u4ef7 \u00a0\\(A\\)\u4e0e\\(B\\)\u76f8\u62b5\\(A\\sim B\\)<ul> <li>\u76f8\u62b5\u5173\u7cfb\u7684\u6027\u8d28\uff1a<ul> <li>\u81ea\u53cd\u6027\uff1a\\(A\\sim A\\)</li> <li>\u5bf9\u79f0\u6027\uff1a\\(A\\sim B\\)\u5219\\(B\\sim A\\)</li> <li>\u4f20\u9012\u6027\uff1a\\(A\\sim B,B\\sim C\\)\u5219\\(A\\sim C\\)</li> </ul> </li> <li>\u4efb\u4e00\u77e9\u9635\u5fc5\u76f8\u62b5\u4e0e\u76f8\u62b5\u6807\u51c6\u5f62<ul> <li>\u4efb\u610f\u4e00\u4e2a\u77e9\u9635\u90fd\u53ef\u4ee5\u7ecf\u8fc7\u521d\u7b49\u53d8\u6362\u5316\u4e3a\u76f8\u62b5\u6807\u51c6\u578b</li> </ul> </li> </ul> </li> <li>\u9636\u68af\u5f62\u77e9\u9635 </li> <li>\u4efb\u4e00\u77e9\u7ecf\u8fc7\u82e5\u5e72\u6b21\u521d\u7b49\u884c\u53d8\u6362\uff0cA\u53ef\u4ee5\u5316\u4e3a\u9636\u68af\u5f62\u77e9\u9635</li> <li>\u521d\u7b49\u77e9\u9635(\u5bf9\u5355\u4f4d\u77e9\u9635\u521d\u7b49\u53d8\u6362) </li> <li>\u5206\u7c7b           - \\(P_{ij}\\)          - \\(P_i(c)\\)          - \\(T_{ij}(c)   row_i\\times c + row_j\\)(\u6539\u53d8\u7684\u662f\u7684\u7b2cj\u884c\uff09</li> <li>\u5de6\u4e58\u884c\u53d8\u6362\uff0c\u53f3\u4e58\u5217\u53d8\u6362 </li> <li>\u77e9\u9635\u521d\u7b49\u77e9\u9635\u53ef\u9006\u4e14\u5176\u9006\u9635\u4ecd\u662f\u540c\u7c7b\u77e9\u9635 </li> <li>\u975e\u5f02\u9635\u521d\u7b49\u53d8\u6362\u540e\u4ecd\u53ef\u9006\uff0c\u5947\u5f02\u521d\u7b49\u53d8\u6362\u540e\u4ecd\u5947\u5f02\uff08\u53cd\u8bc1\uff09 </li> <li>\u521d\u7b49\u77e9\u9635\u884c\u5217\u5f0f           - \\(|P_{ij}|=-1,|P_i(c)|=c;|T_{ij}(c)|=1\\)</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_11","title":"\u77e9\u9635\u4e58\u79ef\u7684\u884c\u5217\u5f0f\u4e0e\u521d\u7b49\u53d8\u6362\u6cd5\u6c42\u9006\u9635","text":"<ul> <li>\\(A\\)\u4e3a\u4e00\u4e2a\\(n\\)\u9636\u53ef\u9006\u9635\uff0c\u5219\u4ec5\u7528\u521d\u7b49\u884c\u53d8\u6362\u6216\u8005\u4ec5\u7528\u521d\u7b49\u5217\u53d8\u6362\u5c31\u53ef\u4ee5\u5c06\u5b83\u5316\u4e3a\u5355\u4f4d\u9635\\(I_n\\)</li> <li> <p>\u4efb\u4e00\\(n\\)\u9636\u975e \u5f02\u9635\u5747\u53ef\u8868\u793a\u6210\u6709\u9650\u4e2a\u521d\u7b49\u77e9\u9635\u7684\u79ef\\(P_m\\dots P_1 A=I_n\\)\\(A=P_1^{-1}\\dots P_m^{-1}\\)</p> </li> <li> <p>\u4e00\u4e2a\\(n\\)\u9636\u65b9\u9635 A \u4e3a\u975e\u5f02\u9635\u7684\u5145\u8981\u6761\u4ef6\u662f\u5b83\u7684\u884c\u5217\u5f0f\u4e0d\u4e3a 0</p> </li> <li>\u4efb\u4f55\u4e00\u4e2a\u77e9\u9635\uff1a\\(P_s\\dots P_1AQ_1\\dots Q_r= D\\)(D\u4e3aA  \u7684\u76f8\u62b5\u6807\u51c6\u578b\uff09</li> <li>\u8bbe\\(A\\)\u4e3a\u4e00\u4e2a\\(n\\)\u9636\u65b9\u9635\uff0c\\(Q\\)\u662f\u4e00\u4e2a\\(n\\)\u9636\u521d\u7b49\u77e9\u9635\uff0c\u5219\\(|QA|=|Q||A|=|AQ|\\)</li> <li>\u975e\u5f02\u9635\u521d\u7b49\u53d8\u6362\u540e\u8ba4\u4e3a\u975e\u5f02\u9635\uff0c\u5947\u5f02\u9635\u521d\u7b49\u53d8\u6362\u540e\u4ecd\u5947\u5f02</li> <li>\\(A\\)\\(B\\)\u90fd\u662f n \u9636\u77e9\u9635\uff0c\u5219\\(|AB|=|A||B|\\)<ul> <li>\\(|A^{-1}|=|A|^{-1}\\)</li> </ul> </li> <li>\u6c42\u77e9\u9635\u7684\u9006\u9635\\((A \\ I_n)\\rightarrow (I_n \\ A^{-1})\\)</li> <li>\u6c42\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u89e3\\((A \\ B)\\rightarrow(I_n \\ A^{-1}B)\\)\u53ea\u8fdb\u884c\u53d8\u6362\uff08\u7531\u4e8eA\u4e3a\u975e\u5f02\u9635\uff0c\u56e0\u6b64\u53ea\u8fdb\u884c\u53d8\u6362\u5219\u53ef\u5316\u4e3a\u5355\u4f4d\u9635\uff09</li> <li>\uff08\u5316\u4e3a\u9636\u68af\u9635\u53ef\u53ea\u901a\u8fc7\u884c\u53d8\u6362\uff0c\u5316\u4e3a\u76f8\u62b5\u6807\u51c6\u578b\u5219\u53ef\u80fd\u7528\u5230\u5217\u53d8\u6362\uff09</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_12","title":"\u5206\u5757\u77e9\u9635","text":"<ul> <li>\u5b9a\u4e49 \u884c\uff08\u5217\uff09\u5206\u5757\u65b9\u5f0f\uff0c\u7b2ci\u5206\u5757\u884c\uff08\u5217\uff09</li> <li>\u76f8\u7b49</li> <li>\u52a0\u6cd5\uff08\u6761\u4ef6\u5177\u6709\u76f8\u540c\u7684\u884c\u5217\u5206\u5757\u65b9\u5f0f\uff09</li> <li>\u6570\u4e58</li> <li>\u77e9\u9635\u4e58\u6cd5 A\u7684\u5217\u5206\u5757\u65b9\u5f0f\u548cB\u7684\u884c\u5206\u5757\u65b9\u5f0f\u76f8\u540c \u5206\u5757\u77e9\u9635\u4e58\u79ef\u548c\u666e\u901a\u77e9\u9635\u7684\u4e58\u79ef\u4e00\u81f4</li> <li>\u8f6c\u7f6e \u5206\u5757\u8f6c\u7f6e\uff0c\u5206\u5757\u5185\u90e8\u518d\u8f6c\u7f6e</li> <li>\u5171\u8f6d \u6bcf\u4e00\u4e2a\u5206\u5757\u7684\u5171\u8f6d</li> <li>\u5206\u5757\u5bf9\u89d2\u77e9\u9635  \\(A_i,B_i\\)\u4e3a\u540c\u9636\u77e9\u9635\\(A = diag\\{A_1,A_2,\\cdots,A_k\\},B=diag\\{B_1,B_2,\\cdots,B_k\\},AB =diag\\{A_1B_1,A_2B_2,\\cdots,A_kB_k\\}\\)</li> <li>\u5206\u5757\u521d\u7b49\u77e9\u9635</li> <li>\u5206\u5757\u521d\u7b49\u77e9\u9635\u662f\u975e\u5f02\u9635\\(P^{-1} _{ij}=P^T_{ij},P^{-1}_i\uff08M\uff09= P_{ij}(M^{-1})\uff0cT^{-1}_{ij}(M)=T_{ij}(M^{-1})\\)</li> <li></li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#caunchy-biolet","title":"Caunchy-Biolet\u5b9a\u7406","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_13","title":"\u7ebf\u6027\u7a7a\u95f4","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_14","title":"\u7ebf\u6027\u7a7a\u95f4","text":"<ul> <li>\u5b9a\u4e49:\\(\\ K\\)\u662f\u4e00\u4e2a\u6570\u57df\uff0c\\(V\\)\u662f\u4e00\u4e2a\u96c6\u5408\u6ee1\u8db3\u516b\u6761\u6027\u8d28\u5219V\u662fK\u4e0a\u7684\u7ebf\u6027\u7a7a\u95f4</li> <li>\u5bf9\u52a0\u6cd5\u548c\u6570\u4e58\u5c01\u95ed(\u9a8c\u8bc1\u5b50\u7a7a\u95f4\uff09</li> <li>\u52a0\u6cd5\uff1a<ul> <li>\u4ea4\u6362\u5f8b</li> <li>\u7ed3\u5408\u5f8b</li> <li>\u96f6\u5143\uff08\u552f\u4e00\u6027\uff09</li> <li>\u8d1f\u5143\uff08\u552f\u4e00\u6027\uff09</li> </ul> </li> <li>\u6570\u4e58<ul> <li>\u5206\u914d\u5f8b\\(k(\\alpha+\\beta)=k\\alpha+k\\beta\\);\\((k+l)\\alpha=k\\alpha+l\\alpha\\)</li> <li>\u7ed3\u5408\u5f8b</li> <li>\u5355\u4f4d\u5143</li> </ul> </li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_15","title":"\u5411\u91cf\u7684\u7ebf\u6027\u5173\u7cfb","text":"<ul> <li>\u7ebf\u6027\u7ec4\u5408\uff08\u7ebf\u6027\u8868\u793a\uff09\\(V\\)\u662f\\(K\\)\u4e0a\u7684\u7ebf\u6027\u7a7a\u95f4\u8bb0\u4e3a\\(V(K)\\)</li> <li>\u6ce8\u610f\\(C(R\uff09\\)\\(\\{1,i\\}\\)\u4e3a\u4e00\u7ec4\u57fa\u4e0e\\(C(C)\\)\\(1\\)\u4e0e\\(i\\)\u7ebf\u6027\u76f8\u5173\uff0c\\(\\{1\\}\\)\u4e3a\u4e00\u7ec4\u57fa\uff08\u56e0\u4e3a\u6b64\u65f6\\(k\\)\u53ef\u4ee5\u53d6\u590d\u6570\uff09\\(\\alpha_1,\\alpha_2\\dots,\\alpha_n,\\beta\\in V ,\\exist k_1,k_2 \\dots k_n\\in K,s.t.\\beta=k_1\\alpha_1+k_2\\alpha_2+\\dots k_n\\alpha_n\\)(\u7ebf\u6027\u8868\u793a\u552f\u4e00\u7684\u5145\u8981\u6761\u4ef6\u662f\\(\\alpha_1,\\alpha_2\\dots,\\alpha_n\\)\u7ebf\u6027\u65e0\u5173\uff09</li> <li>\u7ebf\u6027\u76f8\u5173\u53ca\u7ebf\u6027\u65e0\u5173</li> <li>\u7ebf\u6027\u7ec4\u5408:<ul> <li>\u4e00\u7ec4\u5411\u91cf\u7ebf\u6027\u65e0\u5173\uff0c\u53ea\u6709\u7cfb\u6570\u5168\u4e3a0\u7684\u7ebf\u6027\u7ec4\u5408\u624d\u7b49\u4e8e\u96f6\u5411\u91cf</li> <li>\u4e00\u7ec4\u5411\u91cf\u7ebf\u6027\u76f8\u5173\uff0c\u5b58\u5728\u7cfb\u6570\u4e0d\u5168\u4e3a0\u7684\u7ebf\u6027\u7ec4\u5408\u7b49\u4e8e\u96f6\u5411\u91cf</li> </ul> </li> <li>\u7ebf\u6027\u8868\u793a\uff1a<ul> <li>\u4e00\u7ec4\u5411\u91cf\u7ebf\u6027\u65e0\u5173\uff0c\u4efb\u4e00\u5411\u91cf\u90fd\u4e0d\u80fd\u88ab\u5176\u4ed6\u5411\u91cf\u7ebf\u6027\u8868\u793a</li> <li>\u4e00\u7ec4\u5411\u91cf\u7ebf\u6027\u76f8\u5173\uff0c\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5411\u91cf\u80fd\u88ab\u5176\u4ed6\u5411\u91cf\u7ebf\u6027\u8868\u793a</li> </ul> </li> <li>\u7ebf\u6027\u65b9\u7a0b\u7ec4\\(rank(A) = r = n\\)\u5bf9\u7cfb\u6570\u77e9\u9635\u8fdb\u884c\\(Gauss\\)\u6d88\u5143 \uff08\u521d\u7b49\u884c\u53d8\u6362\uff09\u5316\u4e3a\u9636\u68af\u578b\u77e9\u9635\u3002\u8ba1\u7b97\u884c\u79e9\u5373\u4e3a\u5217\u79e9\uff1b\u9636\u68af\u70b9\u5bf9\u5e94\u7684\u539f\u6765\u7684\u5217\u5411\u91cf\u5373\u4e3a\u5217\u7a7a\u95f4\u7684\u4e00\u7ec4\u57fa<ul> <li>\u4e00\u7ec4\u5217\u5411\u91cf\\(\\{\\alpha_1,\\alpha_2,\\dots,\\alpha_n\\}\\)\u7ebf\u6027\u65e0\u5173\uff0c\\(x_1\\alpha_1+x_2\\alpha_2+\\dots+x_n\\alpha_n = 0\\)\u53ea\u6709\u4e00\u7ec4\u5168\u4e3a0\u7684\u89e3</li> <li>\u4e00\u7ec4\u5217\u5411\u91cf\\(\\{\\alpha_1,\\alpha_2,\\dots,\\alpha_n\\}\\)\u7ebf\u6027\u76f8\u5173\uff0c\\(x_1\\alpha_1+x_2\\alpha_2+\\dots+x_n\\alpha_n = 0\\)\u81f3\u5c11\u6709\u4e00\u7ec4\u4e0d\u5168\u4e3a0\u7684\u89e3 </li> </ul> </li> <li>\u5df2\u77e5\\(\\beta\\)\u80fd\u7531\u4e00\u7ec4\u5411\u91cf\\(\\{\\alpha_1,\\alpha_2,\\dots,\\alpha_n\\}\\)\u7ebf\u6027\u8868\u793a<ul> <li>\u8be5\u7ec4\u5411\u91cf\u7ebf\u6027\u65e0\u5173\\(\\Leftrightarrow\\beta\\in V\\)(\u540c\u4e00\u4e2a\u7ebf\u6027\u7a7a\u95f4\uff09\u7531\u8be5\u7ec4\u5411\u91cf\u7ebf\u6027\u8868\u793a\u7684\u65b9\u5f0f\u552f\u4e00</li> <li>\u8be5\u7ec4\u5411\u91cf\u7ebf\u6027\u76f8\u5173\\(\\Leftrightarrow\\beta\\in V\\)(\u540c\u4e00\u4e2a\u7ebf\u6027\u7a7a\u95f4\uff09\u7531\u8be5\u7ec4\u5411\u91cf\u7ebf\u6027\u8868\u793a\u7684\u65b9\u5f0f\u4e0d\u552f\u4e00</li> </ul> </li> <li>\u5411\u91cf\u7ec4\u7684\u5305\u542b\u5173\u7cfb<ul> <li>\u82e5\u4e00\u7ec4\u5411\u91cf\u7ebf\u6027\u76f8\u5173\uff0c\u5219\u4efb\u4e00\u5305\u542b\u8fd9\u7ec4\u5411\u91cf\u7684\u5411\u91cf\u7ec4\u5fc5\u7ebf\u6027\u76f8\u5173\uff1b</li> <li>\u82e5\u4e00\u7ec4\u5411\u91cf\u7ebf\u6027\u65e0\u5173\uff0c\u5219\u4ece\u8fd9\u7ec4\u5411\u91cf\u4e2d\u4efb\u53d6\u4e00\u7ec4\u5411\u91cf\u5fc5\u7ebf\u6027\u65e0\u5173</li> </ul> </li> <li>\u7ebf\u6027\u8868\u793a\u7684\u4f20\u9012\u6027:\u5411\u91cfA\u4e2d\u5411\u91cf\u53ef\u7531B\u4e2d\u5411\u91cf\u7ebf\u6027\u8868\u793a\uff0cB\u4e2d\u5411\u91cf\u53ef\u7531C\u4e2d\u5411\u91cf\u7ebf\u6027\u8868\u793a\uff0c\u5219A\u4e2d\u5411\u91cf\u53ef\u7531C\u4e2d\u5411\u91cf\u7ebf\u6027\u8868\u793a\u3002</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_16","title":"\u5411\u91cf\u7ec4\u7684\u79e9","text":"<ul> <li>\u6781\u5927\u65e0\u5173\u7ec4\uff1a\u7ebf\u6027\u7a7a\u95f4\\(V\\)\u4e2d\u6709\u4e00\u65cf\u5411\u91cf\\(S\\)\u5b58\u5728\u4e00\u7ec4\u5411\u91cf\\(\\{\\alpha_1,\\alpha_2,\\alpha_3,\\dots \\alpha_r\\}\\)</li> <li>\u7ebf\u6027\u65e0\u5173</li> <li>\u8fd9\u65cf\u5411\u91cf\u4e2d\u7684\u4efb\u4e00\u5411\u91cf\u90fd\u53ef\u4ee5\u88ab\u8fd9\u7ec4\u5411\u91cf\u7ebf\u6027\u8868\u793a.</li> <li>\u5411\u91cf\u65cf**S**\u7684\u6781\u5927\u7ebf\u6027\u65e0\u5173\u7ec4\u6240\u542b\u7684\u5411\u91cf\u4e2a\u6570\u79f0\u4e3a**S  **\u7684\u79e9\uff0c\\(rank(S)\\)</li> <li>\u5b58\u5728\u6027\uff1a\u7531\u6709\u9650\u4e2a\u5411\u91cf\u7ec4\u6210\u7684\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u975e\u96f6\u5411\u91cf\u7684\u5411\u91cf\u65cf\u7684\u6781\u5927\u65e0\u5173\u7ec4\u4e00\u5b9a\u5b58\u5728(\u5bf9S\u7684\u5411\u91cf\u4e2a\u6570\u6570\u5b66\u5f52\u7eb3)</li> </ul> <p>\u547d\u9898</p> <p>\u547d\u9898\uff1a\\(A,B\\)\u662f\\(V\\)\u4e2d\u7684\u4e24\u7ec4\u5411\u91cf\uff0c\\(A\\)\u4e2d\\(r\\)\u4e2a\u5411\u91cf\uff0c\\(B\\)\u4e2d\u6709\\(s\\)\u4e2a\u5411\u91cf\uff0c\u4e14\\(A\\)\u53ef\u7531\\(B\\)\u4e2d\u5411\u91cf\u7ebf\u6027\u8868\u793a\uff08\u53ef\u7528A \u4e2d\u5411\u91cf\u66ff\u6362B\u7684\u7ebf\u6027\u8868\u793a\u7ec4\uff09      - \u82e5A\u4e2d\u5411\u91cf\u7ebf\u6027\u65e0\u5173\uff0c\u5219\u6709 \\(r\\le s\\)      - \u82e5\\(r&gt;s\\),\u5219A\u4e2d\u5411\u91cf\u7ebf\u6027\u76f8\u5173</p> <ul> <li>\u63a8\u8bba\uff1a</li> <li>\uff08\u79e9\u7684\u552f\u4e00\u6027\uff09\u5411\u91cf\u65cf\u7684\u4e24\u7ec4\u6781\u5927\u7ebf\u6027\u65e0\u5173\u7ec4\u7684\u5411\u91cf\u4e2a\u6570\u76f8\u7b49</li> <li> <p>n\u7ef4\u5411\u91cf\u7a7a\u95f4\u4e2d\u4efb\u610f\u8d85\u8fc7n\u4e2a\u7684\u5411\u91cf\u5fc5\u7136\u7ebf\u6027\u76f8\u5173</p> </li> <li> <p>\u7b49\u4ef7</p> </li> <li>A,B\u53ef\u4ee5\u4e92\u76f8\u7ebf\u6027\u8868\u793a\uff0c\u8bb0\u4e3aA~B</li> <li> <p>\u7b49\u4ef7\u7684\u5411\u91cf\u7ec4\u62e5\u6709\u76f8\u540c\u7684\u79e9\uff08\u5229\u7528\u4e0a\u8ff0\uff09</p> </li> <li> <p>\u57fa\u7684\u5224\u5b9a\u5b9a\u7406</p> </li> <li>n\u7ef4\u7ebf\u6027\u7a7a\u95f4\u4e2d\u4efb\u4e00\u8d85\u8fc7n\u4e2a\u5411\u91cf\u7684\u5411\u91cf\u7ec4\u4e00\u5b9a\u7ebf\u6027\u76f8\u5173</li> <li>V\u662fn \u7ef4\u7ebf\u6027\u7a7a\u95f4\uff0c\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00\u7684\u542b\u6709n\u4e2a\u5411\u91cf\u7684\u5411\u91cf\u7ec4\u662fV\u7684\u4e00\u7ec4\u57fa<ul> <li>\u7ebf\u6027\u65e0\u5173\uff08\u8be5\u5411\u91cf\u7ec4\u548c\u4efb\u4e00v\u5fc5\u5b9a\u7ebf\u6027\u76f8\u5173\uff09</li> <li>V\u4e2d\u4efb\u4e00\u5411\u91cf\u5747\u53ef\u7531\u8be5\u5411\u91cf\u7ec4\u7ebf\u6027\u8868\u793a</li> </ul> </li> <li>\u57fa\u7684\u6269\u5145\u5b9a\u7406</li> <li>V \u662fn\u7ef4\u7ebf\u6027\u7a7a\u95f4\uff0c\\(v_1,v_2\\dots,v_m\\)\u662f  V\u4e2dm(m&lt;n)\u4e2a\u7ebf\u6027\u65e0\u5173\u5411\u91cf\uff0c\\(\\{e_1,e_2,\\dots e_n\\}\\)\u662fV \u4e2d\u7684\u4e00\u7ec4\u57fa\uff0c\u5219\u5fc5\u53ef\u5728 \\(\\{e_1,e_2,\\dots,e_n\\}\\)\u4e2d\u9009\u51fa n - m \u4e2a\u5411\u91cf\uff0c\u4f7f\u4e4b\u548c\\(v_1,v_2,\\cdots v_m\\)\u4e00\u8d77\u7ec4\u6210V\u7684\u4e00\u7ec4\u57fa\u3002</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_17","title":"\u77e9\u9635\u7684\u79e9","text":"<ul> <li>\u77e9\u9635\u7684\u884c\u79e9\u548c\u5217\u79e9\u5728\u521d\u7b49\u53d8\u6362\u4e0b\u4e0d\u53d8</li> <li>\\(A = (\\alpha_1 \\alpha_2 \\cdots \\alpha_n );    C(A) = L\\{\\alpha_{j_1},\\alpha{j_2},\\cdots,\\alpha_{j_r}\\}\\)Q\u4e3a\u975e\u5f02\u9635\uff0c\\(QA = (Q\\alpha_1Q \\alpha_2 \\cdots Q\\alpha_n );  C(QA) = L\\{Q\\alpha_{j_1},Q\\alpha{j_2},\\cdots,Q\\alpha_{j_r}\\}\\)</li> </ul> <p>\u521d\u7b49\u884c\u53d8\u6362\u4fdd\u6301\u77e9\u9635\u5217\u5411\u91cf\u7684\u6781\u5927\u65e0\u5173\u7ec4\u7684\u5217\u6307\u6807\u3002</p> <ul> <li>\u884c\u79e9\u7b49\u4e8e\u5217\u79e9\uff08\u8fdb\u884c\u521d\u7b49\u53d8\u6362\u5316\u4e3a\u76f8\u62b5\u6807\u51c6\u578b\uff09</li> <li>\u77e9\u9635\u7684\u8f6c\u7f6e\u79e9\u4e0d\u53d8</li> <li>\u8bbe\\(A\\in M_{m \\times n}(K)\\),\\(P\\)\u4e3am\u9636\u975e\u5f02\u9635\uff0c\\(Q\\)\u4e3an\u9636\u975e\u5f02\u9635\uff0c\u5219\\(r(PAQ )=r(A)\\) (\u4e0e\u975e\u5f02\u9635\u76f8\u4e58\u79e9\u4e0d\u53d8\uff09</li> <li>\\(A\\in M_{m \\times n}(K)\\),\u5b58\u5728\\(P\\)m\u9636\u975e\u5f02\u9635\uff0c\u5b58\u5728\\(Q\\)\u4e3an\u9636\u975e\u5f02\u9635\uff0c\u4f7f\u5f97\\(PAQ = \\begin{bmatrix} I_r&amp; O\\\\ O  &amp;O \\end{bmatrix}\\)(\u76f8\u62b5\u6807\u51c6\u578b\uff09</li> <li>A~B\\(\\Longleftrightarrow\\)r(A) = r(B)</li> <li>A\u4e3an\u9636\u65b9\u9635\uff0cr(A) = n\\(\\Longleftrightarrow\\)A\u4e3a\u975e\u5f02\u9635</li> <li>\u5f15\u7406\uff1aA\u4e3a\u9636\u68af\u77e9\u9635\uff0cA\u7684\u79e9\u7b49\u4e8e\u5176\u975e\u96f6\u884c\u7684\u4e2a\u6570\uff0c\u4e14\u9636\u68af\u70b9\u6240\u5728\u7684\u5217\u5411\u91cf\u662fA\u7684\u5217\u5411\u91cf\u7684\u6781\u5927\u65e0\u5173\u7ec4\u3002</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_18","title":"\u5b50\u7a7a\u95f4","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_19","title":"\u7ebf\u6027\u65b9\u7a0b\u7684\u89e3","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_20","title":"\u7ebf\u6027\u6620\u5c04","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_21","title":"\u6620\u5c04","text":"<p>\u6620\u5c04\\(f\\):\\(A\\longrightarrow B\\)\\(\\forall a\\longrightarrow\\exists1 b\\)</p> <ul> <li>\u6ee1\u5c04:\u82e5\\(Imf =B\\)</li> <li>\u5355\u5c04\uff1a\u82e5\\(a_1\\ne a_2,\\)\u5219\\(f(a_1)\\ne f(a_2)\\)\uff1b\u82e5\\(f(a_1)=f(a_2)\\),\u5219\u5fc5\u6709\\(a_1=a_2\\)</li> <li>\u590d\u5408\u6620\u5c04\uff1a</li> <li>\u9006\u5c04\uff1a</li> <li>\u5f15\u7406\uff1a\u8bbe\\(f:A\\longrightarrow B,\\)\\(f^{-1}\\)\u5b58\u5728\\(\\longleftrightarrow\\)\\(f\\)\u662f\u53cc\u5c04</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_22","title":"\u7ebf\u6027\u6620\u5c04","text":"<ul> <li>\u5b9a\u4e49</li> <li>\u5bf9\u8c61\uff1aV\uff0cU \u4e24\u4e2a\u7ebf\u6027\u7a7a\u95f4\u7684\u6620\u5c04\uff0c\u6ee1\u8db3\u7ebf\u6027\u52a0\u6cd5\u548c\u6570\u4e58\u6027\u8d28</li> <li>\u7279\u6b8a\u6620\u5c04<ul> <li>\u6ee1\u7ebf\u6027\u6620\u5c04</li> <li>\u5355\u7ebf\u6027\u6620\u5c04</li> <li>\u7ebf\u6027\u53d8\u6362</li> <li>\u7ebf\u6027\u540c\u6784</li> <li>\u96f6\u7ebf\u6027\u6620\u5c04</li> <li>\u6052\u7b49\u53d8\u6362</li> </ul> </li> <li>\u547d\u9898\uff1a\\(\\varphi:V\\rightarrow U\\)\u4e3a\u7ebf\u6027\u6620\u5c04</li> <li>\\(\\varphi(O_V) =O_U\\)</li> <li>\u7ebf\u6027\u7ec4\u5408\u7684\u4fdd\u6301\uff1a\\(\\forall\\alpha,\\beta\\in V,k,l\\in K,\\varphi(k\\alpha + l\\beta )=k\\varphi(\\alpha) + l \\varphi(\\beta)\\)</li> <li>\u7ebf\u6027\u540c\u6784\u7684\u9006\u6620\u5c04\u4e5f\u4e3a\u7ebf\u6027\u540c\u6784\uff1a\u82e5\\(\\varphi:V\\rightarrow U\\)\u4e3a\u540c\u6784\uff0c\u5219\\(\\varphi^{-1}\uff1aU\\rightarrow V\\)\u4e5f\u4e3a\u7ebf\u6027\u540c\u6784 \uff08\u53ea\u9700\u8bc1\u660e\u9006\u6620\u5c04\u4fdd\u6301\u7ebf\u6027\u7ec4\u5408\uff09</li> <li>\u7ebf\u6027\u540c\u6784\u7684\u590d\u5408\u4ecd\u4e3a\u7ebf\u6027\u540c\u6784</li> <li>\u7ebf\u6027\u540c\u6784\u63a8\u8bba</li> <li>\u7ebf\u6027\u540c\u6784\u4e3a\u7b49\u4ef7\u5173\u7cfb\uff08\u81ea\u53cd\u6027\uff0c\u5bf9\u79f0\u6027\uff0c\u4f20\u9012\u6027\uff09</li> <li>\u4e24\u4e2a\u7ebf\u6027\u7a7a\u95f4\u4e4b\u95f4\u5b58\u5728\u7ebf\u6027\u540c\u6784\\(\\Longleftrightarrow\\)\u5b83\u4eec\u7684\u7ef4\u6570\u76f8\u7b49</li> </ul>"},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_23","title":"\u7279\u5f81\u503c","text":""},{"location":"Math/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0/#_24","title":"\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf","text":"<ul> <li>\u5b9a\u4e49\uff1a\u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf\u3001\u7279\u5f81\u591a\u9879\u5f0f\\(|\\lambda I_n - A|\\)\u3001\u7279\u5f81\u5b50\u7a7a\u95f4\\((\\lambda  I_n - A) x = 0\\)\u7684\u89e3\u7a7a\u95f4</li> <li>\u82e5B ~ A\uff0c\u5219B\u4e0eA\u5177\u6709\u76f8\u540c\u7684\u7279\u5f81\u591a\u9879\u5f0f\uff0c\u4ece\u800c\u5177\u6709\u76f8\u540c\u7684\u7279\u5f81\u6839(\u8ba1\u91cd\u6570\uff09</li> <li>\\(|\\lambda I_n - A| \u4e3a\\varphi\\)\u7684\u7279\u5f81\u591a\u9879\u5f0f</li> <li>\u4efb\u4e00\u590d\u65b9\u9635\u5fc5\u590d\u76f8\u4f3c\u4e0e\u4e00\u4e2a\u4e0a\u4e09\u89d2\u77e9\u9635</li> <li>\u8bbe\u77e9\u9635A\u662fn\u9636 \u65b9\u9635\uff0c\\(\\lambda_1,\\lambda_2,\\cdots,\\lambda_n\\)\u662fA\u7684\u5168\u90e8\u7279\u5f81\u503c\uff0c\\(f(x)\\)\u662f\u4e00\u4e2a\u591a\u9879\u5f0f\uff0c\u5219\\(f(\\lambda_1),f(\\lambda_2),\\cdots,f(\\lambda_n)\u662ff(A)\\)\u7684\u5168\u90e8\u7279\u5f81\u503c\u3002\uff08\u4e0a\u4e09\u89d2\u9635\u7684\u548c\uff0c\u6570\u4e58\u53ca\u4e58\u65b9\u4ecd\u662f\u4e09\u89d2\u9635\uff09</li> <li>\u8bbeA\u9002\u5408\\(g(x),\u5373g(A) = 0\\)\uff0c\u5219A\u7684\u4efb\u4e00\u7279\u5f81\u503c\\(\\lambda\\)\u4e5f\u9002\u5408\\(g(x),\u5373g(\\lambda) = 0\\).</li> <li>\u975e\u5f02\u77e9\u9635A\u7684\u7279\u5f81\u503c\u4e3a\\(\\lambda_1,\\lambda_2,\\cdots,\\lambda_n\\),\u5219\\(A^{-1}\\)\u7684\u7279\u5f81\u503c\u4e3a$\\lambda_1</li> </ul>"},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/","title":"\u6570\u7406\u65b9\u7a0b\u7684\u5bfc\u51fa","text":""},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/#_2","title":"\u6ce2\u52a8\u65b9\u7a0b(\u632f\u52a8\u65b9\u7a0b)","text":""},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/#1","title":"1. \u4e00 \u7ef4\u6ce2\u52a8\u65b9\u7a0b\u6216\u8005\u5747\u5300\u5f26\u7684\u5fae\u5c0f\u6a2a\u632f\u52a8","text":"<p>\u7269\u7406\u95ee\u9898\u4e0e\u7269\u7406\u89c4\u5f8b</p> <p>\u5bf9\u8c61\uff1a\u4e00\u56fa\u5b9a\u957f\u5ea6\u7684 \u67d4\u8f6f (\u53ea\u80fd\u627f\u53d7\u8f74\u5411\u8f7d\u8377\u538b\u529b\u548c\u62c9\u529b\uff0c\u5ffd\u7565\u5f2f\u77e9\u548c\u526a\u5207\uff0c\u5219\u8f74\u5411\u8f7d\u8377\u7684\u65b9\u5411\u4e0e\u5f26\u53d8\u5f62\u540e\u7684\u5207\u7ebf\u65b9\u5411\u76f8\u4e00\u81f4)\u3001\u5747\u5300 (\u5355\u4f4d\u957f\u5ea6\u7684\u8d28\u91cf\u5bc6\u5ea6\u4e3a\u4e00\u5e38\u6570)\uff0c\u8f7b\u8d28\uff08\u91cd\u529b\u5ffd\u7565\u4e0d\u8ba1\uff09\u7ec6\u5f26\uff0c\u4e24\u7aef\u62c9\u7d27\u3002</p> <p>\u5728**\u5782\u76f4\u4e8e\u5f26\u7ebf\u65b9\u5411**\u65bd\u52a0\u5916\u52a0\u6fc0\u52b1\uff0c\u8ba9\u5176\u79bb\u5f00\u539f\u6765\u5e73\u8861\u4f4d\u7f6e\uff0c\u5c06\u4f5c\u5fae\u5c0f\u7684\u6a2a\u5411\u632f\u52a8\uff0c\u6c42\u5f26\u4e0a\u4e2a\u6bcf\u4e2a\u70b9\u7684\u8fd0\u52a8\u65b9\u7a0b\u3002</p> <p>\u5750\u6807\u7cfb\u7684\u5efa\u7acb\uff1a\u5f53\u5f26\u5728\u5d29\u7d27\u4e0d\u632f\u52a8\u65f6\u662f\u4e00\u6839\u76f4\u7ebf,\u53d6\u8fd9\u76f4\u7ebf\u8bb0\u4f5c\\(x\\)\u8f74\uff08\u7eb5\u5411\uff09\u3002\u5728\u6a2a\u5411\u632f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5f26\u4e0a\u6bcf\u4e2a\u70b9\u7684\u7eb5\u5411\u4f4d\u79fb\u4e3a0\u3002\u5373\u6bcf\u4e2a\u70b9\u7684y\u503c\u53d1\u751f\u53d8\u5316\u3002\\(u(x,t)\\)\u8868\u793a\\(t\\) \u65f6\u523b \\(x\\) \u4f4d\u7f6e\u5904\u7684\u6a2a\u5411\u4f4d\u79fb\uff0c\u5373\\(y = u(x,t)\\) \u5373\u6c42\\(y = u(x,t)\\) </p> <p>\u8fd9\u91cc\u7684\u6a2a\u548c\u7eb5\u7c7b\u6bd4\u6a2a\u6ce2\u548c\u7eb5\u6ce2\u7684\u8d28\u70b9\u632f\u52a8\u65b9\u5411\u3002</p> <p>\u7269\u7406\u89c4\u5f8b\uff1a\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b    </p> <p>\u5fae\u5c0f\u7684\u6a2a\u5411\u632f\u52a8</p> <ul> <li>\u4e0d\u8003\u8651\u5728\u5f20\u529b\u4f5c\u7528\u4e0b\u5f26(\u7ef3)\u7684\u4f38\u957f\u53d8\u5f62\uff08\u6cbf\u8f74\u5411\u7684\u53d8\u5f62\uff09\uff0c \u53ea\u8003\u8651\u5f26(\u7ef3)\u4e0a\u6bcf\u4e2a\u70b9\u7684\u6a2a\u5411\u8fd0\u52a8\u3002</li> <li>\u5f26(\u7ef3) \u7684\u6a2a\u5411\u4f4d\u79fb\u76f8\u5bf9\u4e8e\u5f26(\u7ef3) \u7684\u957f\u5ea6\u6765\u8bf4\uff0c\u662f\u4e2a\u5c0f\u91cf\u3002\u56fe\u4e2d\u5f26\u53d8\u5f62\u540e\u7684\u89d2\u5ea6\\(\\alpha\\)\u975e\u5e38\u5c0f\uff0c \\(\\alpha &lt;&lt; 1\\)\u3002</li> </ul> <p>\u7269\u7406\u65b9\u7a0b\u7684\u5bfc\u51fa</p> <ol> <li>\u5fae\u5143\u6cd5:\u53d6\u5f26\u4e0a\u4e00\u5c0f\u6bb5\u5f27\\(ds\\),\u5728\u5982\u4e0a\u56fe\u6240\u793a\u7684\u5750\u6807\u7cfb\u4e2d\uff0c\\(x\\)\u8868\u793a\u5f26\u4e0a\u67d0\u70b9\u7684\u6c34\u5e73\u4f4d\u7f6e\uff0c\\(\\rho\\)\u4ee3\u8868\u5f26\u7684\u7ebf\u5bc6\u5ea6\u3002\\(u_{tt} = \\frac{\\partial ^2 u}{\\partial t^2}\\)</li> <li>\u5e73\u8861\u65b9\u7a0b: \u6839\u636e\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b: </li> </ol> <ul> <li>\u7eb5\u5411\u65b9\u5411\\(x\\)\u65b9\u5411\u7684\u5e73\u8861\uff1a \\(T_2cos\\alpha_2 - T_1\\alpha_1 = 0\\) </li> <li>\u6a2a\u5411\u65b9\u5411\\(y\\)\u65b9\u5411\u7684\u5e73\u8861\uff1a\\(T_2sin\\alpha_2 - T_1\\alpha_2 = \\rho d_s u_{tt}\\)</li> </ul> <ol> <li> <p>\u5316\u7b80\uff1a</p> </li> <li> <p>x\u65b9\u5411\u7684\u5e73\u8861\uff1a</p> <p>\u6839\u636e\u5c0f\u53d8\u5f62\u5047\u8bbe\uff1a \u6a2a\u5411\u4f4d\u79fb\u76f8\u5bf9\u4e8e\u5f26(\u7ef3) \u7684\u957f\u5ea6\u6765\u8bf4\u662f\u5c0f\u91cf\uff0c\u56fe\u4e2d\u5f26\u53d8\u5f62\u540e\u7684\u89d2\u5ea6\\(\\alpha\\)\u975e\u5e38\u5c0f\uff0c\\(\\alpha&lt;&lt;1\\)\u3002</p> <p>\\(\\alpha_1 &lt;&lt;1,\\cos\\alpha_1\\approx1,\\alpha_2&lt;&lt;1,\\cos\\alpha_2\\approx1\\), \\(\\Rightarrow T_1=T_2=T\\) \u4e0d\u8003\u8651\u8f74\u5411\u8fd0\u52a8\u5f71\u54cd\uff0c\u90a3\u4e48\u5f26\u5185\u5f20\u529b\u4fdd\u6301\u4e0d\u53d8\u3002</p> </li> <li> <p>y\u65b9\u5411\u7684\u5e73\u8861\uff1a</p> <p>\\(T_2\\sin\\alpha_2-T_1\\sin\\alpha_1=(\\rho ds)u_{tt}\\) \u6839\u636e\u5c0f\u53d8\u5f62\u5047\u8bbe\uff1a \u6a2a\u5411\u4f4d\u79fb\u76f8\u5bf9\u4e8e\u5f26(\u7ef3) \u7684\u957f\u5ea6\u6765\u8bf4\u662f\u5c0f\u91cf</p> <p>\\(\\sin\\alpha_1\\approx\\alpha_1\\approx\\tan\\alpha_1=u_x(x,t),\\sin\\alpha_2\\approx\\alpha_2\\approx\\tan\\alpha_2=u_x\\left(x+dx,t\\right)\\)</p> \\[ \\begin{array}{c}T_1=T_2=T\\\\T\\left(\\left.u_x\\right|_{x+dx}-\\left.u_x\\right|_x\\right)=\\rho u_{tt}dx\\end{array} \\] \\[ \\left.u_x\\right|_{x+dx}=u_x\\left|_x+u_{xx}\\right|_xdx+o(dx) \\] <p>\u5ffd\u7565\u9ad8\u9636\u5c0f\u91cf\uff0c\\(T\\)\u4e3a\u5f26\u5185\u5f20\u529b\uff1a\\(\\(Tu_{xx}dx=\\rho u_{tt}dx\\)\\)</p> </li> </ol> <p>\u5f26\u7684\u6a2a\u5411\u632f\u52a8</p> \\[Tu_{xx}=\\rho u_{tt}$$ \u6ce2\u901f\uff1a\u8bb0$a^2  =  \\frac{T}{\\rho}$, $a$\u7684\u91cf\u7eb2\u4e3a\u901f\u5ea6\u91cf\u7eb2\u3002 $$u_{tt} = \\frac{T}{\\rho}u_{xx} = a^2u_{xx}\\]"},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/#2","title":"2.\u4e8c\u7ef4\u6ce2\u52a8\u65b9\u7a0b\u6216\u8005\u8584\u819c\u7684\u5fae\u5c0f\u6a2a\u632f\u52a8","text":"<p>\u7269\u7406\u95ee\u9898\u548c\u7269\u7406\u89c4\u5f8b</p> <p>\u5bf9\u8c61: \u4e00\u5f20\u5747\u5300\u5f20\u7d27\u7684\u8f7b\u8d28\u8584\u819c\uff0c\u79bb\u5f00\u6c34\u5e73\u4f4d\u7f6e\u6cbf\u5782\u76f4\u4e8e\u6c34\u5e73\u4f4d\u7f6e\u7684\u5fae\u5c0f\u632f\u52a8\u3002 \u5750\u6807\u7cfb\u7684\u5efa\u7acb\uff1a\u4ee5\u819c\u7684\u6c34\u5e73\u4f4d\u7f6e(\u5e73\u8861\u72b6\u6001)\u4e3axy\u5e73\u9762\uff0c\u6a2a\u5411\u65b9\u5411\u5373\u4e3a\u5782\u76f4xy\u5e73\u9762\u7684z\u8f74\u3002 \u7528 (x, y) \u8868\u793a\u819c\u7684\u4f4d\u7f6e\uff0cu(x,y,t)\u8868\u793at \u65f6\u523b \u5728(x, y) \u4f4d\u7f6e\u5904\u819c\u7684\u6a2a\u5411\u4f4d\u79fb\u3002</p> <p>\u5982\u56fe1\uff1a \\(\\vec{n} = x\\vec{i} + \\vec{y}j\\)\uff0c \\(\\vec{u}(t) = u(x,y,t)\\vec{k}\\)</p> <p></p> <p>\u7269\u7406\u89c4\u5f8b\uff1a\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b </p> <p>\u548c\u5f26\u95ee\u9898\u4e00\u6837\uff0c \u6839\u636e\u6c34\u5e73\u65b9\u5411\u7684\u529b\u5e73\u8861\uff08\u4efb\u610f\u65b9\u5411\uff09\uff0c\u53ef\u77e5\u819c\u4e0a\u7684\u5f20\u529b\u5904\u5904\u76f8\u540c\uff0c\u8bb0\u5355\u4f4d\u957f\u5ea6\u819c\u4e0a\u7684\u5f20\u529b\uff08\u5207\u7ebf\u65b9\u5411\uff09\u4e3a\\(T\\)\u3002\\(T\\)\u6cbf\u7740u(x,y)\u7684\u5207\u7ebf\u65b9\u5411\u3002</p> <p>\u5fae\u5143\u6cd5\uff1a \u53d6\u5e73\u9762\u4e0a\u7684\u5fae\u5c0f\u5355\u5143 \\(dxdy\\) \u8fdb\u884c\u53d7\u529b\u5e73\u8861\u5206\u6790:</p> <p>\u53d7\u529b\u5206\u6790\uff1a \u6cbf\\(x\\) \u8f74\u65b9\u5411\u4e24\u5bf9\u8fb9\u4e0a\u7531\u5f20\u529b\u5f15\u8d77\u7684\u6a2a\u5411\u5408\u529b\u4e3a(u\u7684\u65b9\u5411\u5373\u6a2a\u5411\u65b9\u5411\u4e3a\u5782\u76f4\u4e8exy\u5e73\u9762\u7684z\u8f74\u65b9\u5411)\uff1a</p> \\[ \\left(Tu_x\\mid_{x+dx}-Tu_x\\mid_x\\right)dy=Tu_{xx}dxdy \\] <p>\u6cbf\\(y\\)\u8f74\u65b9\u5411\u4e24\u5bf9\u8fb9\u4e0a\u7531\u5f20\u529b\u5f15\u8d77\u7684\u6a2a\u5411\u5408\u529b\u4e3a\uff1a</p> \\[ \\left(Tu_y\\mid_{y+dy}-Tu_y \\mid_y\\right)dx=Tu_{yy}dxdy \\] <p>\u5e73\u8861\u65b9\u7a0b\uff1a \u7528 \\(\\rho\\) \u8868\u793a\u5355\u4f4d\u9762\u79ef\u7684\u8d28\u91cf\uff0c\\(T\\)\u8868\u793a\u5f20\u529b\u3002</p> \\[ Tu_{xx}dxdy+Tu_{yy}dxdy=\\rho u_{_{tt}}dxdy \\] <p>\u819c\u7684\u6a2a\u5411\u632f\u52a8 :</p> \\[ u_{tt}=\\frac{T}{\\rho}{u_{xx}+u_{yy}}=\\frac{T}{\\rho}\\Delta_{2}u(x,y)\\] <ul> <li>\u4e8c\u7ef4\u7684\u62c9\u666e\u62c9\u65af\u7b97\u7b26(\u5b50): \\(\\Delta_{2}=\\frac{\\partial^{2}}{\\partial x^{2}}+\\frac{\\partial^{2}}{\\partial y^{2}}\\)</li> <li>\u62c9\u666e\u62c9\u65af\u7b97\u5b50\\(\\Delta\\) \u548c nabla\\(\\nabla\\)\u7b97\u5b50</li> <li>\u8584\u819c\u88ab\u62c9\u4f38\u53d1\u751f\u5fae\u5c0f\u7684\u6a2a\u5411\u7684\u632f\u52a8\uff0c\u4f46\u662f\u5404\u70b9\u7684(x,y)\u4e0d\u53d8\u3002\uff08\u81f3\u4e8e\u662f\u5426\u53d1\u751f\u5fae\u5c0f\u5f62\u53d8\uff0c\u51c6\u786e\u6765\u8bf4\uff0c\u7531\u4e8e\u819c\u4e0a(x,y)\u7684\u8d28\u5fc3\u5bf9\u5e94\u7684z\u5728\u632f\u52a8\uff0c\u56e0\u6b64\u8584\u819c\u53d1\u751f\u4e86\u5f62\u53d8\uff09</li> </ul>"},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/#3","title":"3.\u5747\u5300\u7ec6\u957f\u6746\u7684\u7eb5\u5411\u632f\u52a8","text":"<p>\u7269\u7406\u95ee\u9898\u548c\u7269\u7406\u89c4\u5f8b</p> <p>\u5bf9\u8c61: \u4e00\u6839\u5747\u5300\u7684\u7ec6\u957f\u6746\uff0c\u5bfb\u627e\u6cbf\u8f74\u5411\u7684\u7eb5\u5411\u4f4d\u79fb\u6240\u5e94\u8be5\u9075\u5faa\u7684\u65b9\u7a0b\u3002</p> <p>\u53c2\u6570\u548c\u53d8\u91cf\uff1a \\(x\\) \u8868\u793a\u67d0\u70b9\u7684\u4f4d\u7f6e\uff0c\\(u(x,t)\\) \u8868\u793a \\(t\\)  \u65f6\u523b \\(x\\) \u4f4d\u7f6e\u5904\u70b9\u7684\u7eb5\u5411\u4f4d\u79fb. </p> <p>\u7269\u7406\u89c4\u5f8b\uff1a \u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\u548c\u80e1\u514b\u5b9a\u5f8b</p> <p>\u7eb5\u5411\u632f\u52a8</p> <p>\u6a2a\u622a\u9762\u53d8\u5f62\u540e\u8fd8\u662f\u6a2a\u622a\u9762\uff0c\u6a2a\u622a\u9762\u5f62\u72b6\u4fdd\u6301\u4e0d\u53d8\u3002\u7528\u4f4d\u79fb\u7684\u68af\u5ea6\\(du/dx\\) (\u5e94\u53d8) \u6765\u8868\u5f81\u53d8\u5f62\u7684\u7a0b\u5ea6\u3002\u7528\u5355\u4f4d\u6a2a\u622a\u9762\u4e0a\u7684\u5e73\u5747\u8f7d\u8377\u6765\u8868\u5f81\u53d7\u529b\u60c5\u51b5\u3002</p> <p>\u5206\u6790\u53d8\u5f62\uff1a</p> <p>B \u6bb5\u5de6\u8fb9\u7684\u4f4d\u79fb\u4e3a \\(u(x,t),B\\) \u6bb5\u53f3\u8fb9\u7684\u4f4d\u79fb\u4e3a\\(u(x+dx,t)\\), \u6240\u4ee5 \\(B\\) \u6bb5\u7684\u53d8\u5f62\u91cf\u4e3a\uff1a</p> \\[ u(x+dx,t)-u(x,t)=u_xdx \\] <p>\\(B\\) \u6bb5\u5de6\u8fb9\u7684\u76f8\u5bf9\u53d8\u5f62(\u5355\u4f4d\u957f\u5ea6\u7684\u53d8\u5f62\u91cf)\u4e3a\uff1a \\(u_x(x,t)\\)</p> <p>\\(B\\) \u6bb5\u53f3\u8fb9\u7684\u76f8\u5bf9\u53d8\u5f62(\u5355\u4f4d\u957f\u5ea6\u7684\u53d8\u5f62\u91cf)\u4e3a\uff1a \\(u_x(x+dx,t)\\)\u3002</p> <p>\u53d7\u529b\u5206\u6790\uff1a</p> <p>\u6839\u636e\u80e1\u514b\u5b9a\u5f8b\uff0c B \u6bb5\u5de6\u8fb9\u7531\u4e8e\u53d8\u5f62\u53d7\u5230 A \u6bb5\u5bf9\u5b83\u7684\u4f5c\u7528\u529b\u4e3a\uff1a\\(ESux(x,t)\\);</p> <p>B \u6bb5\u53f3\u8fb9\u7531\u4e8e\u53d8\u5f62\u53d7\u5230 C \u6bb5\u5bf9\u5b83\u7684\u4f5c\u7528\u529b\u4e3a\uff1a\\(ESux(x+dx,t)\\)\u3002</p> <p>\u8fd9\u91ccS\u4e3a\u6746\u7684\u6a2a\u622a\u9762\u79ef\uff0cE\u4e3a\u6750\u6599\u7684\u5f39\u6027\u6a21\u91cf\uff08\u7c7b\u540c\u4e8e\u5f39\u7c27\u7684\u52b2\u5ea6\u7cfb\u6570\uff09\u3002</p> <p>\u5f39\u6027\u4f5c\u7528\u529b\u4e3a\uff1a\\(ES\\frac{du}{dx}\\),   \u5373\u4e3a\u5f39\u6027\u6a21\u91cf\\(\\times\\)\u6a2a\u622a\u9762\u79ef\\(\\times\\)\u5e94\u53d8</p> <p>\u5e73\u8861\u65b9\u7a0b\uff1a  \u6839\u636e\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b</p> \\[\\rho Sdxu_t=ES\\Bigl[u_x(x+dx,t)-u_x(x,t)\\Bigr]=ESu_{xx}dx\\] <p>\\(\\alpha\\) \u5177\u6709\u901f\u5ea6\u91cf\u7eb2\uff0c\u4e5f\u662f\u6ce2\u901f\u3002 \\(a^2=E/\\rho\\)</p> <p>\u6746\u7684\u7eb5\u5411\u632f\u52a8</p> \\[ u_{tt}=\\frac{E}{\\rho} u_{xx} = a^2u_{xx}\\]"},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/#_3","title":"\u6269\u6563\u65b9\u7a0b\u548c\u70ed\u4f20\u5bfc\u65b9\u7a0b","text":""},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/#1_1","title":"1. \u6269\u6563\u65b9\u7a0b","text":"<p>\u7269\u7406\u95ee\u9898\u548c\u7269\u7406\u89c4\u5f8b</p> <p>\u6269\u6563\uff1a \u7531\u4e8e\u7269\u4f53\u5185\u90e8\u7269\u8d28\u6d53\u5ea6\u7684\u5206\u5e03\u4e0d\u5300\uff0c\u5bfc\u81f4\u7269\u8d28\u4ece\u6d53\u5ea6\u9ad8\u7684\u533a\u57df\u5411\u6d53\u5ea6\u4f4e\u7684\u533a\u57df\u8f6c\u79fb\u3002</p> <p>\u7269\u7406\u89c4\u5f8b\uff1a</p> <ul> <li> <p>\u6590\u514b\u7b2c\u4e00\u5b9a\u5f8b(Fick\u2019s first law)\uff1a \u901a\u8fc7\u5355\u4f4d\u9762\u79ef\u7c92\u5b50\u6570\u7387\uff08\u901a\u5e38\u79f0\u4e3a\u7c92\u5b50\u6d41\u901a\u91cf\uff09\u4e0e\u7c92\u5b50\u6d53\u5ea6\u7684\u68af\u5ea6\u6210\u6b63\u6bd4\uff0c\u65b9\u5411\u4e0e\u68af\u5ea6\u65b9\u5411\u76f8\u53cd\uff0c\u5176\u6bd4\u4f8b\u7cfb\u6570\u79f0\u4e3a\u6269\u6563\u7cfb\u6570\u3002</p> </li> <li> <p>\u6269\u6563\u7cfb\u6570(diffusion coefficient)\\(D\\)\u4e0e\u7269\u8d28\u7684\u6027\u6001\u3001\u6e29\u5ea6(\u6e29\u5ea6\u8d8a\u9ad8\uff0c\u6269\u6563\u8d8a\u5feb)\u7b49\u56e0\u7d20\u6709\u5173\u3002</p> </li> <li> <p>\u516c\u5f0f\uff1a</p> </li> </ul> <p>\\(\\(\\mathbf{q} = -D\\nabla u\\)\\)     \u5206\u91cf\u5f62\u5f0f\uff1a</p> <p>\\(\\(q_x= -D\\frac{\\partial{u}}{\\partial{x}}, q_y= -D\\frac{\\partial{u}}{\\partial{y}},q_z= -D\\frac{\\partial{u}}{\\partial{z}}\\)\\) \u6ce8\u610f\u8fd9\u91cc\u7684\\(q_x,q_y,q_z\\)\u8868\u793a\u5206\u91cf\u800c\u4e0d\u662f\u504f\u5fae\u5206\u3002  </p> <ul> <li>\u8d28\u91cf\u5b88\u6052\u5b9a\u5f8b\uff1a\u603b\u8d28\u91cf\uff08\u6216\u8005\u603b\u9897\u7c92\u6570\uff09\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4fdd\u6301\u4e0d\u53d8\u3002 </li> </ul> <p>\u5fae\u5143\uff1a\u53d6\u7a7a\u95f4\u4e00\u4e2a\u5e73\u884c\u516d\u9762\u4f53 </p> <p>\u53c2\u6570\u548c\u53d8\u91cf\uff1a\\(u(x,y,z,t)\\) \u8868\u793a$ (x,y,z)$ \u4f4d\u7f6e\u5728 \\(t\\) \u65f6\u523b\u7684\u6d53\u5ea6\uff0c\\(\\nabla u\\)\u8868\u793a\u67d0\u4e2a\u4f4d\u7f6e\u5904\u6d53\u5ea6\u7684\u68af\u5ea6\u3002 \u603b\u7684\u6d41\u5165\u91cf\uff1a</p> <p>\u5355\u4f4d\u65f6\u95f4\u5185\uff1a</p> <p>\u6cbf\u7740\\(x\\)\u65b9\u5411\u7684**\u51c0**\u6d41\u5165\u91cf\uff1a</p> \\[q_x\\mid_{x} dxdy -q_x\\mid_{x+dx} dxdy   = - \\frac{\\partial{q_x}}{\\partial{x}}dxdydz \\] <p>\u6839\u636eFick's first law\u7684\u5206\u91cf\u5f62\u5f0f\uff0c\\(x\\)\u65b9\u5411\u7684\u51c0\u6d41\u5165\u91cf\u4e5f\u5199\u4f5c\uff1a \\(D\\frac{\\partial^2 u}{\\partial x^2} dxdydz\\)</p> <p>\u56e0\u6b64\u603b\u6d41\u5165\u91cf\uff1a</p> \\[D(\\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial ^2 u}{\\partial y^2}+ \\frac{\\partial ^2 u}{\\partial   z^2})dxdydz\\] <p>\u8d28\u91cf\u5b88\u6052\uff1a</p> \\[\\frac{\\partial u}{\\partial t} dxdydz  = D(\\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial ^2 u}{\\partial y^2}+ \\frac{\\partial ^2 u}{\\partial z^2})dxdydz\\] <p>\u6269\u6563\u65b9\u7a0b</p> \\[u_t= D( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial ^2 u}{\\partial y^2}+ \\frac{\\partial ^2 u}{\\partial z^2}) = D \\Delta_3 u(x,y,z,t) \\]"},{"location":"Math/Mathmatical%20Physics/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E7%9A%84%E5%AF%BC%E5%87%BA/#_4","title":"\u9759\u7535\u573a\u548c\u5f15\u529b\u52bf\u65b9\u7a0b","text":""},{"location":"blog/","title":"Blog","text":""}]}